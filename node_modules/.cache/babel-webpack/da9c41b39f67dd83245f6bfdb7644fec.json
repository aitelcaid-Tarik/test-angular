{"ast":null,"code":"import _toConsumableArray from \"/Users/admin/Desktop/test-Angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"/Users/admin/Desktop/test-Angular/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/admin/Desktop/test-Angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/test-Angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Injectable, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, ChangeDetectorRef, Input, Output, ViewChild, ContentChildren, Directive, HostListener, Optional, Renderer2, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FilterOperator, FilterMatchMode, FilterService, PrimeTemplate, TranslationKeys, PrimeNGConfig, SharedModule } from 'primeng/api';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\nimport { CalendarModule } from 'primeng/calendar';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { ObjectUtils } from 'primeng/utils';\nimport { Subject } from 'rxjs';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'primeng/api';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'primeng/paginator';\nimport * as ɵngcc4 from '@angular/cdk/scrolling';\nimport * as ɵngcc5 from 'primeng/inputtext';\nimport * as ɵngcc6 from 'primeng/inputnumber';\nimport * as ɵngcc7 from '@angular/forms';\nimport * as ɵngcc8 from 'primeng/tristatecheckbox';\nimport * as ɵngcc9 from 'primeng/calendar';\nimport * as ɵngcc10 from 'primeng/button';\nimport * as ɵngcc11 from 'primeng/dropdown';\nvar _c0 = [\"container\"];\nvar _c1 = [\"resizeHelper\"];\nvar _c2 = [\"reorderIndicatorUp\"];\nvar _c3 = [\"reorderIndicatorDown\"];\nvar _c4 = [\"table\"];\nvar _c5 = [\"scrollableView\"];\nvar _c6 = [\"scrollableFrozenView\"];\n\nfunction Table_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelement(1, \"i\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"p-datatable-loading-icon pi-spin \" + ctx_r1.loadingIcon);\n  }\n}\n\nfunction Table_div_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵtemplate(1, Table_div_3_ng_container_1_Template, 1, 0, \"ng-container\", 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.captionTemplate);\n  }\n}\n\nfunction Table_p_paginator_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"p-paginator\", 15);\n    ɵngcc0.ɵɵlistener(\"onPageChange\", function Table_p_paginator_4_Template_p_paginator_onPageChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.onPageChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"rows\", ctx_r3.rows)(\"first\", ctx_r3.first)(\"totalRecords\", ctx_r3.totalRecords)(\"pageLinkSize\", ctx_r3.pageLinks)(\"alwaysShow\", ctx_r3.alwaysShowPaginator)(\"rowsPerPageOptions\", ctx_r3.rowsPerPageOptions)(\"templateLeft\", ctx_r3.paginatorLeftTemplate)(\"templateRight\", ctx_r3.paginatorRightTemplate)(\"dropdownAppendTo\", ctx_r3.paginatorDropdownAppendTo)(\"dropdownScrollHeight\", ctx_r3.paginatorDropdownScrollHeight)(\"currentPageReportTemplate\", ctx_r3.currentPageReportTemplate)(\"showFirstLastIcon\", ctx_r3.showFirstLastIcon)(\"dropdownItemTemplate\", ctx_r3.paginatorDropdownItemTemplate)(\"showCurrentPageReport\", ctx_r3.showCurrentPageReport)(\"showJumpToPageDropdown\", ctx_r3.showJumpToPageDropdown)(\"showPageLinks\", ctx_r3.showPageLinks);\n  }\n}\n\nfunction Table_div_5_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_div_5_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_div_5_tfoot_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c7 = function _c7(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction Table_div_5_tfoot_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tfoot\", 23);\n    ɵngcc0.ɵɵtemplate(1, Table_div_5_tfoot_7_ng_container_1_Template, 1, 0, \"ng-container\", 19);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r17.footerTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c7, ctx_r17.columns));\n  }\n}\n\nfunction Table_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"table\", 17, 18);\n    ɵngcc0.ɵɵtemplate(3, Table_div_5_ng_container_3_Template, 1, 0, \"ng-container\", 19);\n    ɵngcc0.ɵɵelementStart(4, \"thead\", 20);\n    ɵngcc0.ɵɵtemplate(5, Table_div_5_ng_container_5_Template, 1, 0, \"ng-container\", 19);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(6, \"tbody\", 21);\n    ɵngcc0.ɵɵtemplate(7, Table_div_5_tfoot_7_Template, 2, 4, \"tfoot\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.tableStyleClass)(\"ngStyle\", ctx_r4.tableStyle);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.colGroupTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(9, _c7, ctx_r4.columns));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.headerTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(11, _c7, ctx_r4.columns));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"pTableBody\", ctx_r4.columns)(\"pTableBodyTemplate\", ctx_r4.bodyTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.footerTemplate);\n  }\n}\n\nvar _c8 = function _c8(a0) {\n  return {\n    width: a0\n  };\n};\n\nfunction Table_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 28, 29);\n  }\n\n  if (rf & 2) {\n    var ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"pScrollableView\", ctx_r19.frozenColumns)(\"frozen\", true)(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(4, _c8, ctx_r19.frozenWidth))(\"scrollHeight\", ctx_r19.scrollHeight);\n  }\n}\n\nvar _c9 = function _c9(a0, a1) {\n  return {\n    left: a0,\n    width: a1\n  };\n};\n\nfunction Table_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵtemplate(1, Table_div_6_div_1_Template, 2, 6, \"div\", 25);\n    ɵngcc0.ɵɵelement(2, \"div\", 26, 27);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.frozenColumns || ctx_r5.frozenBodyTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"pScrollableView\", ctx_r5.columns)(\"frozen\", false)(\"scrollHeight\", ctx_r5.scrollHeight)(\"ngStyle\", ɵngcc0.ɵɵpureFunction2(5, _c9, ctx_r5.frozenWidth, \"calc(100% - \" + ctx_r5.frozenWidth + \")\"));\n  }\n}\n\nfunction Table_p_paginator_7_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r23 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"p-paginator\", 30);\n    ɵngcc0.ɵɵlistener(\"onPageChange\", function Table_p_paginator_7_Template_p_paginator_onPageChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r22 = ɵngcc0.ɵɵnextContext();\n      return ctx_r22.onPageChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"rows\", ctx_r6.rows)(\"first\", ctx_r6.first)(\"totalRecords\", ctx_r6.totalRecords)(\"pageLinkSize\", ctx_r6.pageLinks)(\"alwaysShow\", ctx_r6.alwaysShowPaginator)(\"rowsPerPageOptions\", ctx_r6.rowsPerPageOptions)(\"templateLeft\", ctx_r6.paginatorLeftTemplate)(\"templateRight\", ctx_r6.paginatorRightTemplate)(\"dropdownAppendTo\", ctx_r6.paginatorDropdownAppendTo)(\"dropdownScrollHeight\", ctx_r6.paginatorDropdownScrollHeight)(\"currentPageReportTemplate\", ctx_r6.currentPageReportTemplate)(\"showFirstLastIcon\", ctx_r6.showFirstLastIcon)(\"dropdownItemTemplate\", ctx_r6.paginatorDropdownItemTemplate)(\"showCurrentPageReport\", ctx_r6.showCurrentPageReport)(\"showJumpToPageDropdown\", ctx_r6.showJumpToPageDropdown)(\"showPageLinks\", ctx_r6.showPageLinks);\n  }\n}\n\nfunction Table_div_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Table_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtemplate(1, Table_div_8_ng_container_1_Template, 1, 0, \"ng-container\", 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.summaryTemplate);\n  }\n}\n\nfunction Table_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 32, 33);\n  }\n}\n\nfunction Table_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 34, 35);\n  }\n}\n\nfunction Table_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 36, 37);\n  }\n}\n\nvar _c10 = function _c10(a1, a2, a3, a4, a5, a6, a7) {\n  return {\n    \"p-datatable p-component\": true,\n    \"p-datatable-hoverable-rows\": a1,\n    \"p-datatable-auto-layout\": a2,\n    \"p-datatable-resizable\": a3,\n    \"p-datatable-resizable-fit\": a4,\n    \"p-datatable-scrollable\": a5,\n    \"p-datatable-flex-scrollable\": a6,\n    \"p-datatable-responsive\": a7\n  };\n};\n\nvar _c11 = [\"pTableBody\", \"\"];\n\nfunction TableBody_ng_container_0_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c12 = function _c12(a0, a1, a2, a3) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2,\n    editing: a3\n  };\n};\n\nfunction TableBody_ng_container_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TableBody_ng_container_0_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 2);\n  }\n\n  if (rf & 2) {\n    var rowData_r6 = ctx.$implicit;\n    var rowIndex_r7 = ctx.index;\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction4(2, _c12, rowData_r6, ctx_r5.dt.paginator ? ctx_r5.dt.first + rowIndex_r7 : rowIndex_r7, ctx_r5.columns, ctx_r5.dt.editMode === \"row\" && ctx_r5.dt.isRowEditing(rowData_r6)));\n  }\n}\n\nfunction TableBody_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TableBody_ng_container_0_ng_template_1_Template, 1, 7, \"ng-template\", 1);\n    ɵngcc0.ɵɵpipe(2, \"slice\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.dt.paginator && !ctx_r0.dt.lazy ? ɵngcc0.ɵɵpipeBind3(2, 2, ctx_r0.dt.filteredValue || ctx_r0.dt.value, ctx_r0.dt.first, ctx_r0.dt.first + ctx_r0.dt.rows) : ctx_r0.dt.filteredValue || ctx_r0.dt.value)(\"ngForTrackBy\", ctx_r0.dt.rowTrackBy);\n  }\n}\n\nfunction TableBody_ng_container_1_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TableBody_ng_container_1_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 2);\n  }\n\n  if (rf & 2) {\n    var rowData_r10 = ctx.$implicit;\n    var rowIndex_r11 = ctx.index;\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", rowData_r10 ? ctx_r9.template : ctx_r9.dt.loadingBodyTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction4(2, _c12, rowData_r10, ctx_r9.dt.paginator ? ctx_r9.dt.first + rowIndex_r11 : rowIndex_r11, ctx_r9.columns, ctx_r9.dt.editMode === \"row\" && ctx_r9.dt.isRowEditing(rowData_r10)));\n  }\n}\n\nfunction TableBody_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TableBody_ng_container_1_ng_template_1_Template, 1, 7, \"ng-template\", 3);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"cdkVirtualForOf\", ctx_r1.dt.filteredValue || ctx_r1.dt.value)(\"cdkVirtualForTrackBy\", ctx_r1.dt.rowTrackBy)(\"cdkVirtualForTemplateCacheSize\", 0);\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c13 = function _c13(a0, a1, a2) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2\n  };\n};\n\nfunction TableBody_ng_container_2_ng_template_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r19 = ɵngcc0.ɵɵnextContext();\n    var rowData_r14 = ctx_r19.$implicit;\n    var rowIndex_r15 = ctx_r19.index;\n    var ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r17.dt.expandedRowTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(2, _c13, rowData_r14, ctx_r17.dt.paginator ? ctx_r17.dt.first + rowIndex_r15 : rowIndex_r15, ctx_r17.columns));\n  }\n}\n\nvar _c14 = function _c14(a0, a1, a2, a3, a4) {\n  return {\n    $implicit: a0,\n    rowIndex: a1,\n    columns: a2,\n    expanded: a3,\n    editing: a4\n  };\n};\n\nfunction TableBody_ng_container_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TableBody_ng_container_2_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 2);\n    ɵngcc0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_ng_container_1_Template, 2, 6, \"ng-container\", 0);\n  }\n\n  if (rf & 2) {\n    var rowData_r14 = ctx.$implicit;\n    var rowIndex_r15 = ctx.index;\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r13.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction5(3, _c14, rowData_r14, ctx_r13.dt.paginator ? ctx_r13.dt.first + rowIndex_r15 : rowIndex_r15, ctx_r13.columns, ctx_r13.dt.isRowExpanded(rowData_r14), ctx_r13.dt.editMode === \"row\" && ctx_r13.dt.isRowEditing(rowData_r14)));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.dt.isRowExpanded(rowData_r14));\n  }\n}\n\nfunction TableBody_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TableBody_ng_container_2_ng_template_1_Template, 2, 9, \"ng-template\", 1);\n    ɵngcc0.ɵɵpipe(2, \"slice\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.dt.paginator && !ctx_r2.dt.lazy ? ɵngcc0.ɵɵpipeBind3(2, 2, ctx_r2.dt.filteredValue || ctx_r2.dt.value, ctx_r2.dt.first, ctx_r2.dt.first + ctx_r2.dt.rows) : ctx_r2.dt.filteredValue || ctx_r2.dt.value)(\"ngForTrackBy\", ctx_r2.dt.rowTrackBy);\n  }\n}\n\nfunction TableBody_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c15 = function _c15(a0, a1) {\n  return {\n    $implicit: a0,\n    frozen: a1\n  };\n};\n\nfunction TableBody_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TableBody_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.dt.loadingBodyTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c15, ctx_r3.columns, ctx_r3.frozen));\n  }\n}\n\nfunction TableBody_ng_container_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TableBody_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TableBody_ng_container_4_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.dt.emptyMessageTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c15, ctx_r4.columns, ctx_r4.frozen));\n  }\n}\n\nvar _c16 = [\"scrollHeader\"];\nvar _c17 = [\"scrollHeaderBox\"];\nvar _c18 = [\"scrollBody\"];\nvar _c19 = [\"scrollTable\"];\nvar _c20 = [\"scrollFooter\"];\nvar _c21 = [\"scrollFooterBox\"];\nvar _c22 = [\"scrollableAligner\"];\nvar _c23 = [\"pScrollableView\", \"\"];\n\nfunction ScrollableView_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ScrollableView_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ScrollableView_ng_template_9_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ScrollableView_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ScrollableView_ng_template_9_ng_container_0_Template, 1, 0, \"ng-container\", 5);\n  }\n\n  if (rf & 2) {\n    var rowData_r12 = ctx.$implicit;\n    var rowIndex_r13 = ctx.index;\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.dt.frozenRowsTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(2, _c13, rowData_r12, rowIndex_r13, ctx_r4.columns));\n  }\n}\n\nfunction ScrollableView_ng_container_10_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ScrollableView_ng_container_10_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 23, 24);\n  }\n}\n\nvar _c24 = function _c24(a0, a1) {\n  return {\n    \"max-height\": a0,\n    \"overflow-y\": a1\n  };\n};\n\nfunction ScrollableView_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 17, 18);\n    ɵngcc0.ɵɵelementStart(3, \"table\", 19, 20);\n    ɵngcc0.ɵɵtemplate(5, ScrollableView_ng_container_10_ng_container_5_Template, 1, 0, \"ng-container\", 5);\n    ɵngcc0.ɵɵelement(6, \"tbody\", 21);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(7, ScrollableView_ng_container_10_div_7_Template, 2, 0, \"div\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction2(10, _c24, ctx_r5.dt.scrollHeight !== \"flex\" ? ctx_r5.scrollHeight : undefined, !ctx_r5.frozen && ctx_r5.dt.scrollHeight ? \"scroll\" : undefined));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassMap(ctx_r5.dt.tableStyleClass);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r5.dt.tableStyle);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.frozen ? ctx_r5.dt.frozenColGroupTemplate || ctx_r5.dt.colGroupTemplate : ctx_r5.dt.colGroupTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(13, _c7, ctx_r5.columns));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"pTableBody\", ctx_r5.columns)(\"pTableBodyTemplate\", ctx_r5.frozen ? ctx_r5.dt.frozenBodyTemplate || ctx_r5.dt.bodyTemplate : ctx_r5.dt.bodyTemplate)(\"frozen\", ctx_r5.frozen);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.frozen);\n  }\n}\n\nfunction ScrollableView_ng_template_11_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ScrollableView_ng_template_11_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 23, 24);\n  }\n}\n\nfunction ScrollableView_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r25 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 25);\n    ɵngcc0.ɵɵlistener(\"scrolledIndexChange\", function ScrollableView_ng_template_11_Template_cdk_virtual_scroll_viewport_scrolledIndexChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r24 = ɵngcc0.ɵɵnextContext();\n      return ctx_r24.onScrollIndexChange($event);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"table\", 19, 20);\n    ɵngcc0.ɵɵtemplate(3, ScrollableView_ng_template_11_ng_container_3_Template, 1, 0, \"ng-container\", 5);\n    ɵngcc0.ɵɵelement(4, \"tbody\", 21);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(5, ScrollableView_ng_template_11_div_5_Template, 2, 0, \"div\", 22);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"height\", ctx_r7.dt.scrollHeight !== \"flex\" ? ctx_r7.scrollHeight : undefined);\n    ɵngcc0.ɵɵproperty(\"itemSize\", ctx_r7.dt.virtualRowHeight)(\"minBufferPx\", ctx_r7.dt.minBufferPx)(\"maxBufferPx\", ctx_r7.dt.maxBufferPx);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(ctx_r7.dt.tableStyleClass);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r7.dt.tableStyle);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.frozen ? ctx_r7.dt.frozenColGroupTemplate || ctx_r7.dt.colGroupTemplate : ctx_r7.dt.colGroupTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(14, _c7, ctx_r7.columns));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"pTableBody\", ctx_r7.columns)(\"pTableBodyTemplate\", ctx_r7.frozen ? ctx_r7.dt.frozenBodyTemplate || ctx_r7.dt.bodyTemplate : ctx_r7.dt.bodyTemplate)(\"frozen\", ctx_r7.frozen);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.frozen);\n  }\n}\n\nfunction ScrollableView_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ScrollableView_ng_container_20_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c25 = function _c25(a0, a1, a2) {\n  return {\n    \"pi-sort-amount-up-alt\": a0,\n    \"pi-sort-amount-down\": a1,\n    \"pi-sort-alt\": a2\n  };\n};\n\nfunction CellEditor_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction CellEditor_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, CellEditor_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.inputTemplate);\n  }\n}\n\nfunction CellEditor_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction CellEditor_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, CellEditor_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.outputTemplate);\n  }\n}\n\nvar _c26 = [\"box\"];\n\nvar _c27 = function _c27(a1, a2) {\n  return {\n    \"p-radiobutton-box p-component\": true,\n    \"p-highlight\": a1,\n    \"p-disabled\": a2\n  };\n};\n\nvar _c28 = function _c28(a1, a2) {\n  return {\n    \"p-checkbox-box p-component\": true,\n    \"p-highlight\": a1,\n    \"p-disabled\": a2\n  };\n};\n\nvar _c29 = function _c29(a0) {\n  return {\n    \"pi pi-check\": a0\n  };\n};\n\nvar _c30 = function _c30(a1, a2) {\n  return {\n    \"p-checkbox-box\": true,\n    \"p-highlight\": a1,\n    \"p-disabled\": a2\n  };\n};\n\nfunction ColumnFilterFormElement_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c31 = function _c31(a0, a1) {\n  return {\n    $implicit: a0,\n    filterCallback: a1\n  };\n};\n\nfunction ColumnFilterFormElement_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, ColumnFilterFormElement_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.filterTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c31, ctx_r0.filterConstraint.value, ctx_r0.filterCallback));\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"input\", 7);\n    ɵngcc0.ɵɵlistener(\"input\", function ColumnFilterFormElement_ng_template_1_input_1_Template_input_input_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r8.onModelChange($event.target.value);\n    })(\"keydown.enter\", function ColumnFilterFormElement_ng_template_1_input_1_Template_input_keydown_enter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r10.onTextInputEnterKeyDown($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r4.filterConstraint == null ? null : ctx_r4.filterConstraint.value);\n    ɵngcc0.ɵɵattribute(\"placeholder\", ctx_r4.placeholder);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"p-inputNumber\", 8);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template_p_inputNumber_ngModelChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r11.onModelChange($event);\n    })(\"onKeyDown\", function ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template_p_inputNumber_onKeyDown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r13.onNumericInputKeyDown($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r5.filterConstraint == null ? null : ctx_r5.filterConstraint.value)(\"showButtons\", true)(\"minFractionDigits\", ctx_r5.minFractionDigits)(\"maxFractionDigits\", ctx_r5.maxFractionDigits)(\"prefix\", ctx_r5.prefix)(\"suffix\", ctx_r5.suffix)(\"mode\", ctx_r5.currency ? \"currency\" : \"decimal\")(\"locale\", ctx_r5.locale)(\"localeMatcher\", ctx_r5.localeMatcher)(\"currency\", ctx_r5.currency)(\"currencyDisplay\", ctx_r5.currencyDisplay)(\"useGrouping\", ctx_r5.useGrouping);\n    ɵngcc0.ɵɵattribute(\"placeholder\", ctx_r5.placeholder);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_p_triStateCheckbox_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"p-triStateCheckbox\", 9);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function ColumnFilterFormElement_ng_template_1_p_triStateCheckbox_3_Template_p_triStateCheckbox_ngModelChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      var ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r14.onModelChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r6.filterConstraint == null ? null : ctx_r6.filterConstraint.value);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_p_calendar_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r17 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"p-calendar\", 9);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function ColumnFilterFormElement_ng_template_1_p_calendar_4_Template_p_calendar_ngModelChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r17);\n      var ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r16.onModelChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r7.filterConstraint == null ? null : ctx_r7.filterConstraint.value);\n  }\n}\n\nfunction ColumnFilterFormElement_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 3);\n    ɵngcc0.ɵɵtemplate(1, ColumnFilterFormElement_ng_template_1_input_1_Template, 1, 2, \"input\", 4);\n    ɵngcc0.ɵɵtemplate(2, ColumnFilterFormElement_ng_template_1_p_inputNumber_2_Template, 1, 13, \"p-inputNumber\", 5);\n    ɵngcc0.ɵɵtemplate(3, ColumnFilterFormElement_ng_template_1_p_triStateCheckbox_3_Template, 1, 1, \"p-triStateCheckbox\", 6);\n    ɵngcc0.ɵɵtemplate(4, ColumnFilterFormElement_ng_template_1_p_calendar_4_Template, 1, 1, \"p-calendar\", 6);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r2.type);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"text\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"numeric\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"boolean\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"date\");\n  }\n}\n\nvar _c32 = [\"icon\"];\n\nfunction ColumnFilter_p_columnFilterFormElement_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"p-columnFilterFormElement\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"type\", ctx_r0.type)(\"field\", ctx_r0.field)(\"filterConstraint\", ctx_r0.dt.filters[ctx_r0.field])(\"filterTemplate\", ctx_r0.filterTemplate)(\"placeholder\", ctx_r0.placeholder)(\"minFractionDigits\", ctx_r0.minFractionDigits)(\"maxFractionDigits\", ctx_r0.maxFractionDigits)(\"prefix\", ctx_r0.prefix)(\"suffix\", ctx_r0.suffix)(\"locale\", ctx_r0.locale)(\"localeMatcher\", ctx_r0.localeMatcher)(\"currency\", ctx_r0.currency)(\"currencyDisplay\", ctx_r0.currencyDisplay)(\"useGrouping\", ctx_r0.useGrouping);\n  }\n}\n\nvar _c33 = function _c33(a0, a1) {\n  return {\n    \"p-column-filter-menu-button-open\": a0,\n    \"p-column-filter-menu-button-active\": a1\n  };\n};\n\nfunction ColumnFilter_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 6, 7);\n    ɵngcc0.ɵɵlistener(\"click\", function ColumnFilter_button_2_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.toggleMenu();\n    })(\"keydown\", function ColumnFilter_button_2_Template_button_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.onToggleButtonKeyDown($event);\n    });\n    ɵngcc0.ɵɵelement(2, \"span\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(2, _c33, ctx_r1.overlayVisible, ctx_r1.hasFilter()));\n    ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx_r1.overlayVisible);\n  }\n}\n\nvar _c34 = function _c34(a0) {\n  return {\n    \"p-hidden-space\": a0\n  };\n};\n\nfunction ColumnFilter_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 9, 7);\n    ɵngcc0.ɵɵlistener(\"click\", function ColumnFilter_button_3_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.clearFilter();\n    });\n    ɵngcc0.ɵɵelement(2, \"span\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(1, _c34, !ctx_r2.hasRowFilter()));\n  }\n}\n\nfunction ColumnFilter_div_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c35 = function _c35(a0) {\n  return {\n    \"p-highlight\": a0\n  };\n};\n\nfunction ColumnFilter_div_4_ul_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r20 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 19);\n    ɵngcc0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ul_2_li_1_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r20);\n      var matchMode_r17 = ctx.$implicit;\n      var ctx_r19 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r19.onRowMatchModeChange(matchMode_r17.value);\n    })(\"keydown\", function ColumnFilter_div_4_ul_2_li_1_Template_li_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r20);\n      var ctx_r21 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r21.onRowMatchModeKeyDown($event);\n    })(\"keydown.enter\", function ColumnFilter_div_4_ul_2_li_1_Template_li_keydown_enter_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r20);\n      var matchMode_r17 = ctx.$implicit;\n      var ctx_r22 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r22.onRowMatchModeChange(matchMode_r17.value);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var matchMode_r17 = ctx.$implicit;\n    var i_r18 = ctx.index;\n    var ctx_r16 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c35, ctx_r16.isRowMatchModeSelected(matchMode_r17.value)));\n    ɵngcc0.ɵɵattribute(\"tabindex\", i_r18 === 0 ? \"0\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(matchMode_r17.label);\n  }\n}\n\nfunction ColumnFilter_div_4_ul_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r24 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 15);\n    ɵngcc0.ɵɵtemplate(1, ColumnFilter_div_4_ul_2_li_1_Template, 2, 5, \"li\", 16);\n    ɵngcc0.ɵɵelement(2, \"li\", 17);\n    ɵngcc0.ɵɵelementStart(3, \"li\", 18);\n    ɵngcc0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ul_2_Template_li_click_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r24);\n      var ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r23.onRowClearItemClick();\n    })(\"keydown\", function ColumnFilter_div_4_ul_2_Template_li_keydown_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r24);\n      var ctx_r25 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r25.onRowMatchModeKeyDown($event);\n    })(\"keydown.enter\", function ColumnFilter_div_4_ul_2_Template_li_keydown_enter_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r24);\n      var ctx_r26 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r26.onRowClearItemClick();\n    });\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r12.matchModes);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r12.noFilterLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r31 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 27);\n    ɵngcc0.ɵɵelementStart(1, \"p-dropdown\", 28);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function ColumnFilter_div_4_ng_template_3_div_0_Template_p_dropdown_ngModelChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r31);\n      var ctx_r30 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r30.onOperatorChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r27 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"options\", ctx_r27.operatorOptions)(\"ngModel\", ctx_r27.operator);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_2_p_dropdown_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r38 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"p-dropdown\", 33);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function ColumnFilter_div_4_ng_template_3_div_2_p_dropdown_1_Template_p_dropdown_ngModelChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r38);\n      var fieldConstraint_r32 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r36 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r36.onMenuMatchModeChange($event, fieldConstraint_r32);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var fieldConstraint_r32 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r34 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"options\", ctx_r34.matchModes)(\"ngModel\", fieldConstraint_r32.matchMode);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_2_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r42 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 34);\n    ɵngcc0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_div_2_button_3_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r42);\n      var fieldConstraint_r32 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r40 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r40.removeConstraint(fieldConstraint_r32);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r35 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵproperty(\"label\", ctx_r35.removeRuleButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 29);\n    ɵngcc0.ɵɵtemplate(1, ColumnFilter_div_4_ng_template_3_div_2_p_dropdown_1_Template, 1, 2, \"p-dropdown\", 30);\n    ɵngcc0.ɵɵelement(2, \"p-columnFilterFormElement\", 31);\n    ɵngcc0.ɵɵtemplate(3, ColumnFilter_div_4_ng_template_3_div_2_button_3_Template, 1, 1, \"button\", 32);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var fieldConstraint_r32 = ctx.$implicit;\n    var ctx_r28 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r28.showMatchModes && ctx_r28.matchModes);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"type\", ctx_r28.type)(\"field\", ctx_r28.field)(\"filterConstraint\", fieldConstraint_r32)(\"filterTemplate\", ctx_r28.filterTemplate)(\"placeholder\", ctx_r28.placeholder)(\"minFractionDigits\", ctx_r28.minFractionDigits)(\"maxFractionDigits\", ctx_r28.maxFractionDigits)(\"prefix\", ctx_r28.prefix)(\"suffix\", ctx_r28.suffix)(\"locale\", ctx_r28.locale)(\"localeMatcher\", ctx_r28.localeMatcher)(\"currency\", ctx_r28.currency)(\"currencyDisplay\", ctx_r28.currencyDisplay)(\"useGrouping\", ctx_r28.useGrouping);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r28.showRemoveIcon);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r44 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 35);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 36);\n    ɵngcc0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_div_3_Template_button_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r44);\n      var ctx_r43 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r43.addConstraint();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r29 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"label\", ctx_r29.addRuleButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r46 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵtemplate(0, ColumnFilter_div_4_ng_template_3_div_0_Template, 2, 2, \"div\", 20);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 21);\n    ɵngcc0.ɵɵtemplate(2, ColumnFilter_div_4_ng_template_3_div_2_Template, 4, 16, \"div\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, ColumnFilter_div_4_ng_template_3_div_3_Template, 2, 1, \"div\", 23);\n    ɵngcc0.ɵɵelementStart(4, \"div\", 24);\n    ɵngcc0.ɵɵelementStart(5, \"button\", 25);\n    ɵngcc0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_Template_button_click_5_listener() {\n      ɵngcc0.ɵɵrestoreView(_r46);\n      var ctx_r45 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r45.clearFilter();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"button\", 26);\n    ɵngcc0.ɵɵlistener(\"click\", function ColumnFilter_div_4_ng_template_3_Template_button_click_6_listener() {\n      ɵngcc0.ɵɵrestoreView(_r46);\n      var ctx_r47 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r47.applyFilter();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r14.isShowOperator);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r14.fieldConstraints);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r14.isShowAddConstraint);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"label\", ctx_r14.clearButtonLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"label\", ctx_r14.applyButtonLabel);\n  }\n}\n\nfunction ColumnFilter_div_4_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c36 = function _c36(a1) {\n  return {\n    \"p-column-filter-overlay p-component p-fluid\": true,\n    \"p-column-filter-overlay-menu\": a1\n  };\n};\n\nfunction ColumnFilter_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r49 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵlistener(\"@overlayAnimation.start\", function ColumnFilter_div_4_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r49);\n      var ctx_r48 = ɵngcc0.ɵɵnextContext();\n      return ctx_r48.onOverlayAnimationStart($event);\n    })(\"keydown.escape\", function ColumnFilter_div_4_Template_div_keydown_escape_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r49);\n      var ctx_r50 = ɵngcc0.ɵɵnextContext();\n      return ctx_r50.onEscape();\n    });\n    ɵngcc0.ɵɵtemplate(1, ColumnFilter_div_4_ng_container_1_Template, 1, 0, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(2, ColumnFilter_div_4_ul_2_Template, 5, 2, \"ul\", 13);\n    ɵngcc0.ɵɵtemplate(3, ColumnFilter_div_4_ng_template_3_Template, 7, 5, \"ng-template\", null, 14, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(5, ColumnFilter_div_4_ng_container_5_Template, 1, 0, \"ng-container\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r13 = ɵngcc0.ɵɵreference(4);\n\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(8, _c36, ctx_r3.display === \"menu\"))(\"@overlayAnimation\", \"visible\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.headerTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(10, _c7, ctx_r3.field));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.display === \"row\")(\"ngIfElse\", _r13);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.footerTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(12, _c7, ctx_r3.field));\n  }\n}\n\nvar _c37 = function _c37(a0, a1) {\n  return {\n    \"p-column-filter-row\": a0,\n    \"p-column-filter-menu\": a1\n  };\n};\n\nvar TableService = /*#__PURE__*/function () {\n  function TableService() {\n    _classCallCheck(this, TableService);\n\n    this.sortSource = new Subject();\n    this.selectionSource = new Subject();\n    this.contextMenuSource = new Subject();\n    this.valueSource = new Subject();\n    this.totalRecordsSource = new Subject();\n    this.columnsSource = new Subject();\n    this.sortSource$ = this.sortSource.asObservable();\n    this.selectionSource$ = this.selectionSource.asObservable();\n    this.contextMenuSource$ = this.contextMenuSource.asObservable();\n    this.valueSource$ = this.valueSource.asObservable();\n    this.totalRecordsSource$ = this.totalRecordsSource.asObservable();\n    this.columnsSource$ = this.columnsSource.asObservable();\n  }\n\n  _createClass(TableService, [{\n    key: \"onSort\",\n    value: function onSort(sortMeta) {\n      this.sortSource.next(sortMeta);\n    }\n  }, {\n    key: \"onSelectionChange\",\n    value: function onSelectionChange() {\n      this.selectionSource.next();\n    }\n  }, {\n    key: \"onContextMenu\",\n    value: function onContextMenu(data) {\n      this.contextMenuSource.next(data);\n    }\n  }, {\n    key: \"onValueChange\",\n    value: function onValueChange(value) {\n      this.valueSource.next(value);\n    }\n  }, {\n    key: \"onTotalRecordsChange\",\n    value: function onTotalRecordsChange(value) {\n      this.totalRecordsSource.next(value);\n    }\n  }, {\n    key: \"onColumnsChange\",\n    value: function onColumnsChange(columns) {\n      this.columnsSource.next(columns);\n    }\n  }]);\n\n  return TableService;\n}();\n\nTableService.ɵfac = function TableService_Factory(t) {\n  return new (t || TableService)();\n};\n\nTableService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: TableService,\n  factory: TableService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TableService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar Table = /*#__PURE__*/function () {\n  function Table(el, zone, tableService, cd, filterService) {\n    _classCallCheck(this, Table);\n\n    this.el = el;\n    this.zone = zone;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.filterService = filterService;\n    this.pageLinks = 5;\n    this.alwaysShowPaginator = true;\n    this.paginatorPosition = 'bottom';\n    this.paginatorDropdownScrollHeight = '200px';\n    this.currentPageReportTemplate = '{currentPage} of {totalPages}';\n    this.showFirstLastIcon = true;\n    this.showPageLinks = true;\n    this.defaultSortOrder = 1;\n    this.sortMode = 'single';\n    this.resetPageOnSort = true;\n    this.selectionChange = new EventEmitter();\n    this.contextMenuSelectionChange = new EventEmitter();\n    this.contextMenuSelectionMode = \"separate\";\n\n    this.rowTrackBy = function (index, item) {\n      return item;\n    };\n\n    this.lazy = false;\n    this.lazyLoadOnInit = true;\n    this.compareSelectionBy = 'deepEquals';\n    this.csvSeparator = ',';\n    this.exportFilename = 'download';\n    this.filters = {};\n    this.filterDelay = 300;\n    this.expandedRowKeys = {};\n    this.editingRowKeys = {};\n    this.rowExpandMode = 'multiple';\n    this.virtualScrollDelay = 250;\n    this.virtualRowHeight = 28;\n    this.columnResizeMode = 'fit';\n    this.loadingIcon = 'pi pi-spinner';\n    this.showLoader = true;\n    this.stateStorage = 'session';\n    this.editMode = 'cell';\n    this.onRowSelect = new EventEmitter();\n    this.onRowUnselect = new EventEmitter();\n    this.onPage = new EventEmitter();\n    this.onSort = new EventEmitter();\n    this.onFilter = new EventEmitter();\n    this.onLazyLoad = new EventEmitter();\n    this.onRowExpand = new EventEmitter();\n    this.onRowCollapse = new EventEmitter();\n    this.onContextMenuSelect = new EventEmitter();\n    this.onColResize = new EventEmitter();\n    this.onColReorder = new EventEmitter();\n    this.onRowReorder = new EventEmitter();\n    this.onEditInit = new EventEmitter();\n    this.onEditComplete = new EventEmitter();\n    this.onEditCancel = new EventEmitter();\n    this.onHeaderCheckboxToggle = new EventEmitter();\n    this.sortFunction = new EventEmitter();\n    this.firstChange = new EventEmitter();\n    this.rowsChange = new EventEmitter();\n    this.onStateSave = new EventEmitter();\n    this.onStateRestore = new EventEmitter();\n    this._value = [];\n    this._totalRecords = 0;\n    this._first = 0;\n    this.selectionKeys = {};\n    this._sortOrder = 1;\n  }\n\n  _createClass(Table, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this.lazy && this.lazyLoadOnInit) {\n        if (!this.virtualScroll) {\n          this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n\n        if (this.restoringFilter) {\n          this.restoringFilter = false;\n        }\n      }\n\n      this.initialized = true;\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this = this;\n\n      this.templates.forEach(function (item) {\n        switch (item.getType()) {\n          case 'caption':\n            _this.captionTemplate = item.template;\n            break;\n\n          case 'header':\n            _this.headerTemplate = item.template;\n            break;\n\n          case 'body':\n            _this.bodyTemplate = item.template;\n            break;\n\n          case 'loadingbody':\n            _this.loadingBodyTemplate = item.template;\n            break;\n\n          case 'footer':\n            _this.footerTemplate = item.template;\n            break;\n\n          case 'summary':\n            _this.summaryTemplate = item.template;\n            break;\n\n          case 'colgroup':\n            _this.colGroupTemplate = item.template;\n            break;\n\n          case 'rowexpansion':\n            _this.expandedRowTemplate = item.template;\n            break;\n\n          case 'frozenrows':\n            _this.frozenRowsTemplate = item.template;\n            break;\n\n          case 'frozenheader':\n            _this.frozenHeaderTemplate = item.template;\n            break;\n\n          case 'frozenbody':\n            _this.frozenBodyTemplate = item.template;\n            break;\n\n          case 'frozenfooter':\n            _this.frozenFooterTemplate = item.template;\n            break;\n\n          case 'frozencolgroup':\n            _this.frozenColGroupTemplate = item.template;\n            break;\n\n          case 'emptymessage':\n            _this.emptyMessageTemplate = item.template;\n            break;\n\n          case 'paginatorleft':\n            _this.paginatorLeftTemplate = item.template;\n            break;\n\n          case 'paginatorright':\n            _this.paginatorRightTemplate = item.template;\n            break;\n\n          case 'paginatordropdownitem':\n            _this.paginatorDropdownItemTemplate = item.template;\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (this.isStateful() && this.resizableColumns) {\n        this.restoreColumnWidths();\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(simpleChange) {\n      if (simpleChange.value) {\n        if (this.isStateful() && !this.stateRestored) {\n          this.restoreState();\n        }\n\n        this._value = simpleChange.value.currentValue;\n\n        if (!this.lazy) {\n          this.totalRecords = this._value ? this._value.length : 0;\n          if (this.sortMode == 'single' && this.sortField) this.sortSingle();else if (this.sortMode == 'multiple' && this.multiSortMeta) this.sortMultiple();else if (this.hasFilter()) //sort already filters\n            this._filter();\n        }\n\n        this.tableService.onValueChange(simpleChange.value.currentValue);\n      }\n\n      if (simpleChange.columns) {\n        this._columns = simpleChange.columns.currentValue;\n        this.tableService.onColumnsChange(simpleChange.columns.currentValue);\n\n        if (this._columns && this.isStateful() && this.reorderableColumns && !this.columnOrderStateRestored) {\n          this.restoreColumnOrder();\n        }\n      }\n\n      if (simpleChange.sortField) {\n        this._sortField = simpleChange.sortField.currentValue; //avoid triggering lazy load prior to lazy initialization at onInit\n\n        if (!this.lazy || this.initialized) {\n          if (this.sortMode === 'single') {\n            this.sortSingle();\n          }\n        }\n      }\n\n      if (simpleChange.sortOrder) {\n        this._sortOrder = simpleChange.sortOrder.currentValue; //avoid triggering lazy load prior to lazy initialization at onInit\n\n        if (!this.lazy || this.initialized) {\n          if (this.sortMode === 'single') {\n            this.sortSingle();\n          }\n        }\n      }\n\n      if (simpleChange.multiSortMeta) {\n        this._multiSortMeta = simpleChange.multiSortMeta.currentValue;\n\n        if (this.sortMode === 'multiple') {\n          this.sortMultiple();\n        }\n      }\n\n      if (simpleChange.selection) {\n        this._selection = simpleChange.selection.currentValue;\n\n        if (!this.preventSelectionSetterPropagation) {\n          this.updateSelectionKeys();\n          this.tableService.onSelectionChange();\n        }\n\n        this.preventSelectionSetterPropagation = false;\n      }\n    }\n  }, {\n    key: \"updateSelectionKeys\",\n    value: function updateSelectionKeys() {\n      if (this.dataKey && this._selection) {\n        this.selectionKeys = {};\n\n        if (Array.isArray(this._selection)) {\n          var _iterator = _createForOfIteratorHelper(this._selection),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var data = _step.value;\n              this.selectionKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        } else {\n          this.selectionKeys[String(ObjectUtils.resolveFieldData(this._selection, this.dataKey))] = 1;\n        }\n      }\n    }\n  }, {\n    key: \"onPageChange\",\n    value: function onPageChange(event) {\n      this.first = event.first;\n      this.rows = event.rows;\n\n      if (this.lazy) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      }\n\n      this.onPage.emit({\n        first: this.first,\n        rows: this.rows\n      });\n      this.firstChange.emit(this.first);\n      this.rowsChange.emit(this.rows);\n      this.tableService.onValueChange(this.value);\n\n      if (this.isStateful()) {\n        this.saveState();\n      }\n\n      this.anchorRowIndex = null;\n\n      if (this.scrollable) {\n        this.resetScrollTop();\n      }\n    }\n  }, {\n    key: \"sort\",\n    value: function sort(event) {\n      var originalEvent = event.originalEvent;\n\n      if (this.sortMode === 'single') {\n        this._sortOrder = this.sortField === event.field ? this.sortOrder * -1 : this.defaultSortOrder;\n        this._sortField = event.field;\n        this.sortSingle();\n\n        if (this.resetPageOnSort) {\n          this._first = 0;\n          this.firstChange.emit(this._first);\n\n          if (this.scrollable) {\n            this.resetScrollTop();\n          }\n        }\n      }\n\n      if (this.sortMode === 'multiple') {\n        var metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\n        var sortMeta = this.getSortMeta(event.field);\n\n        if (sortMeta) {\n          if (!metaKey) {\n            this._multiSortMeta = [{\n              field: event.field,\n              order: sortMeta.order * -1\n            }];\n\n            if (this.resetPageOnSort) {\n              this._first = 0;\n              this.firstChange.emit(this._first);\n\n              if (this.scrollable) {\n                this.resetScrollTop();\n              }\n            }\n          } else {\n            sortMeta.order = sortMeta.order * -1;\n          }\n        } else {\n          if (!metaKey || !this.multiSortMeta) {\n            this._multiSortMeta = [];\n\n            if (this.resetPageOnSort) {\n              this._first = 0;\n              this.firstChange.emit(this._first);\n            }\n          }\n\n          this._multiSortMeta.push({\n            field: event.field,\n            order: this.defaultSortOrder\n          });\n        }\n\n        this.sortMultiple();\n      }\n\n      if (this.isStateful()) {\n        this.saveState();\n      }\n\n      this.anchorRowIndex = null;\n    }\n  }, {\n    key: \"sortSingle\",\n    value: function sortSingle() {\n      var _this2 = this;\n\n      if (this.sortField && this.sortOrder) {\n        if (this.restoringSort) {\n          this.restoringSort = false;\n        }\n\n        if (this.lazy) {\n          this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        } else if (this.value) {\n          if (this.customSort) {\n            this.sortFunction.emit({\n              data: this.value,\n              mode: this.sortMode,\n              field: this.sortField,\n              order: this.sortOrder\n            });\n          } else {\n            this.value.sort(function (data1, data2) {\n              var value1 = ObjectUtils.resolveFieldData(data1, _this2.sortField);\n              var value2 = ObjectUtils.resolveFieldData(data2, _this2.sortField);\n              var result = null;\n              if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 === 'string' && typeof value2 === 'string') result = value1.localeCompare(value2);else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\n              return _this2.sortOrder * result;\n            });\n            this._value = _toConsumableArray(this.value);\n          }\n\n          if (this.hasFilter()) {\n            this._filter();\n          }\n        }\n\n        var sortMeta = {\n          field: this.sortField,\n          order: this.sortOrder\n        };\n        this.onSort.emit(sortMeta);\n        this.tableService.onSort(sortMeta);\n      }\n    }\n  }, {\n    key: \"sortMultiple\",\n    value: function sortMultiple() {\n      var _this3 = this;\n\n      if (this.multiSortMeta) {\n        if (this.lazy) {\n          this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        } else if (this.value) {\n          if (this.customSort) {\n            this.sortFunction.emit({\n              data: this.value,\n              mode: this.sortMode,\n              multiSortMeta: this.multiSortMeta\n            });\n          } else {\n            this.value.sort(function (data1, data2) {\n              return _this3.multisortField(data1, data2, _this3.multiSortMeta, 0);\n            });\n            this._value = _toConsumableArray(this.value);\n          }\n\n          if (this.hasFilter()) {\n            this._filter();\n          }\n        }\n\n        this.onSort.emit({\n          multisortmeta: this.multiSortMeta\n        });\n        this.tableService.onSort(this.multiSortMeta);\n      }\n    }\n  }, {\n    key: \"multisortField\",\n    value: function multisortField(data1, data2, multiSortMeta, index) {\n      var value1 = ObjectUtils.resolveFieldData(data1, multiSortMeta[index].field);\n      var value2 = ObjectUtils.resolveFieldData(data2, multiSortMeta[index].field);\n      var result = null;\n      if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 == 'string' || value1 instanceof String) {\n        if (value1.localeCompare && value1 != value2) {\n          return multiSortMeta[index].order * value1.localeCompare(value2);\n        }\n      } else {\n        result = value1 < value2 ? -1 : 1;\n      }\n\n      if (value1 == value2) {\n        return multiSortMeta.length - 1 > index ? this.multisortField(data1, data2, multiSortMeta, index + 1) : 0;\n      }\n\n      return multiSortMeta[index].order * result;\n    }\n  }, {\n    key: \"getSortMeta\",\n    value: function getSortMeta(field) {\n      if (this.multiSortMeta && this.multiSortMeta.length) {\n        for (var i = 0; i < this.multiSortMeta.length; i++) {\n          if (this.multiSortMeta[i].field === field) {\n            return this.multiSortMeta[i];\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"isSorted\",\n    value: function isSorted(field) {\n      if (this.sortMode === 'single') {\n        return this.sortField && this.sortField === field;\n      } else if (this.sortMode === 'multiple') {\n        var sorted = false;\n\n        if (this.multiSortMeta) {\n          for (var i = 0; i < this.multiSortMeta.length; i++) {\n            if (this.multiSortMeta[i].field == field) {\n              sorted = true;\n              break;\n            }\n          }\n        }\n\n        return sorted;\n      }\n    }\n  }, {\n    key: \"handleRowClick\",\n    value: function handleRowClick(event) {\n      var target = event.originalEvent.target;\n      var targetNode = target.nodeName;\n      var parentNode = target.parentElement && target.parentElement.nodeName;\n\n      if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' || parentNode == 'INPUT' || parentNode == 'BUTTON' || parentNode == 'A' || DomHandler.hasClass(event.originalEvent.target, 'p-clickable')) {\n        return;\n      }\n\n      if (this.selectionMode) {\n        this.preventSelectionSetterPropagation = true;\n\n        if (this.isMultipleSelectionMode() && event.originalEvent.shiftKey && this.anchorRowIndex != null) {\n          DomHandler.clearSelection();\n\n          if (this.rangeRowIndex != null) {\n            this.clearSelectionRange(event.originalEvent);\n          }\n\n          this.rangeRowIndex = event.rowIndex;\n          this.selectRange(event.originalEvent, event.rowIndex);\n        } else {\n          var rowData = event.rowData;\n          var selected = this.isSelected(rowData);\n          var metaSelection = this.rowTouched ? false : this.metaKeySelection;\n          var dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n          this.anchorRowIndex = event.rowIndex;\n          this.rangeRowIndex = event.rowIndex;\n\n          if (metaSelection) {\n            var metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;\n\n            if (selected && metaKey) {\n              if (this.isSingleSelectionMode()) {\n                this._selection = null;\n                this.selectionKeys = {};\n                this.selectionChange.emit(null);\n              } else {\n                var selectionIndex = this.findIndexInSelection(rowData);\n                this._selection = this.selection.filter(function (val, i) {\n                  return i != selectionIndex;\n                });\n                this.selectionChange.emit(this.selection);\n\n                if (dataKeyValue) {\n                  delete this.selectionKeys[dataKeyValue];\n                }\n              }\n\n              this.onRowUnselect.emit({\n                originalEvent: event.originalEvent,\n                data: rowData,\n                type: 'row'\n              });\n            } else {\n              if (this.isSingleSelectionMode()) {\n                this._selection = rowData;\n                this.selectionChange.emit(rowData);\n\n                if (dataKeyValue) {\n                  this.selectionKeys = {};\n                  this.selectionKeys[dataKeyValue] = 1;\n                }\n              } else if (this.isMultipleSelectionMode()) {\n                if (metaKey) {\n                  this._selection = this.selection || [];\n                } else {\n                  this._selection = [];\n                  this.selectionKeys = {};\n                }\n\n                this._selection = [].concat(_toConsumableArray(this.selection), [rowData]);\n                this.selectionChange.emit(this.selection);\n\n                if (dataKeyValue) {\n                  this.selectionKeys[dataKeyValue] = 1;\n                }\n              }\n\n              this.onRowSelect.emit({\n                originalEvent: event.originalEvent,\n                data: rowData,\n                type: 'row',\n                index: event.rowIndex\n              });\n            }\n          } else {\n            if (this.selectionMode === 'single') {\n              if (selected) {\n                this._selection = null;\n                this.selectionKeys = {};\n                this.selectionChange.emit(this.selection);\n                this.onRowUnselect.emit({\n                  originalEvent: event.originalEvent,\n                  data: rowData,\n                  type: 'row'\n                });\n              } else {\n                this._selection = rowData;\n                this.selectionChange.emit(this.selection);\n                this.onRowSelect.emit({\n                  originalEvent: event.originalEvent,\n                  data: rowData,\n                  type: 'row',\n                  index: event.rowIndex\n                });\n\n                if (dataKeyValue) {\n                  this.selectionKeys = {};\n                  this.selectionKeys[dataKeyValue] = 1;\n                }\n              }\n            } else if (this.selectionMode === 'multiple') {\n              if (selected) {\n                var _selectionIndex = this.findIndexInSelection(rowData);\n\n                this._selection = this.selection.filter(function (val, i) {\n                  return i != _selectionIndex;\n                });\n                this.selectionChange.emit(this.selection);\n                this.onRowUnselect.emit({\n                  originalEvent: event.originalEvent,\n                  data: rowData,\n                  type: 'row'\n                });\n\n                if (dataKeyValue) {\n                  delete this.selectionKeys[dataKeyValue];\n                }\n              } else {\n                this._selection = this.selection ? [].concat(_toConsumableArray(this.selection), [rowData]) : [rowData];\n                this.selectionChange.emit(this.selection);\n                this.onRowSelect.emit({\n                  originalEvent: event.originalEvent,\n                  data: rowData,\n                  type: 'row',\n                  index: event.rowIndex\n                });\n\n                if (dataKeyValue) {\n                  this.selectionKeys[dataKeyValue] = 1;\n                }\n              }\n            }\n          }\n        }\n\n        this.tableService.onSelectionChange();\n\n        if (this.isStateful()) {\n          this.saveState();\n        }\n      }\n\n      this.rowTouched = false;\n    }\n  }, {\n    key: \"handleRowTouchEnd\",\n    value: function handleRowTouchEnd(event) {\n      this.rowTouched = true;\n    }\n  }, {\n    key: \"handleRowRightClick\",\n    value: function handleRowRightClick(event) {\n      if (this.contextMenu) {\n        var rowData = event.rowData;\n\n        if (this.contextMenuSelectionMode === 'separate') {\n          this.contextMenuSelection = rowData;\n          this.contextMenuSelectionChange.emit(rowData);\n          this.onContextMenuSelect.emit({\n            originalEvent: event.originalEvent,\n            data: rowData,\n            index: event.rowIndex\n          });\n          this.contextMenu.show(event.originalEvent);\n          this.tableService.onContextMenu(rowData);\n        } else if (this.contextMenuSelectionMode === 'joint') {\n          this.preventSelectionSetterPropagation = true;\n          var selected = this.isSelected(rowData);\n          var dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n\n          if (!selected) {\n            if (this.isSingleSelectionMode()) {\n              this.selection = rowData;\n              this.selectionChange.emit(rowData);\n            } else if (this.isMultipleSelectionMode()) {\n              this.selection = [rowData];\n              this.selectionChange.emit(this.selection);\n            }\n\n            if (dataKeyValue) {\n              this.selectionKeys[dataKeyValue] = 1;\n            }\n          }\n\n          this.contextMenu.show(event.originalEvent);\n          this.onContextMenuSelect.emit({\n            originalEvent: event,\n            data: rowData,\n            index: event.rowIndex\n          });\n        }\n      }\n    }\n  }, {\n    key: \"selectRange\",\n    value: function selectRange(event, rowIndex) {\n      var rangeStart, rangeEnd;\n\n      if (this.anchorRowIndex > rowIndex) {\n        rangeStart = rowIndex;\n        rangeEnd = this.anchorRowIndex;\n      } else if (this.anchorRowIndex < rowIndex) {\n        rangeStart = this.anchorRowIndex;\n        rangeEnd = rowIndex;\n      } else {\n        rangeStart = rowIndex;\n        rangeEnd = rowIndex;\n      }\n\n      if (this.lazy && this.paginator) {\n        rangeStart -= this.first;\n        rangeEnd -= this.first;\n      }\n\n      var rangeRowsData = [];\n\n      for (var i = rangeStart; i <= rangeEnd; i++) {\n        var rangeRowData = this.filteredValue ? this.filteredValue[i] : this.value[i];\n\n        if (!this.isSelected(rangeRowData)) {\n          rangeRowsData.push(rangeRowData);\n          this._selection = [].concat(_toConsumableArray(this.selection), [rangeRowData]);\n          var dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n\n          if (dataKeyValue) {\n            this.selectionKeys[dataKeyValue] = 1;\n          }\n        }\n      }\n\n      this.onRowSelect.emit({\n        originalEvent: event,\n        data: rangeRowsData,\n        type: 'row'\n      });\n      this.selectionChange.emit(this.selection);\n    }\n  }, {\n    key: \"clearSelectionRange\",\n    value: function clearSelectionRange(event) {\n      var _this4 = this;\n\n      var rangeStart, rangeEnd;\n\n      if (this.rangeRowIndex > this.anchorRowIndex) {\n        rangeStart = this.anchorRowIndex;\n        rangeEnd = this.rangeRowIndex;\n      } else if (this.rangeRowIndex < this.anchorRowIndex) {\n        rangeStart = this.rangeRowIndex;\n        rangeEnd = this.anchorRowIndex;\n      } else {\n        rangeStart = this.rangeRowIndex;\n        rangeEnd = this.rangeRowIndex;\n      }\n\n      var _loop = function _loop(i) {\n        var rangeRowData = _this4.value[i];\n\n        var selectionIndex = _this4.findIndexInSelection(rangeRowData);\n\n        _this4._selection = _this4.selection.filter(function (val, i) {\n          return i != selectionIndex;\n        });\n        var dataKeyValue = _this4.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, _this4.dataKey)) : null;\n\n        if (dataKeyValue) {\n          delete _this4.selectionKeys[dataKeyValue];\n        }\n\n        _this4.onRowUnselect.emit({\n          originalEvent: event,\n          data: rangeRowData,\n          type: 'row'\n        });\n      };\n\n      for (var i = rangeStart; i <= rangeEnd; i++) {\n        _loop(i);\n      }\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(rowData) {\n      if (rowData && this.selection) {\n        if (this.dataKey) {\n          return this.selectionKeys[ObjectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined;\n        } else {\n          if (this.selection instanceof Array) return this.findIndexInSelection(rowData) > -1;else return this.equals(rowData, this.selection);\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"findIndexInSelection\",\n    value: function findIndexInSelection(rowData) {\n      var index = -1;\n\n      if (this.selection && this.selection.length) {\n        for (var i = 0; i < this.selection.length; i++) {\n          if (this.equals(rowData, this.selection[i])) {\n            index = i;\n            break;\n          }\n        }\n      }\n\n      return index;\n    }\n  }, {\n    key: \"toggleRowWithRadio\",\n    value: function toggleRowWithRadio(event, rowData) {\n      this.preventSelectionSetterPropagation = true;\n\n      if (this.selection != rowData) {\n        this._selection = rowData;\n        this.selectionChange.emit(this.selection);\n        this.onRowSelect.emit({\n          originalEvent: event.originalEvent,\n          index: event.rowIndex,\n          data: rowData,\n          type: 'radiobutton'\n        });\n\n        if (this.dataKey) {\n          this.selectionKeys = {};\n          this.selectionKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] = 1;\n        }\n      } else {\n        this._selection = null;\n        this.selectionChange.emit(this.selection);\n        this.onRowUnselect.emit({\n          originalEvent: event.originalEvent,\n          index: event.rowIndex,\n          data: rowData,\n          type: 'radiobutton'\n        });\n      }\n\n      this.tableService.onSelectionChange();\n\n      if (this.isStateful()) {\n        this.saveState();\n      }\n    }\n  }, {\n    key: \"toggleRowWithCheckbox\",\n    value: function toggleRowWithCheckbox(event, rowData) {\n      this.selection = this.selection || [];\n      var selected = this.isSelected(rowData);\n      var dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n      this.preventSelectionSetterPropagation = true;\n\n      if (selected) {\n        var selectionIndex = this.findIndexInSelection(rowData);\n        this._selection = this.selection.filter(function (val, i) {\n          return i != selectionIndex;\n        });\n        this.selectionChange.emit(this.selection);\n        this.onRowUnselect.emit({\n          originalEvent: event.originalEvent,\n          index: event.rowIndex,\n          data: rowData,\n          type: 'checkbox'\n        });\n\n        if (dataKeyValue) {\n          delete this.selectionKeys[dataKeyValue];\n        }\n      } else {\n        this._selection = this.selection ? [].concat(_toConsumableArray(this.selection), [rowData]) : [rowData];\n        this.selectionChange.emit(this.selection);\n        this.onRowSelect.emit({\n          originalEvent: event.originalEvent,\n          index: event.rowIndex,\n          data: rowData,\n          type: 'checkbox'\n        });\n\n        if (dataKeyValue) {\n          this.selectionKeys[dataKeyValue] = 1;\n        }\n      }\n\n      this.tableService.onSelectionChange();\n\n      if (this.isStateful()) {\n        this.saveState();\n      }\n    }\n  }, {\n    key: \"toggleRowsWithCheckbox\",\n    value: function toggleRowsWithCheckbox(event, check) {\n      this._selection = check ? this.filteredValue ? this.filteredValue.slice() : this.value.slice() : [];\n      this.preventSelectionSetterPropagation = true;\n      this.updateSelectionKeys();\n      this.selectionChange.emit(this._selection);\n      this.tableService.onSelectionChange();\n      this.onHeaderCheckboxToggle.emit({\n        originalEvent: event,\n        checked: check\n      });\n\n      if (this.isStateful()) {\n        this.saveState();\n      }\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(data1, data2) {\n      return this.compareSelectionBy === 'equals' ? data1 === data2 : ObjectUtils.equals(data1, data2, this.dataKey);\n    }\n    /* Legacy Filtering for custom elements */\n\n  }, {\n    key: \"filter\",\n    value: function filter(value, field, matchMode) {\n      var _this5 = this;\n\n      if (this.filterTimeout) {\n        clearTimeout(this.filterTimeout);\n      }\n\n      if (!this.isFilterBlank(value)) {\n        this.filters[field] = {\n          value: value,\n          matchMode: matchMode\n        };\n      } else if (this.filters[field]) {\n        delete this.filters[field];\n      }\n\n      this.filterTimeout = setTimeout(function () {\n        _this5._filter();\n\n        _this5.filterTimeout = null;\n      }, this.filterDelay);\n      this.anchorRowIndex = null;\n    }\n  }, {\n    key: \"filterGlobal\",\n    value: function filterGlobal(value, matchMode) {\n      this.filter(value, 'global', matchMode);\n    }\n  }, {\n    key: \"isFilterBlank\",\n    value: function isFilterBlank(filter) {\n      if (filter !== null && filter !== undefined) {\n        if (typeof filter === 'string' && filter.trim().length == 0 || filter instanceof Array && filter.length == 0) return true;else return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_filter\",\n    value: function _filter() {\n      if (!this.restoringFilter) {\n        this.first = 0;\n        this.firstChange.emit(this.first);\n      }\n\n      if (this.lazy) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      } else {\n        if (!this.value) {\n          return;\n        }\n\n        if (!this.hasFilter()) {\n          this.filteredValue = null;\n\n          if (this.paginator) {\n            this.totalRecords = this.value ? this.value.length : 0;\n          }\n        } else {\n          var globalFilterFieldsArray;\n\n          if (this.filters['global']) {\n            if (!this.columns && !this.globalFilterFields) throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');else globalFilterFieldsArray = this.globalFilterFields || this.columns;\n          }\n\n          this.filteredValue = [];\n\n          for (var i = 0; i < this.value.length; i++) {\n            var localMatch = true;\n            var globalMatch = false;\n            var localFiltered = false;\n\n            for (var prop in this.filters) {\n              if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\n                localFiltered = true;\n                var filterField = prop;\n                var filterMeta = this.filters[filterField];\n\n                if (Array.isArray(filterMeta)) {\n                  var _iterator2 = _createForOfIteratorHelper(filterMeta),\n                      _step2;\n\n                  try {\n                    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                      var meta = _step2.value;\n                      localMatch = this.executeLocalFilter(filterField, this.value[i], meta);\n\n                      if (meta.operator === FilterOperator.OR && localMatch || meta.operator === FilterOperator.AND && !localMatch) {\n                        break;\n                      }\n                    }\n                  } catch (err) {\n                    _iterator2.e(err);\n                  } finally {\n                    _iterator2.f();\n                  }\n                } else {\n                  localMatch = this.executeLocalFilter(filterField, this.value[i], filterMeta);\n                }\n\n                if (!localMatch) {\n                  break;\n                }\n              }\n            }\n\n            if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\n              for (var j = 0; j < globalFilterFieldsArray.length; j++) {\n                var globalFilterField = globalFilterFieldsArray[j].field || globalFilterFieldsArray[j];\n                globalMatch = this.filterService.filters[this.filters['global'].matchMode](ObjectUtils.resolveFieldData(this.value[i], globalFilterField), this.filters['global'].value, this.filterLocale);\n\n                if (globalMatch) {\n                  break;\n                }\n              }\n            }\n\n            var matches = void 0;\n\n            if (this.filters['global']) {\n              matches = localFiltered ? localFiltered && localMatch && globalMatch : globalMatch;\n            } else {\n              matches = localFiltered && localMatch;\n            }\n\n            if (matches) {\n              this.filteredValue.push(this.value[i]);\n            }\n          }\n\n          if (this.filteredValue.length === this.value.length) {\n            this.filteredValue = null;\n          }\n\n          if (this.paginator) {\n            this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;\n          }\n        }\n      }\n\n      this.onFilter.emit({\n        filters: this.filters,\n        filteredValue: this.filteredValue || this.value\n      });\n      this.tableService.onValueChange(this.value);\n\n      if (this.isStateful() && !this.restoringFilter) {\n        this.saveState();\n      }\n\n      if (this.restoringFilter) {\n        this.restoringFilter = false;\n      }\n\n      this.cd.markForCheck();\n\n      if (this.scrollable) {\n        this.resetScrollTop();\n      }\n    }\n  }, {\n    key: \"executeLocalFilter\",\n    value: function executeLocalFilter(field, rowData, filterMeta) {\n      var filterValue = filterMeta.value;\n      var filterMatchMode = filterMeta.matchMode || FilterMatchMode.STARTS_WITH;\n      var dataFieldValue = ObjectUtils.resolveFieldData(rowData, field);\n      var filterConstraint = this.filterService.filters[filterMatchMode];\n      return filterConstraint(dataFieldValue, filterValue, this.filterLocale);\n    }\n  }, {\n    key: \"hasFilter\",\n    value: function hasFilter() {\n      var empty = true;\n\n      for (var prop in this.filters) {\n        if (this.filters.hasOwnProperty(prop)) {\n          empty = false;\n          break;\n        }\n      }\n\n      return !empty;\n    }\n  }, {\n    key: \"createLazyLoadMetadata\",\n    value: function createLazyLoadMetadata() {\n      return {\n        first: this.first,\n        rows: this.rows,\n        sortField: this.sortField,\n        sortOrder: this.sortOrder,\n        filters: this.filters,\n        globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n        multiSortMeta: this.multiSortMeta\n      };\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._sortField = null;\n      this._sortOrder = this.defaultSortOrder;\n      this._multiSortMeta = null;\n      this.tableService.onSort(null);\n      this.filteredValue = null;\n      this.filters = {};\n      this.first = 0;\n      this.firstChange.emit(this.first);\n\n      if (this.lazy) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      } else {\n        this.totalRecords = this._value ? this._value.length : 0;\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.clear();\n    }\n  }, {\n    key: \"exportCSV\",\n    value: function exportCSV(options) {\n      var _this6 = this;\n\n      var data;\n      var csv = '';\n      var columns = this.frozenColumns ? [].concat(_toConsumableArray(this.frozenColumns), _toConsumableArray(this.columns)) : this.columns;\n\n      if (options && options.selectionOnly) {\n        data = this.selection || [];\n      } else {\n        data = this.filteredValue || this.value;\n\n        if (this.frozenValue) {\n          data = data ? [].concat(_toConsumableArray(this.frozenValue), _toConsumableArray(data)) : this.frozenValue;\n        }\n      } //headers\n\n\n      for (var i = 0; i < columns.length; i++) {\n        var column = columns[i];\n\n        if (column.exportable !== false && column.field) {\n          csv += '\"' + (column.header || column.field) + '\"';\n\n          if (i < columns.length - 1) {\n            csv += this.csvSeparator;\n          }\n        }\n      } //body\n\n\n      data.forEach(function (record, i) {\n        csv += '\\n';\n\n        for (var _i = 0; _i < columns.length; _i++) {\n          var _column = columns[_i];\n\n          if (_column.exportable !== false && _column.field) {\n            var cellData = ObjectUtils.resolveFieldData(record, _column.field);\n\n            if (cellData != null) {\n              if (_this6.exportFunction) {\n                cellData = _this6.exportFunction({\n                  data: cellData,\n                  field: _column.field\n                });\n              } else cellData = String(cellData).replace(/\"/g, '\"\"');\n            } else cellData = '';\n\n            csv += '\"' + cellData + '\"';\n\n            if (_i < columns.length - 1) {\n              csv += _this6.csvSeparator;\n            }\n          }\n        }\n      });\n      var blob = new Blob([csv], {\n        type: 'text/csv;charset=utf-8;'\n      });\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        navigator.msSaveOrOpenBlob(blob, this.exportFilename + '.csv');\n      } else {\n        var link = document.createElement(\"a\");\n        link.style.display = 'none';\n        document.body.appendChild(link);\n\n        if (link.download !== undefined) {\n          link.setAttribute('href', URL.createObjectURL(blob));\n          link.setAttribute('download', this.exportFilename + '.csv');\n          link.click();\n        } else {\n          csv = 'data:text/csv;charset=utf-8,' + csv;\n          window.open(encodeURI(csv));\n        }\n\n        document.body.removeChild(link);\n      }\n    }\n  }, {\n    key: \"resetScrollTop\",\n    value: function resetScrollTop() {\n      if (this.virtualScroll) this.scrollToVirtualIndex(0);else this.scrollTo({\n        top: 0\n      });\n    }\n  }, {\n    key: \"scrollToVirtualIndex\",\n    value: function scrollToVirtualIndex(index) {\n      if (this.scrollableViewChild) {\n        this.scrollableViewChild.scrollToVirtualIndex(index);\n      }\n\n      if (this.scrollableFrozenViewChild) {\n        this.scrollableFrozenViewChild.scrollToVirtualIndex(index);\n      }\n    }\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(options) {\n      if (this.scrollableViewChild) {\n        this.scrollableViewChild.scrollTo(options);\n      }\n\n      if (this.scrollableFrozenViewChild) {\n        this.scrollableFrozenViewChild.scrollTo(options);\n      }\n    }\n  }, {\n    key: \"updateEditingCell\",\n    value: function updateEditingCell(cell, data, field, index) {\n      this.editingCell = cell;\n      this.editingCellData = data;\n      this.editingCellField = field;\n      this.editingCellRowIndex = index;\n      this.bindDocumentEditListener();\n    }\n  }, {\n    key: \"isEditingCellValid\",\n    value: function isEditingCellValid() {\n      return this.editingCell && DomHandler.find(this.editingCell, '.ng-invalid.ng-dirty').length === 0;\n    }\n  }, {\n    key: \"bindDocumentEditListener\",\n    value: function bindDocumentEditListener() {\n      var _this7 = this;\n\n      if (!this.documentEditListener) {\n        this.documentEditListener = function (event) {\n          if (_this7.editingCell && !_this7.editingCellClick && _this7.isEditingCellValid()) {\n            DomHandler.removeClass(_this7.editingCell, 'p-cell-editing');\n            _this7.editingCell = null;\n\n            _this7.onEditComplete.emit({\n              field: _this7.editingCellField,\n              data: _this7.editingCellData,\n              originalEvent: event,\n              index: _this7.editingCellRowIndex\n            });\n\n            _this7.editingCellField = null;\n            _this7.editingCellData = null;\n            _this7.editingCellRowIndex = null;\n\n            _this7.unbindDocumentEditListener();\n\n            _this7.cd.markForCheck();\n          }\n\n          _this7.editingCellClick = false;\n        };\n\n        document.addEventListener('click', this.documentEditListener);\n      }\n    }\n  }, {\n    key: \"unbindDocumentEditListener\",\n    value: function unbindDocumentEditListener() {\n      if (this.documentEditListener) {\n        document.removeEventListener('click', this.documentEditListener);\n        this.documentEditListener = null;\n      }\n    }\n  }, {\n    key: \"initRowEdit\",\n    value: function initRowEdit(rowData) {\n      var dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n      this.editingRowKeys[dataKeyValue] = true;\n    }\n  }, {\n    key: \"saveRowEdit\",\n    value: function saveRowEdit(rowData, rowElement) {\n      if (DomHandler.find(rowElement, '.ng-invalid.ng-dirty').length === 0) {\n        var dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        delete this.editingRowKeys[dataKeyValue];\n      }\n    }\n  }, {\n    key: \"cancelRowEdit\",\n    value: function cancelRowEdit(rowData) {\n      var dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n      delete this.editingRowKeys[dataKeyValue];\n    }\n  }, {\n    key: \"toggleRow\",\n    value: function toggleRow(rowData, event) {\n      if (!this.dataKey) {\n        throw new Error('dataKey must be defined to use row expansion');\n      }\n\n      var dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n\n      if (this.expandedRowKeys[dataKeyValue] != null) {\n        delete this.expandedRowKeys[dataKeyValue];\n        this.onRowCollapse.emit({\n          originalEvent: event,\n          data: rowData\n        });\n      } else {\n        if (this.rowExpandMode === 'single') {\n          this.expandedRowKeys = {};\n        }\n\n        this.expandedRowKeys[dataKeyValue] = true;\n        this.onRowExpand.emit({\n          originalEvent: event,\n          data: rowData\n        });\n      }\n\n      if (event) {\n        event.preventDefault();\n      }\n\n      if (this.isStateful()) {\n        this.saveState();\n      }\n    }\n  }, {\n    key: \"isRowExpanded\",\n    value: function isRowExpanded(rowData) {\n      return this.expandedRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n    }\n  }, {\n    key: \"isRowEditing\",\n    value: function isRowEditing(rowData) {\n      return this.editingRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n    }\n  }, {\n    key: \"isSingleSelectionMode\",\n    value: function isSingleSelectionMode() {\n      return this.selectionMode === 'single';\n    }\n  }, {\n    key: \"isMultipleSelectionMode\",\n    value: function isMultipleSelectionMode() {\n      return this.selectionMode === 'multiple';\n    }\n  }, {\n    key: \"onColumnResizeBegin\",\n    value: function onColumnResizeBegin(event) {\n      var containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n      this.lastResizerHelperX = event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft;\n      this.onColumnResize(event);\n      event.preventDefault();\n    }\n  }, {\n    key: \"onColumnResize\",\n    value: function onColumnResize(event) {\n      var containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n      DomHandler.addClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n      this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';\n      this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\n      this.resizeHelperViewChild.nativeElement.style.left = event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft + 'px';\n      this.resizeHelperViewChild.nativeElement.style.display = 'block';\n    }\n  }, {\n    key: \"onColumnResizeEnd\",\n    value: function onColumnResizeEnd(event, column) {\n      var delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\n      var columnWidth = column.offsetWidth;\n      var minWidth = parseInt(column.style.minWidth || 15);\n\n      if (columnWidth + delta < minWidth) {\n        delta = minWidth - columnWidth;\n      }\n\n      var newColumnWidth = columnWidth + delta;\n\n      if (newColumnWidth >= minWidth) {\n        if (this.columnResizeMode === 'fit') {\n          var nextColumn = column.nextElementSibling;\n\n          while (!nextColumn.offsetParent) {\n            nextColumn = nextColumn.nextElementSibling;\n          }\n\n          if (nextColumn) {\n            var nextColumnWidth = nextColumn.offsetWidth - delta;\n            var nextColumnMinWidth = nextColumn.style.minWidth || 15;\n\n            if (newColumnWidth > 15 && nextColumnWidth > parseInt(nextColumnMinWidth)) {\n              if (this.scrollable) {\n                var scrollableView = this.findParentScrollableView(column);\n                var scrollableBodyTable = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-body table') || DomHandler.findSingle(scrollableView, '.p-datatable-virtual-scrollable-body table');\n                var scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-header-table');\n                var scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-footer-table');\n                var resizeColumnIndex = DomHandler.index(column);\n                this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n              } else {\n                column.style.width = newColumnWidth + 'px';\n\n                if (nextColumn) {\n                  nextColumn.style.width = nextColumnWidth + 'px';\n                }\n              }\n            }\n          }\n        } else if (this.columnResizeMode === 'expand') {\n          if (newColumnWidth >= minWidth) {\n            if (this.scrollable) {\n              this.setScrollableItemsWidthOnExpandResize(column, newColumnWidth, delta);\n            } else {\n              this.tableViewChild.nativeElement.style.width = this.tableViewChild.nativeElement.offsetWidth + delta + 'px';\n              column.style.width = newColumnWidth + 'px';\n              var containerWidth = this.tableViewChild.nativeElement.style.width;\n              this.containerViewChild.nativeElement.style.width = containerWidth + 'px';\n            }\n          }\n        }\n\n        this.onColResize.emit({\n          element: column,\n          delta: delta\n        });\n\n        if (this.isStateful()) {\n          this.saveState();\n        }\n      }\n\n      this.resizeHelperViewChild.nativeElement.style.display = 'none';\n      DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n    }\n  }, {\n    key: \"setScrollableItemsWidthOnExpandResize\",\n    value: function setScrollableItemsWidthOnExpandResize(column, newColumnWidth, delta) {\n      var scrollableView = column ? this.findParentScrollableView(column) : this.containerViewChild.nativeElement;\n      var scrollableBody = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-body') || DomHandler.findSingle(scrollableView, 'cdk-virtual-scroll-viewport');\n      var scrollableHeader = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-header');\n      var scrollableFooter = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-footer');\n      var scrollableBodyTable = DomHandler.findSingle(scrollableBody, '.p-datatable-scrollable-body table') || DomHandler.findSingle(scrollableView, 'cdk-virtual-scroll-viewport table');\n      var scrollableHeaderTable = DomHandler.findSingle(scrollableHeader, 'table.p-datatable-scrollable-header-table');\n      var scrollableFooterTable = DomHandler.findSingle(scrollableFooter, 'table.p-datatable-scrollable-footer-table');\n      var scrollableBodyTableWidth = column ? scrollableBodyTable.offsetWidth + delta : newColumnWidth;\n      var scrollableHeaderTableWidth = column ? scrollableHeaderTable.offsetWidth + delta : newColumnWidth;\n      var isContainerInViewport = this.containerViewChild.nativeElement.offsetWidth >= scrollableBodyTableWidth;\n\n      var setWidth = function setWidth(container, table, width, isContainerInViewport) {\n        if (container && table) {\n          container.style.width = isContainerInViewport ? width + DomHandler.calculateScrollbarWidth(scrollableBody) + 'px' : 'auto';\n          table.style.width = width + 'px';\n        }\n      };\n\n      setWidth(scrollableBody, scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);\n      setWidth(scrollableHeader, scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);\n      setWidth(scrollableFooter, scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);\n\n      if (column) {\n        var resizeColumnIndex = DomHandler.index(column);\n        this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\n        this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\n        this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\n      }\n    }\n  }, {\n    key: \"findParentScrollableView\",\n    value: function findParentScrollableView(column) {\n      if (column) {\n        var parent = column.parentElement;\n\n        while (parent && !DomHandler.hasClass(parent, 'p-datatable-scrollable-view')) {\n          parent = parent.parentElement;\n        }\n\n        return parent;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"resizeColGroup\",\n    value: function resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\n      if (table) {\n        var colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\n\n        if (colGroup) {\n          var col = colGroup.children[resizeColumnIndex];\n          var nextCol = col.nextElementSibling;\n          col.style.width = newColumnWidth + 'px';\n\n          if (nextCol && nextColumnWidth) {\n            nextCol.style.width = nextColumnWidth + 'px';\n          }\n        } else {\n          throw \"Scrollable tables require a colgroup to support resizable columns\";\n        }\n      }\n    }\n  }, {\n    key: \"onColumnDragStart\",\n    value: function onColumnDragStart(event, columnElement) {\n      this.reorderIconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);\n      this.reorderIconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);\n      this.draggedColumn = columnElement;\n      event.dataTransfer.setData('text', 'b'); // For firefox\n    }\n  }, {\n    key: \"onColumnDragEnter\",\n    value: function onColumnDragEnter(event, dropHeader) {\n      if (this.reorderableColumns && this.draggedColumn && dropHeader) {\n        event.preventDefault();\n        var containerOffset = DomHandler.getOffset(this.containerViewChild.nativeElement);\n        var dropHeaderOffset = DomHandler.getOffset(dropHeader);\n\n        if (this.draggedColumn != dropHeader) {\n          var dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n          var dropIndex = DomHandler.indexWithinGroup(dropHeader, 'preorderablecolumn');\n          var targetLeft = dropHeaderOffset.left - containerOffset.left;\n          var targetTop = containerOffset.top - dropHeaderOffset.top;\n          var columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n          this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\n          this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n\n          if (event.pageX > columnCenter) {\n            this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n            this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n            this.dropPosition = 1;\n          } else {\n            this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n            this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n            this.dropPosition = -1;\n          }\n\n          if (dropIndex - dragIndex === 1 && this.dropPosition === -1 || dropIndex - dragIndex === -1 && this.dropPosition === 1) {\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n          } else {\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\n          }\n        } else {\n          event.dataTransfer.dropEffect = 'none';\n        }\n      }\n    }\n  }, {\n    key: \"onColumnDragLeave\",\n    value: function onColumnDragLeave(event) {\n      if (this.reorderableColumns && this.draggedColumn) {\n        event.preventDefault();\n        this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n        this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n      }\n    }\n  }, {\n    key: \"onColumnDrop\",\n    value: function onColumnDrop(event, dropColumn) {\n      var _this8 = this;\n\n      event.preventDefault();\n\n      if (this.draggedColumn) {\n        var dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n        var dropIndex = DomHandler.indexWithinGroup(dropColumn, 'preorderablecolumn');\n        var allowDrop = dragIndex != dropIndex;\n\n        if (allowDrop && (dropIndex - dragIndex == 1 && this.dropPosition === -1 || dragIndex - dropIndex == 1 && this.dropPosition === 1)) {\n          allowDrop = false;\n        }\n\n        if (allowDrop && dropIndex < dragIndex && this.dropPosition === 1) {\n          dropIndex = dropIndex + 1;\n        }\n\n        if (allowDrop && dropIndex > dragIndex && this.dropPosition === -1) {\n          dropIndex = dropIndex - 1;\n        }\n\n        if (allowDrop) {\n          ObjectUtils.reorderArray(this.columns, dragIndex, dropIndex);\n          this.onColReorder.emit({\n            dragIndex: dragIndex,\n            dropIndex: dropIndex,\n            columns: this.columns\n          });\n\n          if (this.isStateful()) {\n            this.zone.runOutsideAngular(function () {\n              setTimeout(function () {\n                _this8.saveState();\n              });\n            });\n          }\n        }\n\n        this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n        this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n        this.draggedColumn.draggable = false;\n        this.draggedColumn = null;\n        this.dropPosition = null;\n      }\n    }\n  }, {\n    key: \"onRowDragStart\",\n    value: function onRowDragStart(event, index) {\n      this.rowDragging = true;\n      this.draggedRowIndex = index;\n      event.dataTransfer.setData('text', 'b'); // For firefox\n    }\n  }, {\n    key: \"onRowDragOver\",\n    value: function onRowDragOver(event, index, rowElement) {\n      if (this.rowDragging && this.draggedRowIndex !== index) {\n        var rowY = DomHandler.getOffset(rowElement).top + DomHandler.getWindowScrollTop();\n        var pageY = event.pageY;\n        var rowMidY = rowY + DomHandler.getOuterHeight(rowElement) / 2;\n        var prevRowElement = rowElement.previousElementSibling;\n\n        if (pageY < rowMidY) {\n          DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n          this.droppedRowIndex = index;\n          if (prevRowElement) DomHandler.addClass(prevRowElement, 'p-datatable-dragpoint-bottom');else DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n        } else {\n          if (prevRowElement) DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');else DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n          this.droppedRowIndex = index + 1;\n          DomHandler.addClass(rowElement, 'p-datatable-dragpoint-bottom');\n        }\n      }\n    }\n  }, {\n    key: \"onRowDragLeave\",\n    value: function onRowDragLeave(event, rowElement) {\n      var prevRowElement = rowElement.previousElementSibling;\n\n      if (prevRowElement) {\n        DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n      }\n\n      DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n      DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-top');\n    }\n  }, {\n    key: \"onRowDragEnd\",\n    value: function onRowDragEnd(event) {\n      this.rowDragging = false;\n      this.draggedRowIndex = null;\n      this.droppedRowIndex = null;\n    }\n  }, {\n    key: \"onRowDrop\",\n    value: function onRowDrop(event, rowElement) {\n      if (this.droppedRowIndex != null) {\n        var dropIndex = this.draggedRowIndex > this.droppedRowIndex ? this.droppedRowIndex : this.droppedRowIndex === 0 ? 0 : this.droppedRowIndex - 1;\n        ObjectUtils.reorderArray(this.value, this.draggedRowIndex, dropIndex);\n        this.onRowReorder.emit({\n          dragIndex: this.draggedRowIndex,\n          dropIndex: dropIndex\n        });\n      } //cleanup\n\n\n      this.onRowDragLeave(event, rowElement);\n      this.onRowDragEnd(event);\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      var data = this.filteredValue || this.value;\n      return data == null || data.length == 0;\n    }\n  }, {\n    key: \"getBlockableElement\",\n    value: function getBlockableElement() {\n      return this.el.nativeElement.children[0];\n    }\n  }, {\n    key: \"getStorage\",\n    value: function getStorage() {\n      switch (this.stateStorage) {\n        case 'local':\n          return window.localStorage;\n\n        case 'session':\n          return window.sessionStorage;\n\n        default:\n          throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n      }\n    }\n  }, {\n    key: \"isStateful\",\n    value: function isStateful() {\n      return this.stateKey != null;\n    }\n  }, {\n    key: \"saveState\",\n    value: function saveState() {\n      var storage = this.getStorage();\n      var state = {};\n\n      if (this.paginator) {\n        state.first = this.first;\n        state.rows = this.rows;\n      }\n\n      if (this.sortField) {\n        state.sortField = this.sortField;\n        state.sortOrder = this.sortOrder;\n      }\n\n      if (this.multiSortMeta) {\n        state.multiSortMeta = this.multiSortMeta;\n      }\n\n      if (this.hasFilter()) {\n        state.filters = this.filters;\n      }\n\n      if (this.resizableColumns) {\n        this.saveColumnWidths(state);\n      }\n\n      if (this.reorderableColumns) {\n        this.saveColumnOrder(state);\n      }\n\n      if (this.selection) {\n        state.selection = this.selection;\n      }\n\n      if (Object.keys(this.expandedRowKeys).length) {\n        state.expandedRowKeys = this.expandedRowKeys;\n      }\n\n      if (Object.keys(state).length) {\n        storage.setItem(this.stateKey, JSON.stringify(state));\n      }\n\n      this.onStateSave.emit(state);\n    }\n  }, {\n    key: \"clearState\",\n    value: function clearState() {\n      var storage = this.getStorage();\n\n      if (this.stateKey) {\n        storage.removeItem(this.stateKey);\n      }\n    }\n  }, {\n    key: \"restoreState\",\n    value: function restoreState() {\n      var _this9 = this;\n\n      var storage = this.getStorage();\n      var stateString = storage.getItem(this.stateKey);\n\n      if (stateString) {\n        var state = JSON.parse(stateString);\n\n        if (this.paginator) {\n          if (this.first !== undefined) {\n            this.first = state.first;\n            this.firstChange.emit(this.first);\n          }\n\n          if (this.rows !== undefined) {\n            this.rows = state.rows;\n            this.rowsChange.emit(this.rows);\n          }\n        }\n\n        if (state.sortField) {\n          this.restoringSort = true;\n          this._sortField = state.sortField;\n          this._sortOrder = state.sortOrder;\n        }\n\n        if (state.multiSortMeta) {\n          this.restoringSort = true;\n          this._multiSortMeta = state.multiSortMeta;\n        }\n\n        if (state.filters) {\n          this.restoringFilter = true;\n          this.filters = state.filters;\n        }\n\n        if (this.resizableColumns) {\n          this.columnWidthsState = state.columnWidths;\n          this.tableWidthState = state.tableWidth;\n        }\n\n        if (state.expandedRowKeys) {\n          this.expandedRowKeys = state.expandedRowKeys;\n        }\n\n        if (state.selection) {\n          Promise.resolve(null).then(function () {\n            return _this9.selectionChange.emit(state.selection);\n          });\n        }\n\n        this.stateRestored = true;\n        this.onStateRestore.emit(state);\n      }\n    }\n  }, {\n    key: \"saveColumnWidths\",\n    value: function saveColumnWidths(state) {\n      var widths = [];\n      var headers = DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-thead > tr:first-child > th');\n      headers.map(function (header) {\n        return widths.push(DomHandler.getOuterWidth(header));\n      });\n      state.columnWidths = widths.join(',');\n\n      if (this.columnResizeMode === 'expand') {\n        state.tableWidth = this.scrollable ? DomHandler.findSingle(this.containerViewChild.nativeElement, '.p-datatable-scrollable-header-table').style.width : DomHandler.getOuterWidth(this.tableViewChild.nativeElement) + 'px';\n      }\n    }\n  }, {\n    key: \"restoreColumnWidths\",\n    value: function restoreColumnWidths() {\n      if (this.columnWidthsState) {\n        var widths = this.columnWidthsState.split(',');\n\n        if (this.columnResizeMode === 'expand' && this.tableWidthState) {\n          if (this.scrollable) {\n            this.setScrollableItemsWidthOnExpandResize(null, this.tableWidthState, 0);\n          } else {\n            this.tableViewChild.nativeElement.style.width = this.tableWidthState;\n            this.containerViewChild.nativeElement.style.width = this.tableWidthState;\n          }\n        }\n\n        if (this.scrollable) {\n          var headerCols = DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-scrollable-header-table > colgroup > col');\n          var bodyCols = this.virtualScroll ? DomHandler.find(this.containerViewChild.nativeElement, 'cdk-virtual-scroll-viewport table > colgroup > col') : DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-scrollable-body table > colgroup > col');\n          headerCols.map(function (col, index) {\n            return col.style.width = widths[index] + 'px';\n          });\n          bodyCols.map(function (col, index) {\n            return col.style.width = widths[index] + 'px';\n          });\n        } else {\n          var headers = DomHandler.find(this.tableViewChild.nativeElement, '.p-datatable-thead > tr:first-child > th');\n          headers.map(function (header, index) {\n            return header.style.width = widths[index] + 'px';\n          });\n        }\n      }\n    }\n  }, {\n    key: \"saveColumnOrder\",\n    value: function saveColumnOrder(state) {\n      if (this.columns) {\n        var columnOrder = [];\n        this.columns.map(function (column) {\n          columnOrder.push(column.field || column.key);\n        });\n        state.columnOrder = columnOrder;\n      }\n    }\n  }, {\n    key: \"restoreColumnOrder\",\n    value: function restoreColumnOrder() {\n      var _this10 = this;\n\n      var storage = this.getStorage();\n      var stateString = storage.getItem(this.stateKey);\n\n      if (stateString) {\n        var state = JSON.parse(stateString);\n        var columnOrder = state.columnOrder;\n\n        if (columnOrder) {\n          var reorderedColumns = [];\n          columnOrder.map(function (key) {\n            var col = _this10.findColumnByKey(key);\n\n            if (col) {\n              reorderedColumns.push(col);\n            }\n          });\n          this.columnOrderStateRestored = true;\n          this.columns = reorderedColumns;\n        }\n      }\n    }\n  }, {\n    key: \"findColumnByKey\",\n    value: function findColumnByKey(key) {\n      if (this.columns) {\n        var _iterator3 = _createForOfIteratorHelper(this.columns),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var col = _step3.value;\n            if (col.key === key || col.field === key) return col;else continue;\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.unbindDocumentEditListener();\n      this.editingCell = null;\n      this.initialized = null;\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set: function set(val) {\n      this._value = val;\n    }\n  }, {\n    key: \"columns\",\n    get: function get() {\n      return this._columns;\n    },\n    set: function set(cols) {\n      this._columns = cols;\n    }\n  }, {\n    key: \"first\",\n    get: function get() {\n      return this._first;\n    },\n    set: function set(val) {\n      this._first = val;\n    }\n  }, {\n    key: \"rows\",\n    get: function get() {\n      return this._rows;\n    },\n    set: function set(val) {\n      this._rows = val;\n    }\n  }, {\n    key: \"totalRecords\",\n    get: function get() {\n      return this._totalRecords;\n    },\n    set: function set(val) {\n      this._totalRecords = val;\n      this.tableService.onTotalRecordsChange(this._totalRecords);\n    }\n  }, {\n    key: \"sortField\",\n    get: function get() {\n      return this._sortField;\n    },\n    set: function set(val) {\n      this._sortField = val;\n    }\n  }, {\n    key: \"sortOrder\",\n    get: function get() {\n      return this._sortOrder;\n    },\n    set: function set(val) {\n      this._sortOrder = val;\n    }\n  }, {\n    key: \"multiSortMeta\",\n    get: function get() {\n      return this._multiSortMeta;\n    },\n    set: function set(val) {\n      this._multiSortMeta = val;\n    }\n  }, {\n    key: \"selection\",\n    get: function get() {\n      return this._selection;\n    },\n    set: function set(val) {\n      this._selection = val;\n    }\n  }]);\n\n  return Table;\n}();\n\nTable.ɵfac = function Table_Factory(t) {\n  return new (t || Table)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(TableService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FilterService));\n};\n\nTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Table,\n  selectors: [[\"p-table\"]],\n  contentQueries: function Table_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Table_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, true);\n      ɵngcc0.ɵɵviewQuery(_c1, true);\n      ɵngcc0.ɵɵviewQuery(_c2, true);\n      ɵngcc0.ɵɵviewQuery(_c3, true);\n      ɵngcc0.ɵɵviewQuery(_c4, true);\n      ɵngcc0.ɵɵviewQuery(_c5, true);\n      ɵngcc0.ɵɵviewQuery(_c6, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.resizeHelperViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.reorderIndicatorUpViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.reorderIndicatorDownViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tableViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scrollableViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scrollableFrozenViewChild = _t.first);\n    }\n  },\n  inputs: {\n    pageLinks: \"pageLinks\",\n    alwaysShowPaginator: \"alwaysShowPaginator\",\n    paginatorPosition: \"paginatorPosition\",\n    paginatorDropdownScrollHeight: \"paginatorDropdownScrollHeight\",\n    currentPageReportTemplate: \"currentPageReportTemplate\",\n    showFirstLastIcon: \"showFirstLastIcon\",\n    showPageLinks: \"showPageLinks\",\n    defaultSortOrder: \"defaultSortOrder\",\n    sortMode: \"sortMode\",\n    resetPageOnSort: \"resetPageOnSort\",\n    contextMenuSelectionMode: \"contextMenuSelectionMode\",\n    rowTrackBy: \"rowTrackBy\",\n    lazy: \"lazy\",\n    lazyLoadOnInit: \"lazyLoadOnInit\",\n    compareSelectionBy: \"compareSelectionBy\",\n    csvSeparator: \"csvSeparator\",\n    exportFilename: \"exportFilename\",\n    filters: \"filters\",\n    filterDelay: \"filterDelay\",\n    expandedRowKeys: \"expandedRowKeys\",\n    editingRowKeys: \"editingRowKeys\",\n    rowExpandMode: \"rowExpandMode\",\n    virtualScrollDelay: \"virtualScrollDelay\",\n    virtualRowHeight: \"virtualRowHeight\",\n    columnResizeMode: \"columnResizeMode\",\n    loadingIcon: \"loadingIcon\",\n    showLoader: \"showLoader\",\n    stateStorage: \"stateStorage\",\n    editMode: \"editMode\",\n    totalRecords: \"totalRecords\",\n    value: \"value\",\n    columns: \"columns\",\n    first: \"first\",\n    rows: \"rows\",\n    sortField: \"sortField\",\n    sortOrder: \"sortOrder\",\n    multiSortMeta: \"multiSortMeta\",\n    selection: \"selection\",\n    contextMenuSelection: \"contextMenuSelection\",\n    frozenColumns: \"frozenColumns\",\n    frozenValue: \"frozenValue\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    tableStyle: \"tableStyle\",\n    tableStyleClass: \"tableStyleClass\",\n    paginator: \"paginator\",\n    rowsPerPageOptions: \"rowsPerPageOptions\",\n    paginatorDropdownAppendTo: \"paginatorDropdownAppendTo\",\n    showCurrentPageReport: \"showCurrentPageReport\",\n    showJumpToPageDropdown: \"showJumpToPageDropdown\",\n    selectionMode: \"selectionMode\",\n    dataKey: \"dataKey\",\n    metaKeySelection: \"metaKeySelection\",\n    globalFilterFields: \"globalFilterFields\",\n    filterLocale: \"filterLocale\",\n    scrollable: \"scrollable\",\n    scrollHeight: \"scrollHeight\",\n    virtualScroll: \"virtualScroll\",\n    frozenWidth: \"frozenWidth\",\n    responsive: \"responsive\",\n    contextMenu: \"contextMenu\",\n    resizableColumns: \"resizableColumns\",\n    reorderableColumns: \"reorderableColumns\",\n    loading: \"loading\",\n    rowHover: \"rowHover\",\n    customSort: \"customSort\",\n    autoLayout: \"autoLayout\",\n    exportFunction: \"exportFunction\",\n    stateKey: \"stateKey\",\n    minBufferPx: \"minBufferPx\",\n    maxBufferPx: \"maxBufferPx\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\",\n    contextMenuSelectionChange: \"contextMenuSelectionChange\",\n    onRowSelect: \"onRowSelect\",\n    onRowUnselect: \"onRowUnselect\",\n    onPage: \"onPage\",\n    onSort: \"onSort\",\n    onFilter: \"onFilter\",\n    onLazyLoad: \"onLazyLoad\",\n    onRowExpand: \"onRowExpand\",\n    onRowCollapse: \"onRowCollapse\",\n    onContextMenuSelect: \"onContextMenuSelect\",\n    onColResize: \"onColResize\",\n    onColReorder: \"onColReorder\",\n    onRowReorder: \"onRowReorder\",\n    onEditInit: \"onEditInit\",\n    onEditComplete: \"onEditComplete\",\n    onEditCancel: \"onEditCancel\",\n    onHeaderCheckboxToggle: \"onHeaderCheckboxToggle\",\n    sortFunction: \"sortFunction\",\n    firstChange: \"firstChange\",\n    rowsChange: \"rowsChange\",\n    onStateSave: \"onStateSave\",\n    onStateRestore: \"onStateRestore\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([TableService]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 12,\n  vars: 22,\n  consts: [[\"data-scrollselectors\", \".p-datatable-scrollable-body, .p-datatable-unfrozen-view .p-datatable-scrollable-body\", 3, \"ngStyle\", \"ngClass\"], [\"container\", \"\"], [\"class\", \"p-datatable-loading-overlay p-component-overlay\", 4, \"ngIf\"], [\"class\", \"p-datatable-header\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-top\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\", 4, \"ngIf\"], [\"class\", \"p-datatable-wrapper\", 4, \"ngIf\"], [\"class\", \"p-datatable-scrollable-wrapper\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-bottom\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\", 4, \"ngIf\"], [\"class\", \"p-datatable-footer\", 4, \"ngIf\"], [\"class\", \"p-column-resizer-helper\", \"style\", \"display:none\", 4, \"ngIf\"], [\"class\", \"pi pi-arrow-down p-datatable-reorder-indicator-up\", \"style\", \"display:none\", 4, \"ngIf\"], [\"class\", \"pi pi-arrow-up p-datatable-reorder-indicator-down\", \"style\", \"display:none\", 4, \"ngIf\"], [1, \"p-datatable-loading-overlay\", \"p-component-overlay\"], [1, \"p-datatable-header\"], [4, \"ngTemplateOutlet\"], [\"styleClass\", \"p-paginator-top\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\"], [1, \"p-datatable-wrapper\"], [\"role\", \"grid\", 3, \"ngClass\", \"ngStyle\"], [\"table\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"p-datatable-thead\"], [1, \"p-datatable-tbody\", 3, \"pTableBody\", \"pTableBodyTemplate\"], [\"class\", \"p-datatable-tfoot\", 4, \"ngIf\"], [1, \"p-datatable-tfoot\"], [1, \"p-datatable-scrollable-wrapper\"], [\"class\", \"p-datatable-scrollable-view p-datatable-frozen-view\", 3, \"pScrollableView\", \"frozen\", \"ngStyle\", \"scrollHeight\", 4, \"ngIf\"], [1, \"p-datatable-scrollable-view\", 3, \"pScrollableView\", \"frozen\", \"scrollHeight\", \"ngStyle\"], [\"scrollableView\", \"\"], [1, \"p-datatable-scrollable-view\", \"p-datatable-frozen-view\", 3, \"pScrollableView\", \"frozen\", \"ngStyle\", \"scrollHeight\"], [\"scrollableFrozenView\", \"\"], [\"styleClass\", \"p-paginator-bottom\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"onPageChange\"], [1, \"p-datatable-footer\"], [1, \"p-column-resizer-helper\", 2, \"display\", \"none\"], [\"resizeHelper\", \"\"], [1, \"pi\", \"pi-arrow-down\", \"p-datatable-reorder-indicator-up\", 2, \"display\", \"none\"], [\"reorderIndicatorUp\", \"\"], [1, \"pi\", \"pi-arrow-up\", \"p-datatable-reorder-indicator-down\", 2, \"display\", \"none\"], [\"reorderIndicatorDown\", \"\"]],\n  template: function Table_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵtemplate(2, Table_div_2_Template, 2, 2, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(3, Table_div_3_Template, 2, 1, \"div\", 3);\n      ɵngcc0.ɵɵtemplate(4, Table_p_paginator_4_Template, 1, 16, \"p-paginator\", 4);\n      ɵngcc0.ɵɵtemplate(5, Table_div_5_Template, 8, 13, \"div\", 5);\n      ɵngcc0.ɵɵtemplate(6, Table_div_6_Template, 4, 8, \"div\", 6);\n      ɵngcc0.ɵɵtemplate(7, Table_p_paginator_7_Template, 1, 16, \"p-paginator\", 7);\n      ɵngcc0.ɵɵtemplate(8, Table_div_8_Template, 2, 1, \"div\", 8);\n      ɵngcc0.ɵɵtemplate(9, Table_div_9_Template, 2, 0, \"div\", 9);\n      ɵngcc0.ɵɵtemplate(10, Table_span_10_Template, 2, 0, \"span\", 10);\n      ɵngcc0.ɵɵtemplate(11, Table_span_11_Template, 2, 0, \"span\", 11);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.styleClass);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", ɵngcc0.ɵɵpureFunction7(14, _c10, ctx.rowHover || ctx.selectionMode, ctx.autoLayout, ctx.resizableColumns, ctx.resizableColumns && ctx.columnResizeMode === \"fit\", ctx.scrollable, ctx.scrollable && ctx.scrollHeight === \"flex\", ctx.responsive));\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.loading && ctx.showLoader);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.captionTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.paginator && (ctx.paginatorPosition === \"top\" || ctx.paginatorPosition == \"both\"));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.scrollable);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.scrollable);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.paginator && (ctx.paginatorPosition === \"bottom\" || ctx.paginatorPosition == \"both\"));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.summaryTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.resizableColumns);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.reorderableColumns);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.reorderableColumns);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc2.NgStyle, ɵngcc2.NgClass, ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet, ɵngcc3.Paginator, TableBody, ScrollableView];\n  },\n  styles: [\".p-datatable{position:relative}.p-datatable table{border-collapse:collapse;table-layout:fixed;width:100%}.p-datatable .p-sortable-column{-ms-user-select:none;-webkit-user-select:none;cursor:pointer;user-select:none}.p-datatable .p-sortable-column .p-column-title,.p-datatable .p-sortable-column .p-sortable-column-badge,.p-datatable .p-sortable-column .p-sortable-column-icon{vertical-align:middle}.p-datatable .p-sortable-column .p-sortable-column-badge{align-items:center;display:inline-flex;justify-content:center}.p-datatable-auto-layout>.p-datatable-wrapper{overflow-x:auto}.p-datatable-auto-layout>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-hoverable-rows .p-selectable-row{cursor:pointer}.p-datatable-scrollable-wrapper{position:relative}.p-datatable-scrollable-footer,.p-datatable-scrollable-header{overflow:hidden}.p-datatable-scrollable-body{overflow:auto;position:relative}.p-datatable-scrollable-body>table>.p-datatable-tbody>tr:first-child>td{border-top:0}.p-datatable-virtual-table{position:absolute}.p-datatable-frozen-view .p-datatable-scrollable-body{overflow:hidden}.p-datatable-frozen-view>.p-datatable-scrollable-body>table>.p-datatable-tbody>tr>td:last-child{border-right:0}.p-datatable-unfrozen-view{position:absolute;top:0}.p-datatable-flex-scrollable,.p-datatable-flex-scrollable .p-datatable-scrollable-view,.p-datatable-flex-scrollable .p-datatable-scrollable-wrapper{display:flex;flex:1;flex-direction:column;height:100%}.p-datatable-flex-scrollable .p-datatable-scrollable-body,.p-datatable-flex-scrollable .p-datatable-virtual-scrollable-body{flex:1}.p-datatable-resizable>.p-datatable-wrapper{overflow-x:auto}.p-datatable-resizable .p-datatable-tbody>tr>td,.p-datatable-resizable .p-datatable-tfoot>tr>td,.p-datatable-resizable .p-datatable-thead>tr>th{overflow:hidden;white-space:nowrap}.p-datatable-resizable .p-resizable-column{background-clip:padding-box;position:relative}.p-datatable-resizable-fit .p-resizable-column:last-child .p-column-resizer{display:none}.p-datatable .p-column-resizer{border:1px solid transparent;cursor:col-resize;display:block;height:100%;margin:0;padding:0;position:absolute!important;right:0;top:0;width:.5rem}.p-datatable .p-column-resizer-helper{display:none;position:absolute;width:1px;z-index:10}.p-datatable .p-row-editor-cancel,.p-datatable .p-row-editor-init,.p-datatable .p-row-editor-save,.p-datatable .p-row-toggler{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;position:relative}.p-datatable-reorder-indicator-down,.p-datatable-reorder-indicator-up{display:none;position:absolute}.p-datatable-reorderablerow-handle,[pReorderableColumn]{cursor:move}.p-datatable .p-datatable-loading-overlay{align-items:center;display:flex;justify-content:center;position:absolute;z-index:2}.p-column-filter-row{align-items:center;display:flex;width:100%}.p-column-filter-menu{display:inline-flex}.p-column-filter-row p-columnfilterformelement{flex:1 1 auto;width:1%}.p-column-filter-clear-button,.p-column-filter-menu-button{align-items:center;cursor:pointer;display:inline-flex;justify-content:center;overflow:hidden;position:relative;text-decoration:none}.p-column-filter-overlay{position:absolute}.p-column-filter-row-items{list-style:none;margin:0;padding:0}.p-column-filter-row-item{cursor:pointer}.p-column-filter-add-button,.p-column-filter-remove-button{justify-content:center}.p-column-filter-add-button .p-button-label,.p-column-filter-remove-button .p-button-label{flex-grow:0}.p-column-filter-buttonbar{align-items:center;display:flex;justify-content:space-between}.p-column-filter-buttonbar .p-button{width:auto}.p-datatable.p-datatable-responsive .p-datatable-tbody>tr>td .p-column-title{display:none}cdk-virtual-scroll-viewport{outline:0 none}@media screen and (max-width:40em){.p-datatable.p-datatable-responsive .p-datatable-tfoot>tr>td,.p-datatable.p-datatable-responsive .p-datatable-thead>tr>th{display:none!important}.p-datatable.p-datatable-responsive .p-datatable-tbody>tr>td{border:0;clear:left;display:block;float:left;text-align:left;width:100%}.p-datatable.p-datatable-responsive .p-datatable-tbody>tr>td .p-column-title{display:inline-block;font-weight:700;margin:-.4em 1em -.4em -.4rem;min-width:30%;padding:.4rem}}\"],\n  encapsulation: 2\n});\n\nTable.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: TableService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: FilterService\n  }];\n};\n\nTable.propDecorators = {\n  frozenColumns: [{\n    type: Input\n  }],\n  frozenValue: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  tableStyle: [{\n    type: Input\n  }],\n  tableStyleClass: [{\n    type: Input\n  }],\n  paginator: [{\n    type: Input\n  }],\n  pageLinks: [{\n    type: Input\n  }],\n  rowsPerPageOptions: [{\n    type: Input\n  }],\n  alwaysShowPaginator: [{\n    type: Input\n  }],\n  paginatorPosition: [{\n    type: Input\n  }],\n  paginatorDropdownAppendTo: [{\n    type: Input\n  }],\n  paginatorDropdownScrollHeight: [{\n    type: Input\n  }],\n  currentPageReportTemplate: [{\n    type: Input\n  }],\n  showCurrentPageReport: [{\n    type: Input\n  }],\n  showJumpToPageDropdown: [{\n    type: Input\n  }],\n  showFirstLastIcon: [{\n    type: Input\n  }],\n  showPageLinks: [{\n    type: Input\n  }],\n  defaultSortOrder: [{\n    type: Input\n  }],\n  sortMode: [{\n    type: Input\n  }],\n  resetPageOnSort: [{\n    type: Input\n  }],\n  selectionMode: [{\n    type: Input\n  }],\n  selectionChange: [{\n    type: Output\n  }],\n  contextMenuSelection: [{\n    type: Input\n  }],\n  contextMenuSelectionChange: [{\n    type: Output\n  }],\n  contextMenuSelectionMode: [{\n    type: Input\n  }],\n  dataKey: [{\n    type: Input\n  }],\n  metaKeySelection: [{\n    type: Input\n  }],\n  rowTrackBy: [{\n    type: Input\n  }],\n  lazy: [{\n    type: Input\n  }],\n  lazyLoadOnInit: [{\n    type: Input\n  }],\n  compareSelectionBy: [{\n    type: Input\n  }],\n  csvSeparator: [{\n    type: Input\n  }],\n  exportFilename: [{\n    type: Input\n  }],\n  filters: [{\n    type: Input\n  }],\n  globalFilterFields: [{\n    type: Input\n  }],\n  filterDelay: [{\n    type: Input\n  }],\n  filterLocale: [{\n    type: Input\n  }],\n  expandedRowKeys: [{\n    type: Input\n  }],\n  editingRowKeys: [{\n    type: Input\n  }],\n  rowExpandMode: [{\n    type: Input\n  }],\n  scrollable: [{\n    type: Input\n  }],\n  scrollHeight: [{\n    type: Input\n  }],\n  virtualScroll: [{\n    type: Input\n  }],\n  virtualScrollDelay: [{\n    type: Input\n  }],\n  virtualRowHeight: [{\n    type: Input\n  }],\n  frozenWidth: [{\n    type: Input\n  }],\n  responsive: [{\n    type: Input\n  }],\n  contextMenu: [{\n    type: Input\n  }],\n  resizableColumns: [{\n    type: Input\n  }],\n  columnResizeMode: [{\n    type: Input\n  }],\n  reorderableColumns: [{\n    type: Input\n  }],\n  loading: [{\n    type: Input\n  }],\n  loadingIcon: [{\n    type: Input\n  }],\n  showLoader: [{\n    type: Input\n  }],\n  rowHover: [{\n    type: Input\n  }],\n  customSort: [{\n    type: Input\n  }],\n  autoLayout: [{\n    type: Input\n  }],\n  exportFunction: [{\n    type: Input\n  }],\n  stateKey: [{\n    type: Input\n  }],\n  stateStorage: [{\n    type: Input\n  }],\n  editMode: [{\n    type: Input\n  }],\n  minBufferPx: [{\n    type: Input\n  }],\n  maxBufferPx: [{\n    type: Input\n  }],\n  onRowSelect: [{\n    type: Output\n  }],\n  onRowUnselect: [{\n    type: Output\n  }],\n  onPage: [{\n    type: Output\n  }],\n  onSort: [{\n    type: Output\n  }],\n  onFilter: [{\n    type: Output\n  }],\n  onLazyLoad: [{\n    type: Output\n  }],\n  onRowExpand: [{\n    type: Output\n  }],\n  onRowCollapse: [{\n    type: Output\n  }],\n  onContextMenuSelect: [{\n    type: Output\n  }],\n  onColResize: [{\n    type: Output\n  }],\n  onColReorder: [{\n    type: Output\n  }],\n  onRowReorder: [{\n    type: Output\n  }],\n  onEditInit: [{\n    type: Output\n  }],\n  onEditComplete: [{\n    type: Output\n  }],\n  onEditCancel: [{\n    type: Output\n  }],\n  onHeaderCheckboxToggle: [{\n    type: Output\n  }],\n  sortFunction: [{\n    type: Output\n  }],\n  firstChange: [{\n    type: Output\n  }],\n  rowsChange: [{\n    type: Output\n  }],\n  onStateSave: [{\n    type: Output\n  }],\n  onStateRestore: [{\n    type: Output\n  }],\n  containerViewChild: [{\n    type: ViewChild,\n    args: ['container']\n  }],\n  resizeHelperViewChild: [{\n    type: ViewChild,\n    args: ['resizeHelper']\n  }],\n  reorderIndicatorUpViewChild: [{\n    type: ViewChild,\n    args: ['reorderIndicatorUp']\n  }],\n  reorderIndicatorDownViewChild: [{\n    type: ViewChild,\n    args: ['reorderIndicatorDown']\n  }],\n  tableViewChild: [{\n    type: ViewChild,\n    args: ['table']\n  }],\n  scrollableViewChild: [{\n    type: ViewChild,\n    args: ['scrollableView']\n  }],\n  scrollableFrozenViewChild: [{\n    type: ViewChild,\n    args: ['scrollableFrozenView']\n  }],\n  templates: [{\n    type: ContentChildren,\n    args: [PrimeTemplate]\n  }],\n  value: [{\n    type: Input\n  }],\n  columns: [{\n    type: Input\n  }],\n  first: [{\n    type: Input\n  }],\n  rows: [{\n    type: Input\n  }],\n  totalRecords: [{\n    type: Input\n  }],\n  sortField: [{\n    type: Input\n  }],\n  sortOrder: [{\n    type: Input\n  }],\n  multiSortMeta: [{\n    type: Input\n  }],\n  selection: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Table, [{\n    type: Component,\n    args: [{\n      selector: 'p-table',\n      template: \"\\n        <div #container [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" data-scrollselectors=\\\".p-datatable-scrollable-body, .p-datatable-unfrozen-view .p-datatable-scrollable-body\\\"\\n            [ngClass]=\\\"{'p-datatable p-component': true,\\n                'p-datatable-hoverable-rows': (rowHover||selectionMode),\\n                'p-datatable-auto-layout': autoLayout,\\n                'p-datatable-resizable': resizableColumns,\\n                'p-datatable-resizable-fit': (resizableColumns && columnResizeMode === 'fit'),\\n                'p-datatable-scrollable': scrollable,\\n                'p-datatable-flex-scrollable': (scrollable && scrollHeight === 'flex'),\\n                'p-datatable-responsive': responsive}\\\">\\n            <div class=\\\"p-datatable-loading-overlay p-component-overlay\\\" *ngIf=\\\"loading && showLoader\\\">\\n                <i [class]=\\\"'p-datatable-loading-icon pi-spin ' + loadingIcon\\\"></i>\\n            </div>\\n            <div *ngIf=\\\"captionTemplate\\\" class=\\\"p-datatable-header\\\">\\n                <ng-container *ngTemplateOutlet=\\\"captionTemplate\\\"></ng-container>\\n            </div>\\n            <p-paginator [rows]=\\\"rows\\\" [first]=\\\"first\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinkSize]=\\\"pageLinks\\\" styleClass=\\\"p-paginator-top\\\" [alwaysShow]=\\\"alwaysShowPaginator\\\"\\n                (onPageChange)=\\\"onPageChange($event)\\\" [rowsPerPageOptions]=\\\"rowsPerPageOptions\\\" *ngIf=\\\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\\\"\\n                [templateLeft]=\\\"paginatorLeftTemplate\\\" [templateRight]=\\\"paginatorRightTemplate\\\" [dropdownAppendTo]=\\\"paginatorDropdownAppendTo\\\" [dropdownScrollHeight]=\\\"paginatorDropdownScrollHeight\\\"\\n                [currentPageReportTemplate]=\\\"currentPageReportTemplate\\\" [showFirstLastIcon]=\\\"showFirstLastIcon\\\" [dropdownItemTemplate]=\\\"paginatorDropdownItemTemplate\\\" [showCurrentPageReport]=\\\"showCurrentPageReport\\\" [showJumpToPageDropdown]=\\\"showJumpToPageDropdown\\\" [showPageLinks]=\\\"showPageLinks\\\"></p-paginator>\\n\\n            <div class=\\\"p-datatable-wrapper\\\" *ngIf=\\\"!scrollable\\\">\\n                <table role=\\\"grid\\\" #table [ngClass]=\\\"tableStyleClass\\\" [ngStyle]=\\\"tableStyle\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"colGroupTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    <thead class=\\\"p-datatable-thead\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"headerTemplate; context: {$implicit: columns}\\\"></ng-container>\\n                    </thead>\\n                    <tbody class=\\\"p-datatable-tbody\\\" [pTableBody]=\\\"columns\\\" [pTableBodyTemplate]=\\\"bodyTemplate\\\"></tbody>\\n                    <tfoot *ngIf=\\\"footerTemplate\\\" class=\\\"p-datatable-tfoot\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"footerTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    </tfoot>\\n                </table>\\n            </div>\\n\\n            <div class=\\\"p-datatable-scrollable-wrapper\\\" *ngIf=\\\"scrollable\\\">\\n               <div class=\\\"p-datatable-scrollable-view p-datatable-frozen-view\\\" *ngIf=\\\"frozenColumns||frozenBodyTemplate\\\" #scrollableFrozenView [pScrollableView]=\\\"frozenColumns\\\" [frozen]=\\\"true\\\" [ngStyle]=\\\"{width: frozenWidth}\\\" [scrollHeight]=\\\"scrollHeight\\\"></div>\\n               <div class=\\\"p-datatable-scrollable-view\\\" #scrollableView [pScrollableView]=\\\"columns\\\" [frozen]=\\\"false\\\" [scrollHeight]=\\\"scrollHeight\\\" [ngStyle]=\\\"{left: frozenWidth, width: 'calc(100% - '+frozenWidth+')'}\\\"></div>\\n            </div>\\n\\n            <p-paginator [rows]=\\\"rows\\\" [first]=\\\"first\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinkSize]=\\\"pageLinks\\\" styleClass=\\\"p-paginator-bottom\\\" [alwaysShow]=\\\"alwaysShowPaginator\\\"\\n                (onPageChange)=\\\"onPageChange($event)\\\" [rowsPerPageOptions]=\\\"rowsPerPageOptions\\\" *ngIf=\\\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\\\"\\n                [templateLeft]=\\\"paginatorLeftTemplate\\\" [templateRight]=\\\"paginatorRightTemplate\\\" [dropdownAppendTo]=\\\"paginatorDropdownAppendTo\\\" [dropdownScrollHeight]=\\\"paginatorDropdownScrollHeight\\\"\\n                [currentPageReportTemplate]=\\\"currentPageReportTemplate\\\" [showFirstLastIcon]=\\\"showFirstLastIcon\\\" [dropdownItemTemplate]=\\\"paginatorDropdownItemTemplate\\\" [showCurrentPageReport]=\\\"showCurrentPageReport\\\" [showJumpToPageDropdown]=\\\"showJumpToPageDropdown\\\" [showPageLinks]=\\\"showPageLinks\\\"></p-paginator>\\n\\n            <div *ngIf=\\\"summaryTemplate\\\" class=\\\"p-datatable-footer\\\">\\n                <ng-container *ngTemplateOutlet=\\\"summaryTemplate\\\"></ng-container>\\n            </div>\\n\\n            <div #resizeHelper class=\\\"p-column-resizer-helper\\\" style=\\\"display:none\\\" *ngIf=\\\"resizableColumns\\\"></div>\\n            <span #reorderIndicatorUp class=\\\"pi pi-arrow-down p-datatable-reorder-indicator-up\\\" style=\\\"display:none\\\" *ngIf=\\\"reorderableColumns\\\"></span>\\n            <span #reorderIndicatorDown class=\\\"pi pi-arrow-up p-datatable-reorder-indicator-down\\\" style=\\\"display:none\\\" *ngIf=\\\"reorderableColumns\\\"></span>\\n        </div>\\n    \",\n      providers: [TableService],\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-datatable{position:relative}.p-datatable table{border-collapse:collapse;table-layout:fixed;width:100%}.p-datatable .p-sortable-column{-ms-user-select:none;-webkit-user-select:none;cursor:pointer;user-select:none}.p-datatable .p-sortable-column .p-column-title,.p-datatable .p-sortable-column .p-sortable-column-badge,.p-datatable .p-sortable-column .p-sortable-column-icon{vertical-align:middle}.p-datatable .p-sortable-column .p-sortable-column-badge{align-items:center;display:inline-flex;justify-content:center}.p-datatable-auto-layout>.p-datatable-wrapper{overflow-x:auto}.p-datatable-auto-layout>.p-datatable-wrapper>table{table-layout:auto}.p-datatable-hoverable-rows .p-selectable-row{cursor:pointer}.p-datatable-scrollable-wrapper{position:relative}.p-datatable-scrollable-footer,.p-datatable-scrollable-header{overflow:hidden}.p-datatable-scrollable-body{overflow:auto;position:relative}.p-datatable-scrollable-body>table>.p-datatable-tbody>tr:first-child>td{border-top:0}.p-datatable-virtual-table{position:absolute}.p-datatable-frozen-view .p-datatable-scrollable-body{overflow:hidden}.p-datatable-frozen-view>.p-datatable-scrollable-body>table>.p-datatable-tbody>tr>td:last-child{border-right:0}.p-datatable-unfrozen-view{position:absolute;top:0}.p-datatable-flex-scrollable,.p-datatable-flex-scrollable .p-datatable-scrollable-view,.p-datatable-flex-scrollable .p-datatable-scrollable-wrapper{display:flex;flex:1;flex-direction:column;height:100%}.p-datatable-flex-scrollable .p-datatable-scrollable-body,.p-datatable-flex-scrollable .p-datatable-virtual-scrollable-body{flex:1}.p-datatable-resizable>.p-datatable-wrapper{overflow-x:auto}.p-datatable-resizable .p-datatable-tbody>tr>td,.p-datatable-resizable .p-datatable-tfoot>tr>td,.p-datatable-resizable .p-datatable-thead>tr>th{overflow:hidden;white-space:nowrap}.p-datatable-resizable .p-resizable-column{background-clip:padding-box;position:relative}.p-datatable-resizable-fit .p-resizable-column:last-child .p-column-resizer{display:none}.p-datatable .p-column-resizer{border:1px solid transparent;cursor:col-resize;display:block;height:100%;margin:0;padding:0;position:absolute!important;right:0;top:0;width:.5rem}.p-datatable .p-column-resizer-helper{display:none;position:absolute;width:1px;z-index:10}.p-datatable .p-row-editor-cancel,.p-datatable .p-row-editor-init,.p-datatable .p-row-editor-save,.p-datatable .p-row-toggler{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;position:relative}.p-datatable-reorder-indicator-down,.p-datatable-reorder-indicator-up{display:none;position:absolute}.p-datatable-reorderablerow-handle,[pReorderableColumn]{cursor:move}.p-datatable .p-datatable-loading-overlay{align-items:center;display:flex;justify-content:center;position:absolute;z-index:2}.p-column-filter-row{align-items:center;display:flex;width:100%}.p-column-filter-menu{display:inline-flex}.p-column-filter-row p-columnfilterformelement{flex:1 1 auto;width:1%}.p-column-filter-clear-button,.p-column-filter-menu-button{align-items:center;cursor:pointer;display:inline-flex;justify-content:center;overflow:hidden;position:relative;text-decoration:none}.p-column-filter-overlay{position:absolute}.p-column-filter-row-items{list-style:none;margin:0;padding:0}.p-column-filter-row-item{cursor:pointer}.p-column-filter-add-button,.p-column-filter-remove-button{justify-content:center}.p-column-filter-add-button .p-button-label,.p-column-filter-remove-button .p-button-label{flex-grow:0}.p-column-filter-buttonbar{align-items:center;display:flex;justify-content:space-between}.p-column-filter-buttonbar .p-button{width:auto}.p-datatable.p-datatable-responsive .p-datatable-tbody>tr>td .p-column-title{display:none}cdk-virtual-scroll-viewport{outline:0 none}@media screen and (max-width:40em){.p-datatable.p-datatable-responsive .p-datatable-tfoot>tr>td,.p-datatable.p-datatable-responsive .p-datatable-thead>tr>th{display:none!important}.p-datatable.p-datatable-responsive .p-datatable-tbody>tr>td{border:0;clear:left;display:block;float:left;text-align:left;width:100%}.p-datatable.p-datatable-responsive .p-datatable-tbody>tr>td .p-column-title{display:inline-block;font-weight:700;margin:-.4em 1em -.4em -.4rem;min-width:30%;padding:.4rem}}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: TableService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.FilterService\n    }];\n  }, {\n    pageLinks: [{\n      type: Input\n    }],\n    alwaysShowPaginator: [{\n      type: Input\n    }],\n    paginatorPosition: [{\n      type: Input\n    }],\n    paginatorDropdownScrollHeight: [{\n      type: Input\n    }],\n    currentPageReportTemplate: [{\n      type: Input\n    }],\n    showFirstLastIcon: [{\n      type: Input\n    }],\n    showPageLinks: [{\n      type: Input\n    }],\n    defaultSortOrder: [{\n      type: Input\n    }],\n    sortMode: [{\n      type: Input\n    }],\n    resetPageOnSort: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    contextMenuSelectionChange: [{\n      type: Output\n    }],\n    contextMenuSelectionMode: [{\n      type: Input\n    }],\n    rowTrackBy: [{\n      type: Input\n    }],\n    lazy: [{\n      type: Input\n    }],\n    lazyLoadOnInit: [{\n      type: Input\n    }],\n    compareSelectionBy: [{\n      type: Input\n    }],\n    csvSeparator: [{\n      type: Input\n    }],\n    exportFilename: [{\n      type: Input\n    }],\n    filters: [{\n      type: Input\n    }],\n    filterDelay: [{\n      type: Input\n    }],\n    expandedRowKeys: [{\n      type: Input\n    }],\n    editingRowKeys: [{\n      type: Input\n    }],\n    rowExpandMode: [{\n      type: Input\n    }],\n    virtualScrollDelay: [{\n      type: Input\n    }],\n    virtualRowHeight: [{\n      type: Input\n    }],\n    columnResizeMode: [{\n      type: Input\n    }],\n    loadingIcon: [{\n      type: Input\n    }],\n    showLoader: [{\n      type: Input\n    }],\n    stateStorage: [{\n      type: Input\n    }],\n    editMode: [{\n      type: Input\n    }],\n    onRowSelect: [{\n      type: Output\n    }],\n    onRowUnselect: [{\n      type: Output\n    }],\n    onPage: [{\n      type: Output\n    }],\n    onSort: [{\n      type: Output\n    }],\n    onFilter: [{\n      type: Output\n    }],\n    onLazyLoad: [{\n      type: Output\n    }],\n    onRowExpand: [{\n      type: Output\n    }],\n    onRowCollapse: [{\n      type: Output\n    }],\n    onContextMenuSelect: [{\n      type: Output\n    }],\n    onColResize: [{\n      type: Output\n    }],\n    onColReorder: [{\n      type: Output\n    }],\n    onRowReorder: [{\n      type: Output\n    }],\n    onEditInit: [{\n      type: Output\n    }],\n    onEditComplete: [{\n      type: Output\n    }],\n    onEditCancel: [{\n      type: Output\n    }],\n    onHeaderCheckboxToggle: [{\n      type: Output\n    }],\n    sortFunction: [{\n      type: Output\n    }],\n    firstChange: [{\n      type: Output\n    }],\n    rowsChange: [{\n      type: Output\n    }],\n    onStateSave: [{\n      type: Output\n    }],\n    onStateRestore: [{\n      type: Output\n    }],\n    totalRecords: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    first: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    sortField: [{\n      type: Input\n    }],\n    sortOrder: [{\n      type: Input\n    }],\n    multiSortMeta: [{\n      type: Input\n    }],\n    selection: [{\n      type: Input\n    }],\n    contextMenuSelection: [{\n      type: Input\n    }],\n    frozenColumns: [{\n      type: Input\n    }],\n    frozenValue: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    tableStyle: [{\n      type: Input\n    }],\n    tableStyleClass: [{\n      type: Input\n    }],\n    paginator: [{\n      type: Input\n    }],\n    rowsPerPageOptions: [{\n      type: Input\n    }],\n    paginatorDropdownAppendTo: [{\n      type: Input\n    }],\n    showCurrentPageReport: [{\n      type: Input\n    }],\n    showJumpToPageDropdown: [{\n      type: Input\n    }],\n    selectionMode: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    metaKeySelection: [{\n      type: Input\n    }],\n    globalFilterFields: [{\n      type: Input\n    }],\n    filterLocale: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }],\n    scrollHeight: [{\n      type: Input\n    }],\n    virtualScroll: [{\n      type: Input\n    }],\n    frozenWidth: [{\n      type: Input\n    }],\n    responsive: [{\n      type: Input\n    }],\n    contextMenu: [{\n      type: Input\n    }],\n    resizableColumns: [{\n      type: Input\n    }],\n    reorderableColumns: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    rowHover: [{\n      type: Input\n    }],\n    customSort: [{\n      type: Input\n    }],\n    autoLayout: [{\n      type: Input\n    }],\n    exportFunction: [{\n      type: Input\n    }],\n    stateKey: [{\n      type: Input\n    }],\n    minBufferPx: [{\n      type: Input\n    }],\n    maxBufferPx: [{\n      type: Input\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    resizeHelperViewChild: [{\n      type: ViewChild,\n      args: ['resizeHelper']\n    }],\n    reorderIndicatorUpViewChild: [{\n      type: ViewChild,\n      args: ['reorderIndicatorUp']\n    }],\n    reorderIndicatorDownViewChild: [{\n      type: ViewChild,\n      args: ['reorderIndicatorDown']\n    }],\n    tableViewChild: [{\n      type: ViewChild,\n      args: ['table']\n    }],\n    scrollableViewChild: [{\n      type: ViewChild,\n      args: ['scrollableView']\n    }],\n    scrollableFrozenViewChild: [{\n      type: ViewChild,\n      args: ['scrollableFrozenView']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nvar TableBody = /*#__PURE__*/function () {\n  function TableBody(dt, tableService, cd) {\n    var _this11 = this;\n\n    _classCallCheck(this, TableBody);\n\n    this.dt = dt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.subscription = this.dt.tableService.valueSource$.subscribe(function () {\n      if (_this11.dt.virtualScroll) {\n        _this11.cd.detectChanges();\n      }\n    });\n  }\n\n  _createClass(TableBody, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }]);\n\n  return TableBody;\n}();\n\nTableBody.ɵfac = function TableBody_Factory(t) {\n  return new (t || TableBody)(ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(TableService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nTableBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TableBody,\n  selectors: [[\"\", \"pTableBody\", \"\"]],\n  inputs: {\n    columns: [\"pTableBody\", \"columns\"],\n    template: [\"pTableBodyTemplate\", \"template\"],\n    frozen: \"frozen\"\n  },\n  attrs: _c11,\n  decls: 5,\n  vars: 5,\n  consts: [[4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTrackBy\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"cdkVirtualFor\", \"\", 3, \"cdkVirtualForOf\", \"cdkVirtualForTrackBy\", \"cdkVirtualForTemplateCacheSize\"]],\n  template: function TableBody_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TableBody_ng_container_0_Template, 3, 6, \"ng-container\", 0);\n      ɵngcc0.ɵɵtemplate(1, TableBody_ng_container_1_Template, 2, 3, \"ng-container\", 0);\n      ɵngcc0.ɵɵtemplate(2, TableBody_ng_container_2_Template, 3, 6, \"ng-container\", 0);\n      ɵngcc0.ɵɵtemplate(3, TableBody_ng_container_3_Template, 2, 5, \"ng-container\", 0);\n      ɵngcc0.ɵɵtemplate(4, TableBody_ng_container_4_Template, 2, 5, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.dt.expandedRowTemplate && !ctx.dt.virtualScroll);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.dt.expandedRowTemplate && ctx.dt.virtualScroll);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dt.expandedRowTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dt.loading);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dt.isEmpty() && !ctx.dt.loading);\n    }\n  },\n  directives: [ɵngcc2.NgIf, ɵngcc2.NgForOf, ɵngcc2.NgTemplateOutlet, ɵngcc4.CdkVirtualForOf],\n  pipes: [ɵngcc2.SlicePipe],\n  encapsulation: 2\n});\n\nTableBody.ctorParameters = function () {\n  return [{\n    type: Table\n  }, {\n    type: TableService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nTableBody.propDecorators = {\n  columns: [{\n    type: Input,\n    args: [\"pTableBody\"]\n  }],\n  template: [{\n    type: Input,\n    args: [\"pTableBodyTemplate\"]\n  }],\n  frozen: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TableBody, [{\n    type: Component,\n    args: [{\n      selector: '[pTableBody]',\n      template: \"\\n        <ng-container *ngIf=\\\"!dt.expandedRowTemplate && !dt.virtualScroll\\\">\\n            <ng-template ngFor let-rowData let-rowIndex=\\\"index\\\" [ngForOf]=\\\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\\\" [ngForTrackBy]=\\\"dt.rowTrackBy\\\">\\n                <ng-container *ngTemplateOutlet=\\\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\\\"></ng-container>\\n            </ng-template>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"!dt.expandedRowTemplate && dt.virtualScroll\\\">\\n            <ng-template cdkVirtualFor let-rowData let-rowIndex=\\\"index\\\" [cdkVirtualForOf]=\\\"dt.filteredValue||dt.value\\\" [cdkVirtualForTrackBy]=\\\"dt.rowTrackBy\\\" [cdkVirtualForTemplateCacheSize]=\\\"0\\\">\\n                <ng-container *ngTemplateOutlet=\\\"rowData ? template: dt.loadingBodyTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\\\"></ng-container>\\n            </ng-template>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"dt.expandedRowTemplate\\\">\\n            <ng-template ngFor let-rowData let-rowIndex=\\\"index\\\" [ngForOf]=\\\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\\\" [ngForTrackBy]=\\\"dt.rowTrackBy\\\">\\n                <ng-container *ngTemplateOutlet=\\\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\\\"></ng-container>\\n                <ng-container *ngIf=\\\"dt.isRowExpanded(rowData)\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"dt.expandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns}\\\"></ng-container>\\n                </ng-container>\\n            </ng-template>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"dt.loading\\\">\\n            <ng-container *ngTemplateOutlet=\\\"dt.loadingBodyTemplate; context: {$implicit: columns, frozen: frozen}\\\"></ng-container>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"dt.isEmpty() && !dt.loading\\\">\\n            <ng-container *ngTemplateOutlet=\\\"dt.emptyMessageTemplate; context: {$implicit: columns, frozen: frozen}\\\"></ng-container>\\n        </ng-container>\\n    \",\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    columns: [{\n      type: Input,\n      args: [\"pTableBody\"]\n    }],\n    template: [{\n      type: Input,\n      args: [\"pTableBodyTemplate\"]\n    }],\n    frozen: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ScrollableView = /*#__PURE__*/function () {\n  function ScrollableView(dt, el, zone) {\n    _classCallCheck(this, ScrollableView);\n\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  _createClass(ScrollableView, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (!this.frozen) {\n        if (this.dt.frozenColumns || this.dt.frozenBodyTemplate) {\n          DomHandler.addClass(this.el.nativeElement, 'p-datatable-unfrozen-view');\n        }\n\n        var frozenView = this.el.nativeElement.previousElementSibling;\n\n        if (frozenView) {\n          if (this.dt.virtualScroll) this.frozenSiblingBody = DomHandler.findSingle(frozenView, '.p-datatable-virtual-scrollable-body');else this.frozenSiblingBody = DomHandler.findSingle(frozenView, '.p-datatable-scrollable-body');\n        }\n\n        var scrollBarWidth = DomHandler.calculateScrollbarWidth();\n        this.scrollHeaderBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\n\n        if (this.scrollFooterBoxViewChild && this.scrollFooterBoxViewChild.nativeElement) {\n          this.scrollFooterBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\n        }\n      } else {\n        if (this.scrollableAlignerViewChild && this.scrollableAlignerViewChild.nativeElement) {\n          this.scrollableAlignerViewChild.nativeElement.style.height = DomHandler.calculateScrollbarHeight() + 'px';\n        }\n      }\n\n      this.bindEvents();\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var _this12 = this;\n\n      this.zone.runOutsideAngular(function () {\n        if (_this12.scrollHeaderViewChild && _this12.scrollHeaderViewChild.nativeElement) {\n          _this12.headerScrollListener = _this12.onHeaderScroll.bind(_this12);\n\n          _this12.scrollHeaderViewChild.nativeElement.addEventListener('scroll', _this12.headerScrollListener);\n        }\n\n        if (_this12.scrollFooterViewChild && _this12.scrollFooterViewChild.nativeElement) {\n          _this12.footerScrollListener = _this12.onFooterScroll.bind(_this12);\n\n          _this12.scrollFooterViewChild.nativeElement.addEventListener('scroll', _this12.footerScrollListener);\n        }\n\n        if (!_this12.frozen) {\n          _this12.bodyScrollListener = _this12.onBodyScroll.bind(_this12);\n          if (_this12.dt.virtualScroll) _this12.virtualScrollBody.getElementRef().nativeElement.addEventListener('scroll', _this12.bodyScrollListener);else _this12.scrollBodyViewChild.nativeElement.addEventListener('scroll', _this12.bodyScrollListener);\n        }\n      });\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n        this.scrollHeaderViewChild.nativeElement.removeEventListener('scroll', this.headerScrollListener);\n      }\n\n      if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n        this.scrollFooterViewChild.nativeElement.removeEventListener('scroll', this.footerScrollListener);\n      }\n\n      if (this.scrollBodyViewChild && this.scrollBodyViewChild.nativeElement) {\n        this.scrollBodyViewChild.nativeElement.removeEventListener('scroll', this.bodyScrollListener);\n      }\n\n      if (this.virtualScrollBody && this.virtualScrollBody.getElementRef()) {\n        this.virtualScrollBody.getElementRef().nativeElement.removeEventListener('scroll', this.bodyScrollListener);\n      }\n    }\n  }, {\n    key: \"onHeaderScroll\",\n    value: function onHeaderScroll() {\n      var scrollLeft = this.scrollHeaderViewChild.nativeElement.scrollLeft;\n      this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n\n      if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n        this.scrollFooterViewChild.nativeElement.scrollLeft = scrollLeft;\n      }\n\n      this.preventBodyScrollPropagation = true;\n    }\n  }, {\n    key: \"onFooterScroll\",\n    value: function onFooterScroll() {\n      var scrollLeft = this.scrollFooterViewChild.nativeElement.scrollLeft;\n      this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n\n      if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n        this.scrollHeaderViewChild.nativeElement.scrollLeft = scrollLeft;\n      }\n\n      this.preventBodyScrollPropagation = true;\n    }\n  }, {\n    key: \"onBodyScroll\",\n    value: function onBodyScroll(event) {\n      if (this.preventBodyScrollPropagation) {\n        this.preventBodyScrollPropagation = false;\n        return;\n      }\n\n      if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n        this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n      }\n\n      if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n        this.scrollFooterBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n      }\n\n      if (this.frozenSiblingBody) {\n        this.frozenSiblingBody.scrollTop = event.target.scrollTop;\n      }\n    }\n  }, {\n    key: \"onScrollIndexChange\",\n    value: function onScrollIndexChange(index) {\n      var _this13 = this;\n\n      if (this.dt.lazy) {\n        if (this.virtualScrollTimeout) {\n          clearTimeout(this.virtualScrollTimeout);\n        }\n\n        this.virtualScrollTimeout = setTimeout(function () {\n          var page = Math.floor(index / _this13.dt.rows);\n          var virtualScrollOffset = page === 0 ? 0 : (page - 1) * _this13.dt.rows;\n          var virtualScrollChunkSize = page === 0 ? _this13.dt.rows * 2 : _this13.dt.rows * 3;\n\n          if (page !== _this13.virtualPage) {\n            _this13.virtualPage = page;\n\n            _this13.dt.onLazyLoad.emit({\n              first: virtualScrollOffset,\n              rows: virtualScrollChunkSize,\n              sortField: _this13.dt.sortField,\n              sortOrder: _this13.dt.sortOrder,\n              filters: _this13.dt.filters,\n              globalFilter: _this13.dt.filters && _this13.dt.filters['global'] ? _this13.dt.filters['global'].value : null,\n              multiSortMeta: _this13.dt.multiSortMeta\n            });\n          }\n        }, this.dt.virtualScrollDelay);\n      }\n    }\n  }, {\n    key: \"getPageCount\",\n    value: function getPageCount() {\n      var dataToRender = this.dt.filteredValue || this.dt.value;\n      var dataLength = dataToRender ? dataToRender.length : 0;\n      return Math.ceil(dataLength / this.dt.rows);\n    }\n  }, {\n    key: \"scrollToVirtualIndex\",\n    value: function scrollToVirtualIndex(index) {\n      if (this.virtualScrollBody) {\n        this.virtualScrollBody.scrollToIndex(index);\n      }\n    }\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(options) {\n      if (this.virtualScrollBody) {\n        this.virtualScrollBody.scrollTo(options);\n      } else {\n        if (this.scrollBodyViewChild.nativeElement.scrollTo) {\n          this.scrollBodyViewChild.nativeElement.scrollTo(options);\n        } else {\n          this.scrollBodyViewChild.nativeElement.scrollLeft = options.left;\n          this.scrollBodyViewChild.nativeElement.scrollTop = options.top;\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.unbindEvents();\n      this.frozenSiblingBody = null;\n    }\n  }, {\n    key: \"scrollHeight\",\n    get: function get() {\n      return this._scrollHeight;\n    },\n    set: function set(val) {\n      this._scrollHeight = val;\n\n      if (val != null && (val.includes('%') || val.includes('calc'))) {\n        console.log('Percentage scroll height calculation is removed in favor of the more performant CSS based flex mode, use scrollHeight=\"flex\" instead.');\n      }\n\n      if (this.dt.virtualScroll && this.virtualScrollBody) {\n        this.virtualScrollBody.ngOnInit();\n      }\n    }\n  }]);\n\n  return ScrollableView;\n}();\n\nScrollableView.ɵfac = function ScrollableView_Factory(t) {\n  return new (t || ScrollableView)(ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nScrollableView.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ScrollableView,\n  selectors: [[\"\", \"pScrollableView\", \"\"]],\n  viewQuery: function ScrollableView_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c16, true);\n      ɵngcc0.ɵɵviewQuery(_c17, true);\n      ɵngcc0.ɵɵviewQuery(_c18, true);\n      ɵngcc0.ɵɵviewQuery(_c19, true);\n      ɵngcc0.ɵɵviewQuery(_c20, true);\n      ɵngcc0.ɵɵviewQuery(_c21, true);\n      ɵngcc0.ɵɵviewQuery(_c22, true);\n      ɵngcc0.ɵɵviewQuery(CdkVirtualScrollViewport, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scrollHeaderViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scrollHeaderBoxViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scrollBodyViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scrollTableViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scrollFooterViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scrollFooterBoxViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scrollableAlignerViewChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.virtualScrollBody = _t.first);\n    }\n  },\n  inputs: {\n    scrollHeight: \"scrollHeight\",\n    columns: [\"pScrollableView\", \"columns\"],\n    frozen: \"frozen\"\n  },\n  attrs: _c23,\n  decls: 21,\n  vars: 24,\n  consts: [[1, \"p-datatable-scrollable-header\"], [\"scrollHeader\", \"\"], [1, \"p-datatable-scrollable-header-box\"], [\"scrollHeaderBox\", \"\"], [1, \"p-datatable-scrollable-header-table\", 3, \"ngClass\", \"ngStyle\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"p-datatable-thead\"], [1, \"p-datatable-tbody\"], [\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\", \"ngIfElse\"], [\"virtualScrollTemplate\", \"\"], [1, \"p-datatable-scrollable-footer\"], [\"scrollFooter\", \"\"], [1, \"p-datatable-scrollable-footer-box\"], [\"scrollFooterBox\", \"\"], [1, \"p-datatable-scrollable-footer-table\", 3, \"ngClass\", \"ngStyle\"], [1, \"p-datatable-tfoot\"], [1, \"p-datatable-scrollable-body\", 3, \"ngStyle\"], [\"scrollBody\", \"\"], [3, \"ngStyle\"], [\"scrollTable\", \"\"], [1, \"p-datatable-tbody\", 3, \"pTableBody\", \"pTableBodyTemplate\", \"frozen\"], [\"style\", \"background-color:transparent\", 4, \"ngIf\"], [2, \"background-color\", \"transparent\"], [\"scrollableAligner\", \"\"], [\"tabindex\", \"0\", 1, \"p-datatable-virtual-scrollable-body\", 3, \"itemSize\", \"minBufferPx\", \"maxBufferPx\", \"scrolledIndexChange\"]],\n  template: function ScrollableView_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n      ɵngcc0.ɵɵelementStart(4, \"table\", 4);\n      ɵngcc0.ɵɵtemplate(5, ScrollableView_ng_container_5_Template, 1, 0, \"ng-container\", 5);\n      ɵngcc0.ɵɵelementStart(6, \"thead\", 6);\n      ɵngcc0.ɵɵtemplate(7, ScrollableView_ng_container_7_Template, 1, 0, \"ng-container\", 5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(8, \"tbody\", 7);\n      ɵngcc0.ɵɵtemplate(9, ScrollableView_ng_template_9_Template, 1, 6, \"ng-template\", 8);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(10, ScrollableView_ng_container_10_Template, 8, 15, \"ng-container\", 9);\n      ɵngcc0.ɵɵtemplate(11, ScrollableView_ng_template_11_Template, 6, 16, \"ng-template\", null, 10, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementStart(13, \"div\", 11, 12);\n      ɵngcc0.ɵɵelementStart(15, \"div\", 13, 14);\n      ɵngcc0.ɵɵelementStart(17, \"table\", 15);\n      ɵngcc0.ɵɵtemplate(18, ScrollableView_ng_container_18_Template, 1, 0, \"ng-container\", 5);\n      ɵngcc0.ɵɵelementStart(19, \"tfoot\", 16);\n      ɵngcc0.ɵɵtemplate(20, ScrollableView_ng_container_20_Template, 1, 0, \"ng-container\", 5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      var _r6 = ɵngcc0.ɵɵreference(12);\n\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.dt.tableStyleClass)(\"ngStyle\", ctx.dt.tableStyle);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.frozen ? ctx.dt.frozenColGroupTemplate || ctx.dt.colGroupTemplate : ctx.dt.colGroupTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(16, _c7, ctx.columns));\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.frozen ? ctx.dt.frozenHeaderTemplate || ctx.dt.headerTemplate : ctx.dt.headerTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(18, _c7, ctx.columns));\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.dt.frozenValue)(\"ngForTrackBy\", ctx.dt.rowTrackBy);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.dt.virtualScroll)(\"ngIfElse\", _r6);\n      ɵngcc0.ɵɵadvance(7);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.dt.tableStyleClass)(\"ngStyle\", ctx.dt.tableStyle);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.frozen ? ctx.dt.frozenColGroupTemplate || ctx.dt.colGroupTemplate : ctx.dt.colGroupTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(20, _c7, ctx.columns));\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.frozen ? ctx.dt.frozenFooterTemplate || ctx.dt.footerTemplate : ctx.dt.footerTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(22, _c7, ctx.columns));\n    }\n  },\n  directives: [ɵngcc2.NgClass, ɵngcc2.NgStyle, ɵngcc2.NgTemplateOutlet, ɵngcc2.NgForOf, ɵngcc2.NgIf, TableBody, ɵngcc4.CdkVirtualScrollViewport, ɵngcc4.CdkFixedSizeVirtualScroll],\n  encapsulation: 2\n});\n\nScrollableView.ctorParameters = function () {\n  return [{\n    type: Table\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nScrollableView.propDecorators = {\n  columns: [{\n    type: Input,\n    args: [\"pScrollableView\"]\n  }],\n  frozen: [{\n    type: Input\n  }],\n  scrollHeaderViewChild: [{\n    type: ViewChild,\n    args: ['scrollHeader']\n  }],\n  scrollHeaderBoxViewChild: [{\n    type: ViewChild,\n    args: ['scrollHeaderBox']\n  }],\n  scrollBodyViewChild: [{\n    type: ViewChild,\n    args: ['scrollBody']\n  }],\n  scrollTableViewChild: [{\n    type: ViewChild,\n    args: ['scrollTable']\n  }],\n  scrollFooterViewChild: [{\n    type: ViewChild,\n    args: ['scrollFooter']\n  }],\n  scrollFooterBoxViewChild: [{\n    type: ViewChild,\n    args: ['scrollFooterBox']\n  }],\n  scrollableAlignerViewChild: [{\n    type: ViewChild,\n    args: ['scrollableAligner']\n  }],\n  virtualScrollBody: [{\n    type: ViewChild,\n    args: [CdkVirtualScrollViewport]\n  }],\n  scrollHeight: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ScrollableView, [{\n    type: Component,\n    args: [{\n      selector: '[pScrollableView]',\n      template: \"\\n        <div #scrollHeader class=\\\"p-datatable-scrollable-header\\\">\\n            <div #scrollHeaderBox class=\\\"p-datatable-scrollable-header-box\\\">\\n                <table class=\\\"p-datatable-scrollable-header-table\\\" [ngClass]=\\\"dt.tableStyleClass\\\" [ngStyle]=\\\"dt.tableStyle\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    <thead class=\\\"p-datatable-thead\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"frozen ? dt.frozenHeaderTemplate||dt.headerTemplate : dt.headerTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    </thead>\\n                    <tbody class=\\\"p-datatable-tbody\\\">\\n                        <ng-template ngFor let-rowData let-rowIndex=\\\"index\\\" [ngForOf]=\\\"dt.frozenValue\\\" [ngForTrackBy]=\\\"dt.rowTrackBy\\\">\\n                            <ng-container *ngTemplateOutlet=\\\"dt.frozenRowsTemplate; context: {$implicit: rowData, rowIndex: rowIndex, columns: columns}\\\"></ng-container>\\n                        </ng-template>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n        <ng-container *ngIf=\\\"!dt.virtualScroll; else virtualScrollTemplate\\\">\\n            <div #scrollBody class=\\\"p-datatable-scrollable-body\\\" [ngStyle]=\\\"{'max-height': dt.scrollHeight !== 'flex' ? scrollHeight : undefined, 'overflow-y': !frozen && dt.scrollHeight ? 'scroll' : undefined}\\\">\\n                <table #scrollTable [class]=\\\"dt.tableStyleClass\\\" [ngStyle]=\\\"dt.tableStyle\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    <tbody class=\\\"p-datatable-tbody\\\" [pTableBody]=\\\"columns\\\" [pTableBodyTemplate]=\\\"frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate\\\" [frozen]=\\\"frozen\\\"></tbody>\\n                </table>\\n                <div #scrollableAligner style=\\\"background-color:transparent\\\" *ngIf=\\\"frozen\\\"></div>\\n            </div>\\n        </ng-container>\\n        <ng-template #virtualScrollTemplate>\\n            <cdk-virtual-scroll-viewport [itemSize]=\\\"dt.virtualRowHeight\\\" tabindex=\\\"0\\\" [style.height]=\\\"dt.scrollHeight !== 'flex' ? scrollHeight : undefined\\\"\\n                    [minBufferPx]=\\\"dt.minBufferPx\\\" [maxBufferPx]=\\\"dt.maxBufferPx\\\" (scrolledIndexChange)=\\\"onScrollIndexChange($event)\\\" class=\\\"p-datatable-virtual-scrollable-body\\\">\\n                <table #scrollTable [class]=\\\"dt.tableStyleClass\\\" [ngStyle]=\\\"dt.tableStyle\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    <tbody class=\\\"p-datatable-tbody\\\" [pTableBody]=\\\"columns\\\" [pTableBodyTemplate]=\\\"frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate\\\" [frozen]=\\\"frozen\\\"></tbody>\\n                </table>\\n                <div #scrollableAligner style=\\\"background-color:transparent\\\" *ngIf=\\\"frozen\\\"></div>\\n            </cdk-virtual-scroll-viewport>\\n        </ng-template>\\n        <div #scrollFooter class=\\\"p-datatable-scrollable-footer\\\">\\n            <div #scrollFooterBox class=\\\"p-datatable-scrollable-footer-box\\\">\\n                <table class=\\\"p-datatable-scrollable-footer-table\\\" [ngClass]=\\\"dt.tableStyleClass\\\" [ngStyle]=\\\"dt.tableStyle\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    <tfoot class=\\\"p-datatable-tfoot\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"frozen ? dt.frozenFooterTemplate||dt.footerTemplate : dt.footerTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    </tfoot>\\n                </table>\\n            </div>\\n        </div>\\n    \",\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    scrollHeight: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input,\n      args: [\"pScrollableView\"]\n    }],\n    frozen: [{\n      type: Input\n    }],\n    scrollHeaderViewChild: [{\n      type: ViewChild,\n      args: ['scrollHeader']\n    }],\n    scrollHeaderBoxViewChild: [{\n      type: ViewChild,\n      args: ['scrollHeaderBox']\n    }],\n    scrollBodyViewChild: [{\n      type: ViewChild,\n      args: ['scrollBody']\n    }],\n    scrollTableViewChild: [{\n      type: ViewChild,\n      args: ['scrollTable']\n    }],\n    scrollFooterViewChild: [{\n      type: ViewChild,\n      args: ['scrollFooter']\n    }],\n    scrollFooterBoxViewChild: [{\n      type: ViewChild,\n      args: ['scrollFooterBox']\n    }],\n    scrollableAlignerViewChild: [{\n      type: ViewChild,\n      args: ['scrollableAligner']\n    }],\n    virtualScrollBody: [{\n      type: ViewChild,\n      args: [CdkVirtualScrollViewport]\n    }]\n  });\n})();\n\nvar SortableColumn = /*#__PURE__*/function () {\n  function SortableColumn(dt) {\n    var _this14 = this;\n\n    _classCallCheck(this, SortableColumn);\n\n    this.dt = dt;\n\n    if (this.isEnabled()) {\n      this.subscription = this.dt.tableService.sortSource$.subscribe(function (sortMeta) {\n        _this14.updateSortState();\n      });\n    }\n  }\n\n  _createClass(SortableColumn, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this.isEnabled()) {\n        this.updateSortState();\n      }\n    }\n  }, {\n    key: \"updateSortState\",\n    value: function updateSortState() {\n      this.sorted = this.dt.isSorted(this.field);\n      this.sortOrder = this.sorted ? this.dt.sortOrder === 1 ? 'ascending' : 'descending' : 'none';\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      if (this.isEnabled() && !this.isFilterElement(event.target)) {\n        this.updateSortState();\n        this.dt.sort({\n          originalEvent: event,\n          field: this.field\n        });\n        DomHandler.clearSelection();\n      }\n    }\n  }, {\n    key: \"onEnterKey\",\n    value: function onEnterKey(event) {\n      this.onClick(event);\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.pSortableColumnDisabled !== true;\n    }\n  }, {\n    key: \"isFilterElement\",\n    value: function isFilterElement(element) {\n      return DomHandler.hasClass(element, 'pi-filter-icon') || DomHandler.hasClass(element, 'p-column-filter-menu-button');\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }]);\n\n  return SortableColumn;\n}();\n\nSortableColumn.ɵfac = function SortableColumn_Factory(t) {\n  return new (t || SortableColumn)(ɵngcc0.ɵɵdirectiveInject(Table));\n};\n\nSortableColumn.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: SortableColumn,\n  selectors: [[\"\", \"pSortableColumn\", \"\"]],\n  hostVars: 7,\n  hostBindings: function SortableColumn_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function SortableColumn_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"keydown.enter\", function SortableColumn_keydown_enter_HostBindingHandler($event) {\n        return ctx.onEnterKey($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? \"0\" : null)(\"role\", \"columnheader\")(\"aria-sort\", ctx.sortOrder);\n      ɵngcc0.ɵɵclassProp(\"p-sortable-column\", ctx.isEnabled())(\"p-highlight\", ctx.sorted);\n    }\n  },\n  inputs: {\n    field: [\"pSortableColumn\", \"field\"],\n    pSortableColumnDisabled: \"pSortableColumnDisabled\"\n  }\n});\n\nSortableColumn.ctorParameters = function () {\n  return [{\n    type: Table\n  }];\n};\n\nSortableColumn.propDecorators = {\n  field: [{\n    type: Input,\n    args: [\"pSortableColumn\"]\n  }],\n  pSortableColumnDisabled: [{\n    type: Input\n  }],\n  onClick: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }],\n  onEnterKey: [{\n    type: HostListener,\n    args: ['keydown.enter', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SortableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[pSortableColumn]',\n      host: {\n        '[class.p-sortable-column]': 'isEnabled()',\n        '[class.p-highlight]': 'sorted',\n        '[attr.tabindex]': 'isEnabled() ? \"0\" : null',\n        '[attr.role]': '\"columnheader\"',\n        '[attr.aria-sort]': 'sortOrder'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onEnterKey: [{\n      type: HostListener,\n      args: ['keydown.enter', ['$event']]\n    }],\n    field: [{\n      type: Input,\n      args: [\"pSortableColumn\"]\n    }],\n    pSortableColumnDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\nvar SortIcon = /*#__PURE__*/function () {\n  function SortIcon(dt, cd) {\n    var _this15 = this;\n\n    _classCallCheck(this, SortIcon);\n\n    this.dt = dt;\n    this.cd = cd;\n    this.subscription = this.dt.tableService.sortSource$.subscribe(function (sortMeta) {\n      _this15.updateSortState();\n    });\n  }\n\n  _createClass(SortIcon, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.updateSortState();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"updateSortState\",\n    value: function updateSortState() {\n      if (this.dt.sortMode === 'single') {\n        this.sortOrder = this.dt.isSorted(this.field) ? this.dt.sortOrder : 0;\n      } else if (this.dt.sortMode === 'multiple') {\n        var sortMeta = this.dt.getSortMeta(this.field);\n        this.sortOrder = sortMeta ? sortMeta.order : 0;\n      }\n\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }]);\n\n  return SortIcon;\n}();\n\nSortIcon.ɵfac = function SortIcon_Factory(t) {\n  return new (t || SortIcon)(ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nSortIcon.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: SortIcon,\n  selectors: [[\"p-sortIcon\"]],\n  inputs: {\n    field: \"field\"\n  },\n  decls: 1,\n  vars: 5,\n  consts: [[1, \"p-sortable-column-icon\", \"pi\", \"pi-fw\", 3, \"ngClass\"]],\n  template: function SortIcon_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"i\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction3(1, _c25, ctx.sortOrder === 1, ctx.sortOrder === -1, ctx.sortOrder === 0));\n    }\n  },\n  directives: [ɵngcc2.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nSortIcon.ctorParameters = function () {\n  return [{\n    type: Table\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nSortIcon.propDecorators = {\n  field: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SortIcon, [{\n    type: Component,\n    args: [{\n      selector: 'p-sortIcon',\n      template: \"\\n        <i class=\\\"p-sortable-column-icon pi pi-fw\\\" [ngClass]=\\\"{'pi-sort-amount-up-alt': sortOrder === 1, 'pi-sort-amount-down': sortOrder === -1, 'pi-sort-alt': sortOrder === 0}\\\"></i>\\n    \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    field: [{\n      type: Input\n    }]\n  });\n})();\n\nvar SelectableRow = /*#__PURE__*/function () {\n  function SelectableRow(dt, tableService) {\n    var _this16 = this;\n\n    _classCallCheck(this, SelectableRow);\n\n    this.dt = dt;\n    this.tableService = tableService;\n\n    if (this.isEnabled()) {\n      this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {\n        _this16.selected = _this16.dt.isSelected(_this16.data);\n      });\n    }\n  }\n\n  _createClass(SelectableRow, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this.isEnabled()) {\n        this.selected = this.dt.isSelected(this.data);\n      }\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      if (this.isEnabled()) {\n        this.dt.handleRowClick({\n          originalEvent: event,\n          rowData: this.data,\n          rowIndex: this.index\n        });\n      }\n    }\n  }, {\n    key: \"onTouchEnd\",\n    value: function onTouchEnd(event) {\n      if (this.isEnabled()) {\n        this.dt.handleRowTouchEnd(event);\n      }\n    }\n  }, {\n    key: \"onArrowDownKeyDown\",\n    value: function onArrowDownKeyDown(event) {\n      if (!this.isEnabled()) {\n        return;\n      }\n\n      var row = event.currentTarget;\n      var nextRow = this.findNextSelectableRow(row);\n\n      if (nextRow) {\n        nextRow.focus();\n      }\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"onArrowUpKeyDown\",\n    value: function onArrowUpKeyDown(event) {\n      if (!this.isEnabled()) {\n        return;\n      }\n\n      var row = event.currentTarget;\n      var prevRow = this.findPrevSelectableRow(row);\n\n      if (prevRow) {\n        prevRow.focus();\n      }\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"onEnterKeyDown\",\n    value: function onEnterKeyDown(event) {\n      if (!this.isEnabled()) {\n        return;\n      }\n\n      this.dt.handleRowClick({\n        originalEvent: event,\n        rowData: this.data,\n        rowIndex: this.index\n      });\n    }\n  }, {\n    key: \"findNextSelectableRow\",\n    value: function findNextSelectableRow(row) {\n      var nextRow = row.nextElementSibling;\n\n      if (nextRow) {\n        if (DomHandler.hasClass(nextRow, 'p-selectable-row')) return nextRow;else return this.findNextSelectableRow(nextRow);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"findPrevSelectableRow\",\n    value: function findPrevSelectableRow(row) {\n      var prevRow = row.previousElementSibling;\n\n      if (prevRow) {\n        if (DomHandler.hasClass(prevRow, 'p-selectable-row')) return prevRow;else return this.findPrevSelectableRow(prevRow);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.pSelectableRowDisabled !== true;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }]);\n\n  return SelectableRow;\n}();\n\nSelectableRow.ɵfac = function SelectableRow_Factory(t) {\n  return new (t || SelectableRow)(ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(TableService));\n};\n\nSelectableRow.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: SelectableRow,\n  selectors: [[\"\", \"pSelectableRow\", \"\"]],\n  hostVars: 5,\n  hostBindings: function SelectableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function SelectableRow_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"touchend\", function SelectableRow_touchend_HostBindingHandler($event) {\n        return ctx.onTouchEnd($event);\n      })(\"keydown.arrowdown\", function SelectableRow_keydown_arrowdown_HostBindingHandler($event) {\n        return ctx.onArrowDownKeyDown($event);\n      })(\"keydown.arrowup\", function SelectableRow_keydown_arrowup_HostBindingHandler($event) {\n        return ctx.onArrowUpKeyDown($event);\n      })(\"keydown.enter\", function SelectableRow_keydown_enter_HostBindingHandler($event) {\n        return ctx.onEnterKeyDown($event);\n      })(\"keydown.shift.enter\", function SelectableRow_keydown_shift_enter_HostBindingHandler($event) {\n        return ctx.onEnterKeyDown($event);\n      })(\"keydown.meta.enter\", function SelectableRow_keydown_meta_enter_HostBindingHandler($event) {\n        return ctx.onEnterKeyDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? 0 : undefined);\n      ɵngcc0.ɵɵclassProp(\"p-selectable-row\", ctx.isEnabled())(\"p-highlight\", ctx.selected);\n    }\n  },\n  inputs: {\n    data: [\"pSelectableRow\", \"data\"],\n    index: [\"pSelectableRowIndex\", \"index\"],\n    pSelectableRowDisabled: \"pSelectableRowDisabled\"\n  }\n});\n\nSelectableRow.ctorParameters = function () {\n  return [{\n    type: Table\n  }, {\n    type: TableService\n  }];\n};\n\nSelectableRow.propDecorators = {\n  data: [{\n    type: Input,\n    args: [\"pSelectableRow\"]\n  }],\n  index: [{\n    type: Input,\n    args: [\"pSelectableRowIndex\"]\n  }],\n  pSelectableRowDisabled: [{\n    type: Input\n  }],\n  onClick: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }],\n  onTouchEnd: [{\n    type: HostListener,\n    args: ['touchend', ['$event']]\n  }],\n  onArrowDownKeyDown: [{\n    type: HostListener,\n    args: ['keydown.arrowdown', ['$event']]\n  }],\n  onArrowUpKeyDown: [{\n    type: HostListener,\n    args: ['keydown.arrowup', ['$event']]\n  }],\n  onEnterKeyDown: [{\n    type: HostListener,\n    args: ['keydown.enter', ['$event']]\n  }, {\n    type: HostListener,\n    args: ['keydown.shift.enter', ['$event']]\n  }, {\n    type: HostListener,\n    args: ['keydown.meta.enter', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SelectableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pSelectableRow]',\n      host: {\n        '[class.p-selectable-row]': 'isEnabled()',\n        '[class.p-highlight]': 'selected',\n        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onTouchEnd: [{\n      type: HostListener,\n      args: ['touchend', ['$event']]\n    }],\n    onArrowDownKeyDown: [{\n      type: HostListener,\n      args: ['keydown.arrowdown', ['$event']]\n    }],\n    onArrowUpKeyDown: [{\n      type: HostListener,\n      args: ['keydown.arrowup', ['$event']]\n    }],\n    onEnterKeyDown: [{\n      type: HostListener,\n      args: ['keydown.enter', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.shift.enter', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.meta.enter', ['$event']]\n    }],\n    data: [{\n      type: Input,\n      args: [\"pSelectableRow\"]\n    }],\n    index: [{\n      type: Input,\n      args: [\"pSelectableRowIndex\"]\n    }],\n    pSelectableRowDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\nvar SelectableRowDblClick = /*#__PURE__*/function () {\n  function SelectableRowDblClick(dt, tableService) {\n    var _this17 = this;\n\n    _classCallCheck(this, SelectableRowDblClick);\n\n    this.dt = dt;\n    this.tableService = tableService;\n\n    if (this.isEnabled()) {\n      this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {\n        _this17.selected = _this17.dt.isSelected(_this17.data);\n      });\n    }\n  }\n\n  _createClass(SelectableRowDblClick, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this.isEnabled()) {\n        this.selected = this.dt.isSelected(this.data);\n      }\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      if (this.isEnabled()) {\n        this.dt.handleRowClick({\n          originalEvent: event,\n          rowData: this.data,\n          rowIndex: this.index\n        });\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.pSelectableRowDisabled !== true;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }]);\n\n  return SelectableRowDblClick;\n}();\n\nSelectableRowDblClick.ɵfac = function SelectableRowDblClick_Factory(t) {\n  return new (t || SelectableRowDblClick)(ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(TableService));\n};\n\nSelectableRowDblClick.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: SelectableRowDblClick,\n  selectors: [[\"\", \"pSelectableRowDblClick\", \"\"]],\n  hostVars: 4,\n  hostBindings: function SelectableRowDblClick_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"dblclick\", function SelectableRowDblClick_dblclick_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"p-selectable-row\", ctx.isEnabled())(\"p-highlight\", ctx.selected);\n    }\n  },\n  inputs: {\n    data: [\"pSelectableRowDblClick\", \"data\"],\n    index: [\"pSelectableRowIndex\", \"index\"],\n    pSelectableRowDisabled: \"pSelectableRowDisabled\"\n  }\n});\n\nSelectableRowDblClick.ctorParameters = function () {\n  return [{\n    type: Table\n  }, {\n    type: TableService\n  }];\n};\n\nSelectableRowDblClick.propDecorators = {\n  data: [{\n    type: Input,\n    args: [\"pSelectableRowDblClick\"]\n  }],\n  index: [{\n    type: Input,\n    args: [\"pSelectableRowIndex\"]\n  }],\n  pSelectableRowDisabled: [{\n    type: Input\n  }],\n  onClick: [{\n    type: HostListener,\n    args: ['dblclick', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SelectableRowDblClick, [{\n    type: Directive,\n    args: [{\n      selector: '[pSelectableRowDblClick]',\n      host: {\n        '[class.p-selectable-row]': 'isEnabled()',\n        '[class.p-highlight]': 'selected'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['dblclick', ['$event']]\n    }],\n    data: [{\n      type: Input,\n      args: [\"pSelectableRowDblClick\"]\n    }],\n    index: [{\n      type: Input,\n      args: [\"pSelectableRowIndex\"]\n    }],\n    pSelectableRowDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ContextMenuRow = /*#__PURE__*/function () {\n  function ContextMenuRow(dt, tableService, el) {\n    var _this18 = this;\n\n    _classCallCheck(this, ContextMenuRow);\n\n    this.dt = dt;\n    this.tableService = tableService;\n    this.el = el;\n\n    if (this.isEnabled()) {\n      this.subscription = this.dt.tableService.contextMenuSource$.subscribe(function (data) {\n        _this18.selected = _this18.dt.equals(_this18.data, data);\n      });\n    }\n  }\n\n  _createClass(ContextMenuRow, [{\n    key: \"onContextMenu\",\n    value: function onContextMenu(event) {\n      if (this.isEnabled()) {\n        this.dt.handleRowRightClick({\n          originalEvent: event,\n          rowData: this.data,\n          rowIndex: this.index\n        });\n        this.el.nativeElement.focus();\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.pContextMenuRowDisabled !== true;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }]);\n\n  return ContextMenuRow;\n}();\n\nContextMenuRow.ɵfac = function ContextMenuRow_Factory(t) {\n  return new (t || ContextMenuRow)(ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(TableService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nContextMenuRow.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ContextMenuRow,\n  selectors: [[\"\", \"pContextMenuRow\", \"\"]],\n  hostVars: 3,\n  hostBindings: function ContextMenuRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"contextmenu\", function ContextMenuRow_contextmenu_HostBindingHandler($event) {\n        return ctx.onContextMenu($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? 0 : undefined);\n      ɵngcc0.ɵɵclassProp(\"p-highlight-contextmenu\", ctx.selected);\n    }\n  },\n  inputs: {\n    data: [\"pContextMenuRow\", \"data\"],\n    index: [\"pContextMenuRowIndex\", \"index\"],\n    pContextMenuRowDisabled: \"pContextMenuRowDisabled\"\n  }\n});\n\nContextMenuRow.ctorParameters = function () {\n  return [{\n    type: Table\n  }, {\n    type: TableService\n  }, {\n    type: ElementRef\n  }];\n};\n\nContextMenuRow.propDecorators = {\n  data: [{\n    type: Input,\n    args: [\"pContextMenuRow\"]\n  }],\n  index: [{\n    type: Input,\n    args: [\"pContextMenuRowIndex\"]\n  }],\n  pContextMenuRowDisabled: [{\n    type: Input\n  }],\n  onContextMenu: [{\n    type: HostListener,\n    args: ['contextmenu', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ContextMenuRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pContextMenuRow]',\n      host: {\n        '[class.p-highlight-contextmenu]': 'selected',\n        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n      }\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    onContextMenu: [{\n      type: HostListener,\n      args: ['contextmenu', ['$event']]\n    }],\n    data: [{\n      type: Input,\n      args: [\"pContextMenuRow\"]\n    }],\n    index: [{\n      type: Input,\n      args: [\"pContextMenuRowIndex\"]\n    }],\n    pContextMenuRowDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\nvar RowToggler = /*#__PURE__*/function () {\n  function RowToggler(dt) {\n    _classCallCheck(this, RowToggler);\n\n    this.dt = dt;\n  }\n\n  _createClass(RowToggler, [{\n    key: \"onClick\",\n    value: function onClick(event) {\n      if (this.isEnabled()) {\n        this.dt.toggleRow(this.data, event);\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.pRowTogglerDisabled !== true;\n    }\n  }]);\n\n  return RowToggler;\n}();\n\nRowToggler.ɵfac = function RowToggler_Factory(t) {\n  return new (t || RowToggler)(ɵngcc0.ɵɵdirectiveInject(Table));\n};\n\nRowToggler.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: RowToggler,\n  selectors: [[\"\", \"pRowToggler\", \"\"]],\n  hostBindings: function RowToggler_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function RowToggler_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  },\n  inputs: {\n    data: [\"pRowToggler\", \"data\"],\n    pRowTogglerDisabled: \"pRowTogglerDisabled\"\n  }\n});\n\nRowToggler.ctorParameters = function () {\n  return [{\n    type: Table\n  }];\n};\n\nRowToggler.propDecorators = {\n  data: [{\n    type: Input,\n    args: ['pRowToggler']\n  }],\n  pRowTogglerDisabled: [{\n    type: Input\n  }],\n  onClick: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(RowToggler, [{\n    type: Directive,\n    args: [{\n      selector: '[pRowToggler]'\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    data: [{\n      type: Input,\n      args: ['pRowToggler']\n    }],\n    pRowTogglerDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ResizableColumn = /*#__PURE__*/function () {\n  function ResizableColumn(dt, el, zone) {\n    _classCallCheck(this, ResizableColumn);\n\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  _createClass(ResizableColumn, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this19 = this;\n\n      if (this.isEnabled()) {\n        DomHandler.addClass(this.el.nativeElement, 'p-resizable-column');\n        this.resizer = document.createElement('span');\n        this.resizer.className = 'p-column-resizer';\n        this.el.nativeElement.appendChild(this.resizer);\n        this.zone.runOutsideAngular(function () {\n          _this19.resizerMouseDownListener = _this19.onMouseDown.bind(_this19);\n\n          _this19.resizer.addEventListener('mousedown', _this19.resizerMouseDownListener);\n        });\n      }\n    }\n  }, {\n    key: \"bindDocumentEvents\",\n    value: function bindDocumentEvents() {\n      var _this20 = this;\n\n      this.zone.runOutsideAngular(function () {\n        _this20.documentMouseMoveListener = _this20.onDocumentMouseMove.bind(_this20);\n        document.addEventListener('mousemove', _this20.documentMouseMoveListener);\n        _this20.documentMouseUpListener = _this20.onDocumentMouseUp.bind(_this20);\n        document.addEventListener('mouseup', _this20.documentMouseUpListener);\n      });\n    }\n  }, {\n    key: \"unbindDocumentEvents\",\n    value: function unbindDocumentEvents() {\n      if (this.documentMouseMoveListener) {\n        document.removeEventListener('mousemove', this.documentMouseMoveListener);\n        this.documentMouseMoveListener = null;\n      }\n\n      if (this.documentMouseUpListener) {\n        document.removeEventListener('mouseup', this.documentMouseUpListener);\n        this.documentMouseUpListener = null;\n      }\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      if (event.which === 1) {\n        this.dt.onColumnResizeBegin(event);\n        this.bindDocumentEvents();\n      }\n    }\n  }, {\n    key: \"onDocumentMouseMove\",\n    value: function onDocumentMouseMove(event) {\n      this.dt.onColumnResize(event);\n    }\n  }, {\n    key: \"onDocumentMouseUp\",\n    value: function onDocumentMouseUp(event) {\n      this.dt.onColumnResizeEnd(event, this.el.nativeElement);\n      this.unbindDocumentEvents();\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.pResizableColumnDisabled !== true;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.resizerMouseDownListener) {\n        this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\n      }\n\n      this.unbindDocumentEvents();\n    }\n  }]);\n\n  return ResizableColumn;\n}();\n\nResizableColumn.ɵfac = function ResizableColumn_Factory(t) {\n  return new (t || ResizableColumn)(ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nResizableColumn.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ResizableColumn,\n  selectors: [[\"\", \"pResizableColumn\", \"\"]],\n  inputs: {\n    pResizableColumnDisabled: \"pResizableColumnDisabled\"\n  }\n});\n\nResizableColumn.ctorParameters = function () {\n  return [{\n    type: Table\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nResizableColumn.propDecorators = {\n  pResizableColumnDisabled: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ResizableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[pResizableColumn]'\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    pResizableColumnDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ReorderableColumn = /*#__PURE__*/function () {\n  function ReorderableColumn(dt, el, zone) {\n    _classCallCheck(this, ReorderableColumn);\n\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  _createClass(ReorderableColumn, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (this.isEnabled()) {\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var _this21 = this;\n\n      this.zone.runOutsideAngular(function () {\n        _this21.mouseDownListener = _this21.onMouseDown.bind(_this21);\n\n        _this21.el.nativeElement.addEventListener('mousedown', _this21.mouseDownListener);\n\n        _this21.dragStartListener = _this21.onDragStart.bind(_this21);\n\n        _this21.el.nativeElement.addEventListener('dragstart', _this21.dragStartListener);\n\n        _this21.dragOverListener = _this21.onDragEnter.bind(_this21);\n\n        _this21.el.nativeElement.addEventListener('dragover', _this21.dragOverListener);\n\n        _this21.dragEnterListener = _this21.onDragEnter.bind(_this21);\n\n        _this21.el.nativeElement.addEventListener('dragenter', _this21.dragEnterListener);\n\n        _this21.dragLeaveListener = _this21.onDragLeave.bind(_this21);\n\n        _this21.el.nativeElement.addEventListener('dragleave', _this21.dragLeaveListener);\n      });\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      if (this.mouseDownListener) {\n        document.removeEventListener('mousedown', this.mouseDownListener);\n        this.mouseDownListener = null;\n      }\n\n      if (this.dragOverListener) {\n        document.removeEventListener('dragover', this.dragOverListener);\n        this.dragOverListener = null;\n      }\n\n      if (this.dragEnterListener) {\n        document.removeEventListener('dragenter', this.dragEnterListener);\n        this.dragEnterListener = null;\n      }\n\n      if (this.dragEnterListener) {\n        document.removeEventListener('dragenter', this.dragEnterListener);\n        this.dragEnterListener = null;\n      }\n\n      if (this.dragLeaveListener) {\n        document.removeEventListener('dragleave', this.dragLeaveListener);\n        this.dragLeaveListener = null;\n      }\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || DomHandler.hasClass(event.target, 'p-column-resizer')) this.el.nativeElement.draggable = false;else this.el.nativeElement.draggable = true;\n    }\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart(event) {\n      this.dt.onColumnDragStart(event, this.el.nativeElement);\n    }\n  }, {\n    key: \"onDragOver\",\n    value: function onDragOver(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"onDragEnter\",\n    value: function onDragEnter(event) {\n      this.dt.onColumnDragEnter(event, this.el.nativeElement);\n    }\n  }, {\n    key: \"onDragLeave\",\n    value: function onDragLeave(event) {\n      this.dt.onColumnDragLeave(event);\n    }\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(event) {\n      if (this.isEnabled()) {\n        this.dt.onColumnDrop(event, this.el.nativeElement);\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.pReorderableColumnDisabled !== true;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.unbindEvents();\n    }\n  }]);\n\n  return ReorderableColumn;\n}();\n\nReorderableColumn.ɵfac = function ReorderableColumn_Factory(t) {\n  return new (t || ReorderableColumn)(ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nReorderableColumn.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ReorderableColumn,\n  selectors: [[\"\", \"pReorderableColumn\", \"\"]],\n  hostBindings: function ReorderableColumn_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"drop\", function ReorderableColumn_drop_HostBindingHandler($event) {\n        return ctx.onDrop($event);\n      });\n    }\n  },\n  inputs: {\n    pReorderableColumnDisabled: \"pReorderableColumnDisabled\"\n  }\n});\n\nReorderableColumn.ctorParameters = function () {\n  return [{\n    type: Table\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nReorderableColumn.propDecorators = {\n  pReorderableColumnDisabled: [{\n    type: Input\n  }],\n  onDrop: [{\n    type: HostListener,\n    args: ['drop', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ReorderableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[pReorderableColumn]'\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }],\n    pReorderableColumnDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\nvar EditableColumn = /*#__PURE__*/function () {\n  function EditableColumn(dt, el, zone) {\n    _classCallCheck(this, EditableColumn);\n\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  _createClass(EditableColumn, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (this.isEnabled()) {\n        DomHandler.addClass(this.el.nativeElement, 'p-editable-column');\n      }\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      if (this.isEnabled()) {\n        this.dt.editingCellClick = true;\n\n        if (this.dt.editingCell) {\n          if (this.dt.editingCell !== this.el.nativeElement) {\n            if (!this.dt.isEditingCellValid()) {\n              return;\n            }\n\n            this.closeEditingCell(true, event);\n            this.openCell();\n          }\n        } else {\n          this.openCell();\n        }\n      }\n    }\n  }, {\n    key: \"openCell\",\n    value: function openCell() {\n      var _this22 = this;\n\n      this.dt.updateEditingCell(this.el.nativeElement, this.data, this.field, this.rowIndex);\n      DomHandler.addClass(this.el.nativeElement, 'p-cell-editing');\n      this.dt.onEditInit.emit({\n        field: this.field,\n        data: this.data,\n        index: this.rowIndex\n      });\n      this.zone.runOutsideAngular(function () {\n        setTimeout(function () {\n          var focusCellSelector = _this22.pFocusCellSelector || 'input, textarea, select';\n          var focusableElement = DomHandler.findSingle(_this22.el.nativeElement, focusCellSelector);\n\n          if (focusableElement) {\n            focusableElement.focus();\n          }\n        }, 50);\n      });\n    }\n  }, {\n    key: \"closeEditingCell\",\n    value: function closeEditingCell(completed, event) {\n      if (completed) this.dt.onEditComplete.emit({\n        field: this.dt.editingCellField,\n        data: this.dt.editingCellData,\n        originalEvent: event,\n        index: this.dt.editingCellRowIndex\n      });else this.dt.onEditCancel.emit({\n        field: this.dt.editingCellField,\n        data: this.dt.editingCellData,\n        originalEvent: event,\n        index: this.dt.editingCellRowIndex\n      });\n      DomHandler.removeClass(this.dt.editingCell, 'p-cell-editing');\n      this.dt.editingCell = null;\n      this.dt.editingCellData = null;\n      this.dt.editingCellField = null;\n      this.dt.unbindDocumentEditListener();\n    }\n  }, {\n    key: \"onEnterKeyDown\",\n    value: function onEnterKeyDown(event) {\n      if (this.isEnabled()) {\n        if (this.dt.isEditingCellValid()) {\n          this.closeEditingCell(true, event);\n        }\n\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"onEscapeKeyDown\",\n    value: function onEscapeKeyDown(event) {\n      if (this.isEnabled()) {\n        if (this.dt.isEditingCellValid()) {\n          this.closeEditingCell(false, event);\n        }\n\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"onShiftKeyDown\",\n    value: function onShiftKeyDown(event) {\n      if (this.isEnabled()) {\n        if (event.shiftKey) this.moveToPreviousCell(event);else {\n          this.moveToNextCell(event);\n        }\n      }\n    }\n  }, {\n    key: \"findCell\",\n    value: function findCell(element) {\n      if (element) {\n        var cell = element;\n\n        while (cell && !DomHandler.hasClass(cell, 'p-cell-editing')) {\n          cell = cell.parentElement;\n        }\n\n        return cell;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"moveToPreviousCell\",\n    value: function moveToPreviousCell(event) {\n      var currentCell = this.findCell(event.target);\n\n      if (currentCell) {\n        var targetCell = this.findPreviousEditableColumn(currentCell);\n\n        if (targetCell) {\n          if (this.dt.isEditingCellValid()) {\n            this.closeEditingCell(true, event);\n          }\n\n          DomHandler.invokeElementMethod(event.target, 'blur');\n          DomHandler.invokeElementMethod(targetCell, 'click');\n          event.preventDefault();\n        }\n      }\n    }\n  }, {\n    key: \"moveToNextCell\",\n    value: function moveToNextCell(event) {\n      var currentCell = this.findCell(event.target);\n\n      if (currentCell) {\n        var targetCell = this.findNextEditableColumn(currentCell);\n\n        if (targetCell) {\n          if (this.dt.isEditingCellValid()) {\n            this.closeEditingCell(true, event);\n          }\n\n          DomHandler.invokeElementMethod(event.target, 'blur');\n          DomHandler.invokeElementMethod(targetCell, 'click');\n          event.preventDefault();\n        }\n      }\n    }\n  }, {\n    key: \"findPreviousEditableColumn\",\n    value: function findPreviousEditableColumn(cell) {\n      var prevCell = cell.previousElementSibling;\n\n      if (!prevCell) {\n        var previousRow = cell.parentElement.previousElementSibling;\n\n        if (previousRow) {\n          prevCell = previousRow.lastElementChild;\n        }\n      }\n\n      if (prevCell) {\n        if (DomHandler.hasClass(prevCell, 'p-editable-column')) return prevCell;else return this.findPreviousEditableColumn(prevCell);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"findNextEditableColumn\",\n    value: function findNextEditableColumn(cell) {\n      var nextCell = cell.nextElementSibling;\n\n      if (!nextCell) {\n        var nextRow = cell.parentElement.nextElementSibling;\n\n        if (nextRow) {\n          nextCell = nextRow.firstElementChild;\n        }\n      }\n\n      if (nextCell) {\n        if (DomHandler.hasClass(nextCell, 'p-editable-column')) return nextCell;else return this.findNextEditableColumn(nextCell);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.pEditableColumnDisabled !== true;\n    }\n  }]);\n\n  return EditableColumn;\n}();\n\nEditableColumn.ɵfac = function EditableColumn_Factory(t) {\n  return new (t || EditableColumn)(ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nEditableColumn.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: EditableColumn,\n  selectors: [[\"\", \"pEditableColumn\", \"\"]],\n  hostBindings: function EditableColumn_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function EditableColumn_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      })(\"keydown.enter\", function EditableColumn_keydown_enter_HostBindingHandler($event) {\n        return ctx.onEnterKeyDown($event);\n      })(\"keydown.escape\", function EditableColumn_keydown_escape_HostBindingHandler($event) {\n        return ctx.onEscapeKeyDown($event);\n      })(\"keydown.tab\", function EditableColumn_keydown_tab_HostBindingHandler($event) {\n        return ctx.onShiftKeyDown($event);\n      })(\"keydown.shift.tab\", function EditableColumn_keydown_shift_tab_HostBindingHandler($event) {\n        return ctx.onShiftKeyDown($event);\n      })(\"keydown.meta.tab\", function EditableColumn_keydown_meta_tab_HostBindingHandler($event) {\n        return ctx.onShiftKeyDown($event);\n      });\n    }\n  },\n  inputs: {\n    data: [\"pEditableColumn\", \"data\"],\n    field: [\"pEditableColumnField\", \"field\"],\n    rowIndex: [\"pEditableColumnRowIndex\", \"rowIndex\"],\n    pEditableColumnDisabled: \"pEditableColumnDisabled\",\n    pFocusCellSelector: \"pFocusCellSelector\"\n  }\n});\n\nEditableColumn.ctorParameters = function () {\n  return [{\n    type: Table\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nEditableColumn.propDecorators = {\n  data: [{\n    type: Input,\n    args: [\"pEditableColumn\"]\n  }],\n  field: [{\n    type: Input,\n    args: [\"pEditableColumnField\"]\n  }],\n  rowIndex: [{\n    type: Input,\n    args: [\"pEditableColumnRowIndex\"]\n  }],\n  pEditableColumnDisabled: [{\n    type: Input\n  }],\n  pFocusCellSelector: [{\n    type: Input\n  }],\n  onClick: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }],\n  onEnterKeyDown: [{\n    type: HostListener,\n    args: ['keydown.enter', ['$event']]\n  }],\n  onEscapeKeyDown: [{\n    type: HostListener,\n    args: ['keydown.escape', ['$event']]\n  }],\n  onShiftKeyDown: [{\n    type: HostListener,\n    args: ['keydown.tab', ['$event']]\n  }, {\n    type: HostListener,\n    args: ['keydown.shift.tab', ['$event']]\n  }, {\n    type: HostListener,\n    args: ['keydown.meta.tab', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(EditableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[pEditableColumn]'\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onEnterKeyDown: [{\n      type: HostListener,\n      args: ['keydown.enter', ['$event']]\n    }],\n    onEscapeKeyDown: [{\n      type: HostListener,\n      args: ['keydown.escape', ['$event']]\n    }],\n    onShiftKeyDown: [{\n      type: HostListener,\n      args: ['keydown.tab', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.shift.tab', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.meta.tab', ['$event']]\n    }],\n    data: [{\n      type: Input,\n      args: [\"pEditableColumn\"]\n    }],\n    field: [{\n      type: Input,\n      args: [\"pEditableColumnField\"]\n    }],\n    rowIndex: [{\n      type: Input,\n      args: [\"pEditableColumnRowIndex\"]\n    }],\n    pEditableColumnDisabled: [{\n      type: Input\n    }],\n    pFocusCellSelector: [{\n      type: Input\n    }]\n  });\n})();\n\nvar EditableRow = /*#__PURE__*/function () {\n  function EditableRow(el) {\n    _classCallCheck(this, EditableRow);\n\n    this.el = el;\n  }\n\n  _createClass(EditableRow, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.pEditableRowDisabled !== true;\n    }\n  }]);\n\n  return EditableRow;\n}();\n\nEditableRow.ɵfac = function EditableRow_Factory(t) {\n  return new (t || EditableRow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nEditableRow.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: EditableRow,\n  selectors: [[\"\", \"pEditableRow\", \"\"]],\n  inputs: {\n    data: [\"pEditableRow\", \"data\"],\n    pEditableRowDisabled: \"pEditableRowDisabled\"\n  }\n});\n\nEditableRow.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nEditableRow.propDecorators = {\n  data: [{\n    type: Input,\n    args: [\"pEditableRow\"]\n  }],\n  pEditableRowDisabled: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(EditableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pEditableRow]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    data: [{\n      type: Input,\n      args: [\"pEditableRow\"]\n    }],\n    pEditableRowDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\nvar InitEditableRow = /*#__PURE__*/function () {\n  function InitEditableRow(dt, editableRow) {\n    _classCallCheck(this, InitEditableRow);\n\n    this.dt = dt;\n    this.editableRow = editableRow;\n  }\n\n  _createClass(InitEditableRow, [{\n    key: \"onClick\",\n    value: function onClick(event) {\n      this.dt.initRowEdit(this.editableRow.data);\n      event.preventDefault();\n    }\n  }]);\n\n  return InitEditableRow;\n}();\n\nInitEditableRow.ɵfac = function InitEditableRow_Factory(t) {\n  return new (t || InitEditableRow)(ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(EditableRow));\n};\n\nInitEditableRow.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: InitEditableRow,\n  selectors: [[\"\", \"pInitEditableRow\", \"\"]],\n  hostBindings: function InitEditableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function InitEditableRow_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  }\n});\n\nInitEditableRow.ctorParameters = function () {\n  return [{\n    type: Table\n  }, {\n    type: EditableRow\n  }];\n};\n\nInitEditableRow.propDecorators = {\n  onClick: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(InitEditableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pInitEditableRow]'\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: EditableRow\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\nvar SaveEditableRow = /*#__PURE__*/function () {\n  function SaveEditableRow(dt, editableRow) {\n    _classCallCheck(this, SaveEditableRow);\n\n    this.dt = dt;\n    this.editableRow = editableRow;\n  }\n\n  _createClass(SaveEditableRow, [{\n    key: \"onClick\",\n    value: function onClick(event) {\n      this.dt.saveRowEdit(this.editableRow.data, this.editableRow.el.nativeElement);\n      event.preventDefault();\n    }\n  }]);\n\n  return SaveEditableRow;\n}();\n\nSaveEditableRow.ɵfac = function SaveEditableRow_Factory(t) {\n  return new (t || SaveEditableRow)(ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(EditableRow));\n};\n\nSaveEditableRow.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: SaveEditableRow,\n  selectors: [[\"\", \"pSaveEditableRow\", \"\"]],\n  hostBindings: function SaveEditableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function SaveEditableRow_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  }\n});\n\nSaveEditableRow.ctorParameters = function () {\n  return [{\n    type: Table\n  }, {\n    type: EditableRow\n  }];\n};\n\nSaveEditableRow.propDecorators = {\n  onClick: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SaveEditableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pSaveEditableRow]'\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: EditableRow\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\nvar CancelEditableRow = /*#__PURE__*/function () {\n  function CancelEditableRow(dt, editableRow) {\n    _classCallCheck(this, CancelEditableRow);\n\n    this.dt = dt;\n    this.editableRow = editableRow;\n  }\n\n  _createClass(CancelEditableRow, [{\n    key: \"onClick\",\n    value: function onClick(event) {\n      this.dt.cancelRowEdit(this.editableRow.data);\n      event.preventDefault();\n    }\n  }]);\n\n  return CancelEditableRow;\n}();\n\nCancelEditableRow.ɵfac = function CancelEditableRow_Factory(t) {\n  return new (t || CancelEditableRow)(ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(EditableRow));\n};\n\nCancelEditableRow.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CancelEditableRow,\n  selectors: [[\"\", \"pCancelEditableRow\", \"\"]],\n  hostBindings: function CancelEditableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function CancelEditableRow_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  }\n});\n\nCancelEditableRow.ctorParameters = function () {\n  return [{\n    type: Table\n  }, {\n    type: EditableRow\n  }];\n};\n\nCancelEditableRow.propDecorators = {\n  onClick: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CancelEditableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pCancelEditableRow]'\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: EditableRow\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\nvar CellEditor = /*#__PURE__*/function () {\n  function CellEditor(dt, editableColumn, editableRow) {\n    _classCallCheck(this, CellEditor);\n\n    this.dt = dt;\n    this.editableColumn = editableColumn;\n    this.editableRow = editableRow;\n  }\n\n  _createClass(CellEditor, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this23 = this;\n\n      this.templates.forEach(function (item) {\n        switch (item.getType()) {\n          case 'input':\n            _this23.inputTemplate = item.template;\n            break;\n\n          case 'output':\n            _this23.outputTemplate = item.template;\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"editing\",\n    get: function get() {\n      return this.dt.editingCell && this.editableColumn && this.dt.editingCell === this.editableColumn.el.nativeElement || this.editableRow && this.dt.editMode === 'row' && this.dt.isRowEditing(this.editableRow.data);\n    }\n  }]);\n\n  return CellEditor;\n}();\n\nCellEditor.ɵfac = function CellEditor_Factory(t) {\n  return new (t || CellEditor)(ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(EditableColumn, 8), ɵngcc0.ɵɵdirectiveInject(EditableRow, 8));\n};\n\nCellEditor.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CellEditor,\n  selectors: [[\"p-cellEditor\"]],\n  contentQueries: function CellEditor_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [4, \"ngTemplateOutlet\"]],\n  template: function CellEditor_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, CellEditor_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      ɵngcc0.ɵɵtemplate(1, CellEditor_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.editing);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.editing);\n    }\n  },\n  directives: [ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\nCellEditor.ctorParameters = function () {\n  return [{\n    type: Table\n  }, {\n    type: EditableColumn,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: EditableRow,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nCellEditor.propDecorators = {\n  templates: [{\n    type: ContentChildren,\n    args: [PrimeTemplate]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CellEditor, [{\n    type: Component,\n    args: [{\n      selector: 'p-cellEditor',\n      template: \"\\n        <ng-container *ngIf=\\\"editing\\\">\\n            <ng-container *ngTemplateOutlet=\\\"inputTemplate\\\"></ng-container>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"!editing\\\">\\n            <ng-container *ngTemplateOutlet=\\\"outputTemplate\\\"></ng-container>\\n        </ng-container>\\n    \",\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: EditableColumn,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: EditableRow,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nvar TableRadioButton = /*#__PURE__*/function () {\n  function TableRadioButton(dt, tableService, cd) {\n    var _this24 = this;\n\n    _classCallCheck(this, TableRadioButton);\n\n    this.dt = dt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {\n      _this24.checked = _this24.dt.isSelected(_this24.value);\n\n      _this24.cd.markForCheck();\n    });\n  }\n\n  _createClass(TableRadioButton, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.checked = this.dt.isSelected(this.value);\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      if (!this.disabled) {\n        this.dt.toggleRowWithRadio({\n          originalEvent: event,\n          rowIndex: this.index\n        }, this.value);\n      }\n\n      DomHandler.clearSelection();\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }]);\n\n  return TableRadioButton;\n}();\n\nTableRadioButton.ɵfac = function TableRadioButton_Factory(t) {\n  return new (t || TableRadioButton)(ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(TableService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nTableRadioButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TableRadioButton,\n  selectors: [[\"p-tableRadioButton\"]],\n  viewQuery: function TableRadioButton_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c26, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.boxViewChild = _t.first);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    value: \"value\",\n    index: \"index\",\n    inputId: \"inputId\",\n    name: \"name\",\n    ariaLabel: \"ariaLabel\"\n  },\n  decls: 6,\n  vars: 10,\n  consts: [[1, \"p-radiobutton\", \"p-component\", 3, \"click\"], [1, \"p-hidden-accessible\"], [\"type\", \"radio\", 3, \"checked\", \"disabled\", \"focus\", \"blur\"], [\"role\", \"radio\", 3, \"ngClass\"], [\"box\", \"\"], [1, \"p-radiobutton-icon\"]],\n  template: function TableRadioButton_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function TableRadioButton_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"input\", 2);\n      ɵngcc0.ɵɵlistener(\"focus\", function TableRadioButton_Template_input_focus_2_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function TableRadioButton_Template_input_blur_2_listener() {\n        return ctx.onBlur();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n      ɵngcc0.ɵɵelement(5, \"div\", 5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(7, _c27, ctx.checked, ctx.disabled));\n      ɵngcc0.ɵɵattribute(\"aria-checked\", ctx.checked);\n    }\n  },\n  directives: [ɵngcc2.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nTableRadioButton.ctorParameters = function () {\n  return [{\n    type: Table\n  }, {\n    type: TableService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nTableRadioButton.propDecorators = {\n  disabled: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  index: [{\n    type: Input\n  }],\n  inputId: [{\n    type: Input\n  }],\n  name: [{\n    type: Input\n  }],\n  ariaLabel: [{\n    type: Input\n  }],\n  boxViewChild: [{\n    type: ViewChild,\n    args: ['box']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TableRadioButton, [{\n    type: Component,\n    args: [{\n      selector: 'p-tableRadioButton',\n      template: \"\\n        <div class=\\\"p-radiobutton p-component\\\" (click)=\\\"onClick($event)\\\">\\n            <div class=\\\"p-hidden-accessible\\\">\\n                <input type=\\\"radio\\\" [attr.id]=\\\"inputId\\\" [attr.name]=\\\"name\\\" [checked]=\\\"checked\\\" (focus)=\\\"onFocus()\\\" (blur)=\\\"onBlur()\\\"\\n                [disabled]=\\\"disabled\\\" [attr.aria-label]=\\\"ariaLabel\\\">\\n            </div>\\n            <div #box [ngClass]=\\\"{'p-radiobutton-box p-component':true,\\n                'p-highlight':checked, 'p-disabled':disabled}\\\" role=\\\"radio\\\" [attr.aria-checked]=\\\"checked\\\">\\n                <div class=\\\"p-radiobutton-icon\\\"></div>\\n            </div>\\n        </div>\\n    \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    boxViewChild: [{\n      type: ViewChild,\n      args: ['box']\n    }]\n  });\n})();\n\nvar TableCheckbox = /*#__PURE__*/function () {\n  function TableCheckbox(dt, tableService, cd) {\n    var _this25 = this;\n\n    _classCallCheck(this, TableCheckbox);\n\n    this.dt = dt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {\n      _this25.checked = _this25.dt.isSelected(_this25.value);\n\n      _this25.cd.markForCheck();\n    });\n  }\n\n  _createClass(TableCheckbox, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.checked = this.dt.isSelected(this.value);\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      if (!this.disabled) {\n        this.dt.toggleRowWithCheckbox({\n          originalEvent: event,\n          rowIndex: this.index\n        }, this.value);\n      }\n\n      DomHandler.clearSelection();\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }]);\n\n  return TableCheckbox;\n}();\n\nTableCheckbox.ɵfac = function TableCheckbox_Factory(t) {\n  return new (t || TableCheckbox)(ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(TableService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nTableCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TableCheckbox,\n  selectors: [[\"p-tableCheckbox\"]],\n  viewQuery: function TableCheckbox_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c26, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.boxViewChild = _t.first);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    value: \"value\",\n    index: \"index\",\n    inputId: \"inputId\",\n    name: \"name\",\n    required: \"required\",\n    ariaLabel: \"ariaLabel\"\n  },\n  decls: 6,\n  vars: 14,\n  consts: [[1, \"p-checkbox\", \"p-component\", 3, \"click\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\", \"focus\", \"blur\"], [\"role\", \"checkbox\", 3, \"ngClass\"], [\"box\", \"\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"]],\n  template: function TableCheckbox_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function TableCheckbox_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"input\", 2);\n      ɵngcc0.ɵɵlistener(\"focus\", function TableCheckbox_Template_input_focus_2_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function TableCheckbox_Template_input_blur_2_listener() {\n        return ctx.onBlur();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n      ɵngcc0.ɵɵelement(5, \"span\", 5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"required\", ctx.required)(\"aria-label\", ctx.ariaLabel);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(9, _c28, ctx.checked, ctx.disabled));\n      ɵngcc0.ɵɵattribute(\"aria-checked\", ctx.checked);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(12, _c29, ctx.checked));\n    }\n  },\n  directives: [ɵngcc2.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nTableCheckbox.ctorParameters = function () {\n  return [{\n    type: Table\n  }, {\n    type: TableService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nTableCheckbox.propDecorators = {\n  disabled: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  index: [{\n    type: Input\n  }],\n  inputId: [{\n    type: Input\n  }],\n  name: [{\n    type: Input\n  }],\n  required: [{\n    type: Input\n  }],\n  ariaLabel: [{\n    type: Input\n  }],\n  boxViewChild: [{\n    type: ViewChild,\n    args: ['box']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TableCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'p-tableCheckbox',\n      template: \"\\n        <div class=\\\"p-checkbox p-component\\\" (click)=\\\"onClick($event)\\\">\\n            <div class=\\\"p-hidden-accessible\\\">\\n                <input type=\\\"checkbox\\\" [attr.id]=\\\"inputId\\\" [attr.name]=\\\"name\\\" [checked]=\\\"checked\\\" (focus)=\\\"onFocus()\\\" (blur)=\\\"onBlur()\\\" [disabled]=\\\"disabled\\\"\\n                [attr.required]=\\\"required\\\" [attr.aria-label]=\\\"ariaLabel\\\">\\n            </div>\\n            <div #box [ngClass]=\\\"{'p-checkbox-box p-component':true,\\n                'p-highlight':checked, 'p-disabled':disabled}\\\" role=\\\"checkbox\\\" [attr.aria-checked]=\\\"checked\\\">\\n                <span class=\\\"p-checkbox-icon\\\" [ngClass]=\\\"{'pi pi-check':checked}\\\"></span>\\n            </div>\\n        </div>\\n    \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    boxViewChild: [{\n      type: ViewChild,\n      args: ['box']\n    }]\n  });\n})();\n\nvar TableHeaderCheckbox = /*#__PURE__*/function () {\n  function TableHeaderCheckbox(dt, tableService, cd) {\n    var _this26 = this;\n\n    _classCallCheck(this, TableHeaderCheckbox);\n\n    this.dt = dt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.valueChangeSubscription = this.dt.tableService.valueSource$.subscribe(function () {\n      _this26.checked = _this26.updateCheckedState();\n    });\n    this.selectionChangeSubscription = this.dt.tableService.selectionSource$.subscribe(function () {\n      _this26.checked = _this26.updateCheckedState();\n    });\n  }\n\n  _createClass(TableHeaderCheckbox, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.checked = this.updateCheckedState();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      if (!this.disabled) {\n        if (this.dt.value && this.dt.value.length > 0) {\n          this.dt.toggleRowsWithCheckbox(event, !this.checked);\n        }\n      }\n\n      DomHandler.clearSelection();\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n  }, {\n    key: \"isDisabled\",\n    value: function isDisabled() {\n      return this.disabled || !this.dt.value || !this.dt.value.length;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.selectionChangeSubscription) {\n        this.selectionChangeSubscription.unsubscribe();\n      }\n\n      if (this.valueChangeSubscription) {\n        this.valueChangeSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"updateCheckedState\",\n    value: function updateCheckedState() {\n      this.cd.markForCheck();\n\n      if (this.dt.filteredValue) {\n        var val = this.dt.filteredValue;\n        return val && val.length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.isAllFilteredValuesChecked();\n      } else {\n        var _val = this.dt.value;\n        return _val && _val.length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.dt.selection.length === _val.length;\n      }\n    }\n  }, {\n    key: \"isAllFilteredValuesChecked\",\n    value: function isAllFilteredValuesChecked() {\n      if (!this.dt.filteredValue) {\n        return false;\n      } else {\n        var _iterator4 = _createForOfIteratorHelper(this.dt.filteredValue),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var rowData = _step4.value;\n\n            if (!this.dt.isSelected(rowData)) {\n              return false;\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        return true;\n      }\n    }\n  }]);\n\n  return TableHeaderCheckbox;\n}();\n\nTableHeaderCheckbox.ɵfac = function TableHeaderCheckbox_Factory(t) {\n  return new (t || TableHeaderCheckbox)(ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(TableService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nTableHeaderCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TableHeaderCheckbox,\n  selectors: [[\"p-tableHeaderCheckbox\"]],\n  viewQuery: function TableHeaderCheckbox_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c26, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.boxViewChild = _t.first);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    inputId: \"inputId\",\n    name: \"name\",\n    ariaLabel: \"ariaLabel\"\n  },\n  decls: 7,\n  vars: 13,\n  consts: [[1, \"p-checkbox\", \"p-component\", 3, \"click\"], [1, \"p-hidden-accessible\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\", \"focus\", \"blur\"], [\"cb\", \"\"], [\"role\", \"checkbox\", 3, \"ngClass\"], [\"box\", \"\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"]],\n  template: function TableHeaderCheckbox_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function TableHeaderCheckbox_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"input\", 2, 3);\n      ɵngcc0.ɵɵlistener(\"focus\", function TableHeaderCheckbox_Template_input_focus_2_listener() {\n        return ctx.onFocus();\n      })(\"blur\", function TableHeaderCheckbox_Template_input_blur_2_listener() {\n        return ctx.onBlur();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"div\", 4, 5);\n      ɵngcc0.ɵɵelement(6, \"span\", 6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"checked\", ctx.checked)(\"disabled\", ctx.isDisabled());\n      ɵngcc0.ɵɵattribute(\"id\", ctx.inputId)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(8, _c30, ctx.checked, ctx.isDisabled()));\n      ɵngcc0.ɵɵattribute(\"aria-checked\", ctx.checked);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(11, _c29, ctx.checked));\n    }\n  },\n  directives: [ɵngcc2.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nTableHeaderCheckbox.ctorParameters = function () {\n  return [{\n    type: Table\n  }, {\n    type: TableService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nTableHeaderCheckbox.propDecorators = {\n  boxViewChild: [{\n    type: ViewChild,\n    args: ['box']\n  }],\n  disabled: [{\n    type: Input\n  }],\n  inputId: [{\n    type: Input\n  }],\n  name: [{\n    type: Input\n  }],\n  ariaLabel: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TableHeaderCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'p-tableHeaderCheckbox',\n      template: \"\\n        <div class=\\\"p-checkbox p-component\\\" (click)=\\\"onClick($event)\\\">\\n            <div class=\\\"p-hidden-accessible\\\">\\n                <input #cb type=\\\"checkbox\\\" [attr.id]=\\\"inputId\\\" [attr.name]=\\\"name\\\" [checked]=\\\"checked\\\" (focus)=\\\"onFocus()\\\" (blur)=\\\"onBlur()\\\"\\n                [disabled]=\\\"isDisabled()\\\" [attr.aria-label]=\\\"ariaLabel\\\">\\n            </div>\\n            <div #box [ngClass]=\\\"{'p-checkbox-box':true,\\n                'p-highlight':checked, 'p-disabled': isDisabled()}\\\" role=\\\"checkbox\\\" [attr.aria-checked]=\\\"checked\\\">\\n                <span class=\\\"p-checkbox-icon\\\" [ngClass]=\\\"{'pi pi-check':checked}\\\"></span>\\n            </div>\\n        </div>\\n    \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: TableService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    boxViewChild: [{\n      type: ViewChild,\n      args: ['box']\n    }],\n    disabled: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ReorderableRowHandle = /*#__PURE__*/function () {\n  function ReorderableRowHandle(el) {\n    _classCallCheck(this, ReorderableRowHandle);\n\n    this.el = el;\n  }\n\n  _createClass(ReorderableRowHandle, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      DomHandler.addClass(this.el.nativeElement, 'p-datatable-reorderablerow-handle');\n    }\n  }]);\n\n  return ReorderableRowHandle;\n}();\n\nReorderableRowHandle.ɵfac = function ReorderableRowHandle_Factory(t) {\n  return new (t || ReorderableRowHandle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nReorderableRowHandle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ReorderableRowHandle,\n  selectors: [[\"\", \"pReorderableRowHandle\", \"\"]],\n  inputs: {\n    index: [\"pReorderableRowHandle\", \"index\"]\n  }\n});\n\nReorderableRowHandle.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nReorderableRowHandle.propDecorators = {\n  index: [{\n    type: Input,\n    args: [\"pReorderableRowHandle\"]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ReorderableRowHandle, [{\n    type: Directive,\n    args: [{\n      selector: '[pReorderableRowHandle]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    index: [{\n      type: Input,\n      args: [\"pReorderableRowHandle\"]\n    }]\n  });\n})();\n\nvar ReorderableRow = /*#__PURE__*/function () {\n  function ReorderableRow(dt, el, zone) {\n    _classCallCheck(this, ReorderableRow);\n\n    this.dt = dt;\n    this.el = el;\n    this.zone = zone;\n  }\n\n  _createClass(ReorderableRow, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (this.isEnabled()) {\n        this.el.nativeElement.droppable = true;\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var _this27 = this;\n\n      this.zone.runOutsideAngular(function () {\n        _this27.mouseDownListener = _this27.onMouseDown.bind(_this27);\n\n        _this27.el.nativeElement.addEventListener('mousedown', _this27.mouseDownListener);\n\n        _this27.dragStartListener = _this27.onDragStart.bind(_this27);\n\n        _this27.el.nativeElement.addEventListener('dragstart', _this27.dragStartListener);\n\n        _this27.dragEndListener = _this27.onDragEnd.bind(_this27);\n\n        _this27.el.nativeElement.addEventListener('dragend', _this27.dragEndListener);\n\n        _this27.dragOverListener = _this27.onDragOver.bind(_this27);\n\n        _this27.el.nativeElement.addEventListener('dragover', _this27.dragOverListener);\n\n        _this27.dragLeaveListener = _this27.onDragLeave.bind(_this27);\n\n        _this27.el.nativeElement.addEventListener('dragleave', _this27.dragLeaveListener);\n      });\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      if (this.mouseDownListener) {\n        document.removeEventListener('mousedown', this.mouseDownListener);\n        this.mouseDownListener = null;\n      }\n\n      if (this.dragStartListener) {\n        document.removeEventListener('dragstart', this.dragStartListener);\n        this.dragStartListener = null;\n      }\n\n      if (this.dragEndListener) {\n        document.removeEventListener('dragend', this.dragEndListener);\n        this.dragEndListener = null;\n      }\n\n      if (this.dragOverListener) {\n        document.removeEventListener('dragover', this.dragOverListener);\n        this.dragOverListener = null;\n      }\n\n      if (this.dragLeaveListener) {\n        document.removeEventListener('dragleave', this.dragLeaveListener);\n        this.dragLeaveListener = null;\n      }\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      if (DomHandler.hasClass(event.target, 'p-datatable-reorderablerow-handle')) this.el.nativeElement.draggable = true;else this.el.nativeElement.draggable = false;\n    }\n  }, {\n    key: \"onDragStart\",\n    value: function onDragStart(event) {\n      this.dt.onRowDragStart(event, this.index);\n    }\n  }, {\n    key: \"onDragEnd\",\n    value: function onDragEnd(event) {\n      this.dt.onRowDragEnd(event);\n      this.el.nativeElement.draggable = false;\n    }\n  }, {\n    key: \"onDragOver\",\n    value: function onDragOver(event) {\n      this.dt.onRowDragOver(event, this.index, this.el.nativeElement);\n      event.preventDefault();\n    }\n  }, {\n    key: \"onDragLeave\",\n    value: function onDragLeave(event) {\n      this.dt.onRowDragLeave(event, this.el.nativeElement);\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.pReorderableRowDisabled !== true;\n    }\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(event) {\n      if (this.isEnabled() && this.dt.rowDragging) {\n        this.dt.onRowDrop(event, this.el.nativeElement);\n      }\n\n      event.preventDefault();\n    }\n  }]);\n\n  return ReorderableRow;\n}();\n\nReorderableRow.ɵfac = function ReorderableRow_Factory(t) {\n  return new (t || ReorderableRow)(ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nReorderableRow.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ReorderableRow,\n  selectors: [[\"\", \"pReorderableRow\", \"\"]],\n  hostBindings: function ReorderableRow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"drop\", function ReorderableRow_drop_HostBindingHandler($event) {\n        return ctx.onDrop($event);\n      });\n    }\n  },\n  inputs: {\n    index: [\"pReorderableRow\", \"index\"],\n    pReorderableRowDisabled: \"pReorderableRowDisabled\"\n  }\n});\n\nReorderableRow.ctorParameters = function () {\n  return [{\n    type: Table\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nReorderableRow.propDecorators = {\n  index: [{\n    type: Input,\n    args: [\"pReorderableRow\"]\n  }],\n  pReorderableRowDisabled: [{\n    type: Input\n  }],\n  onDrop: [{\n    type: HostListener,\n    args: ['drop', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ReorderableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[pReorderableRow]'\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }],\n    index: [{\n      type: Input,\n      args: [\"pReorderableRow\"]\n    }],\n    pReorderableRowDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ColumnFilterFormElement = /*#__PURE__*/function () {\n  function ColumnFilterFormElement(dt) {\n    _classCallCheck(this, ColumnFilterFormElement);\n\n    this.dt = dt;\n    this.useGrouping = true;\n  }\n\n  _createClass(ColumnFilterFormElement, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this28 = this;\n\n      this.filterCallback = function (value) {\n        _this28.filterConstraint.value = value;\n\n        _this28.dt._filter();\n      };\n    }\n  }, {\n    key: \"onModelChange\",\n    value: function onModelChange(value) {\n      this.filterConstraint.value = value;\n\n      if (this.type === 'boolean' || value === '') {\n        this.dt._filter();\n      }\n    }\n  }, {\n    key: \"onTextInputEnterKeyDown\",\n    value: function onTextInputEnterKeyDown(event) {\n      this.dt._filter();\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"onNumericInputKeyDown\",\n    value: function onNumericInputKeyDown(event) {\n      if (event.key === 'Enter') {\n        this.dt._filter();\n\n        event.preventDefault();\n      }\n    }\n  }]);\n\n  return ColumnFilterFormElement;\n}();\n\nColumnFilterFormElement.ɵfac = function ColumnFilterFormElement_Factory(t) {\n  return new (t || ColumnFilterFormElement)(ɵngcc0.ɵɵdirectiveInject(Table));\n};\n\nColumnFilterFormElement.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ColumnFilterFormElement,\n  selectors: [[\"p-columnFilterFormElement\"]],\n  inputs: {\n    useGrouping: \"useGrouping\",\n    field: \"field\",\n    type: \"type\",\n    filterConstraint: \"filterConstraint\",\n    filterTemplate: \"filterTemplate\",\n    placeholder: \"placeholder\",\n    minFractionDigits: \"minFractionDigits\",\n    maxFractionDigits: \"maxFractionDigits\",\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n    locale: \"locale\",\n    localeMatcher: \"localeMatcher\",\n    currency: \"currency\",\n    currencyDisplay: \"currencyDisplay\"\n  },\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"builtInElement\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [\"type\", \"text\", \"pInputText\", \"\", 3, \"value\", \"input\", \"keydown.enter\", 4, \"ngSwitchCase\"], [3, \"ngModel\", \"showButtons\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"mode\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\", \"ngModelChange\", \"onKeyDown\", 4, \"ngSwitchCase\"], [3, \"ngModel\", \"ngModelChange\", 4, \"ngSwitchCase\"], [\"type\", \"text\", \"pInputText\", \"\", 3, \"value\", \"input\", \"keydown.enter\"], [3, \"ngModel\", \"showButtons\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"mode\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\", \"ngModelChange\", \"onKeyDown\"], [3, \"ngModel\", \"ngModelChange\"]],\n  template: function ColumnFilterFormElement_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, ColumnFilterFormElement_ng_container_0_Template, 2, 5, \"ng-container\", 0);\n      ɵngcc0.ɵɵtemplate(1, ColumnFilterFormElement_ng_template_1_Template, 5, 5, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      var _r1 = ɵngcc0.ɵɵreference(2);\n\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.filterTemplate)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet, ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase, ɵngcc5.InputText, ɵngcc6.InputNumber, ɵngcc7.NgControlStatus, ɵngcc7.NgModel, ɵngcc8.TriStateCheckbox, ɵngcc9.Calendar],\n  encapsulation: 2\n});\n\nColumnFilterFormElement.ctorParameters = function () {\n  return [{\n    type: Table\n  }];\n};\n\nColumnFilterFormElement.propDecorators = {\n  field: [{\n    type: Input\n  }],\n  type: [{\n    type: Input\n  }],\n  filterConstraint: [{\n    type: Input\n  }],\n  filterTemplate: [{\n    type: Input\n  }],\n  placeholder: [{\n    type: Input\n  }],\n  minFractionDigits: [{\n    type: Input\n  }],\n  maxFractionDigits: [{\n    type: Input\n  }],\n  prefix: [{\n    type: Input\n  }],\n  suffix: [{\n    type: Input\n  }],\n  locale: [{\n    type: Input\n  }],\n  localeMatcher: [{\n    type: Input\n  }],\n  currency: [{\n    type: Input\n  }],\n  currencyDisplay: [{\n    type: Input\n  }],\n  useGrouping: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnFilterFormElement, [{\n    type: Component,\n    args: [{\n      selector: 'p-columnFilterFormElement',\n      template: \"\\n        <ng-container *ngIf=\\\"filterTemplate; else builtInElement\\\">\\n            <ng-container *ngTemplateOutlet=\\\"filterTemplate; context: {$implicit: filterConstraint.value, filterCallback: filterCallback}\\\"></ng-container>\\n        </ng-container>\\n        <ng-template #builtInElement>\\n            <ng-container [ngSwitch]=\\\"type\\\">\\n                <input *ngSwitchCase=\\\"'text'\\\" type=\\\"text\\\" pInputText [value]=\\\"filterConstraint?.value\\\" (input)=\\\"onModelChange($event.target.value)\\\"\\n                    (keydown.enter)=\\\"onTextInputEnterKeyDown($event)\\\" [attr.placeholder]=\\\"placeholder\\\">\\n                <p-inputNumber *ngSwitchCase=\\\"'numeric'\\\" [ngModel]=\\\"filterConstraint?.value\\\" (ngModelChange)=\\\"onModelChange($event)\\\" (onKeyDown)=\\\"onNumericInputKeyDown($event)\\\" [showButtons]=\\\"true\\\" [attr.placeholder]=\\\"placeholder\\\"\\n                    [minFractionDigits]=\\\"minFractionDigits\\\" [maxFractionDigits]=\\\"maxFractionDigits\\\" [prefix]=\\\"prefix\\\" [suffix]=\\\"suffix\\\"\\n                    [mode]=\\\"currency ? 'currency' : 'decimal'\\\" [locale]=\\\"locale\\\" [localeMatcher]=\\\"localeMatcher\\\" [currency]=\\\"currency\\\" [currencyDisplay]=\\\"currencyDisplay\\\" [useGrouping]=\\\"useGrouping\\\"></p-inputNumber>\\n                <p-triStateCheckbox *ngSwitchCase=\\\"'boolean'\\\" [ngModel]=\\\"filterConstraint?.value\\\" (ngModelChange)=\\\"onModelChange($event)\\\"></p-triStateCheckbox>\\n                <p-calendar *ngSwitchCase=\\\"'date'\\\" [ngModel]=\\\"filterConstraint?.value\\\" (ngModelChange)=\\\"onModelChange($event)\\\"></p-calendar>\\n            </ng-container>\\n        </ng-template>\\n    \",\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: Table\n    }];\n  }, {\n    useGrouping: [{\n      type: Input\n    }],\n    field: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    filterConstraint: [{\n      type: Input\n    }],\n    filterTemplate: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    minFractionDigits: [{\n      type: Input\n    }],\n    maxFractionDigits: [{\n      type: Input\n    }],\n    prefix: [{\n      type: Input\n    }],\n    suffix: [{\n      type: Input\n    }],\n    locale: [{\n      type: Input\n    }],\n    localeMatcher: [{\n      type: Input\n    }],\n    currency: [{\n      type: Input\n    }],\n    currencyDisplay: [{\n      type: Input\n    }]\n  });\n})();\n\nvar ColumnFilter = /*#__PURE__*/function () {\n  function ColumnFilter(el, dt, renderer, config) {\n    _classCallCheck(this, ColumnFilter);\n\n    this.el = el;\n    this.dt = dt;\n    this.renderer = renderer;\n    this.config = config;\n    this.type = 'text';\n    this.display = 'row';\n    this.showMenu = true;\n    this.operator = FilterOperator.AND;\n    this.showOperator = true;\n    this.showClearButton = true;\n    this.showApplyButton = true;\n    this.showMatchModes = true;\n    this.showAddButton = true;\n    this.maxConstraints = 2;\n    this.useGrouping = true;\n  }\n\n  _createClass(ColumnFilter, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this29 = this;\n\n      if (!this.dt.filters[this.field]) {\n        this.initFieldFilterConstraint();\n      }\n\n      this.translationSubscription = this.config.translationObserver.subscribe(function () {\n        _this29.generateMatchModeOptions();\n\n        _this29.generateOperatorOptions();\n      });\n      this.generateMatchModeOptions();\n      this.generateOperatorOptions();\n    }\n  }, {\n    key: \"generateMatchModeOptions\",\n    value: function generateMatchModeOptions() {\n      var _this30 = this;\n\n      var _a;\n\n      this.matchModes = this.matchModeOptions || ((_a = this.config.filterMatchModeOptions[this.type]) === null || _a === void 0 ? void 0 : _a.map(function (key) {\n        return {\n          label: _this30.config.getTranslation(key),\n          value: key\n        };\n      }));\n    }\n  }, {\n    key: \"generateOperatorOptions\",\n    value: function generateOperatorOptions() {\n      this.operatorOptions = [{\n        label: this.config.getTranslation(TranslationKeys.MATCH_ALL),\n        value: FilterOperator.AND\n      }, {\n        label: this.config.getTranslation(TranslationKeys.MATCH_ANY),\n        value: FilterOperator.OR\n      }];\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this31 = this;\n\n      this.templates.forEach(function (item) {\n        switch (item.getType()) {\n          case 'header':\n            _this31.headerTemplate = item.template;\n            break;\n\n          case 'filter':\n            _this31.filterTemplate = item.template;\n            break;\n\n          case 'footer':\n            _this31.footerTemplate = item.template;\n            break;\n\n          default:\n            _this31.filterTemplate = item.template;\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"initFieldFilterConstraint\",\n    value: function initFieldFilterConstraint() {\n      var defaultMatchMode = this.getDefaultMatchMode();\n      this.dt.filters[this.field] = this.display == 'row' ? {\n        value: null,\n        matchMode: defaultMatchMode\n      } : [{\n        value: null,\n        matchMode: defaultMatchMode,\n        operator: this.operator\n      }];\n    }\n  }, {\n    key: \"onMenuMatchModeChange\",\n    value: function onMenuMatchModeChange(value, filterMeta) {\n      filterMeta.matchMode = value;\n\n      if (!this.showApplyButton) {\n        this.dt._filter();\n      }\n    }\n  }, {\n    key: \"onRowMatchModeChange\",\n    value: function onRowMatchModeChange(matchMode) {\n      this.dt.filters[this.field].matchMode = matchMode;\n\n      this.dt._filter();\n\n      this.hide();\n    }\n  }, {\n    key: \"onRowMatchModeKeyDown\",\n    value: function onRowMatchModeKeyDown(event) {\n      var item = event.target;\n\n      switch (event.key) {\n        case 'ArrowDown':\n          var nextItem = this.findNextItem(item);\n\n          if (nextItem) {\n            item.removeAttribute('tabindex');\n            nextItem.tabIndex = '0';\n            nextItem.focus();\n          }\n\n          event.preventDefault();\n          break;\n\n        case 'ArrowUp':\n          var prevItem = this.findPrevItem(item);\n\n          if (prevItem) {\n            item.removeAttribute('tabindex');\n            prevItem.tabIndex = '0';\n            prevItem.focus();\n          }\n\n          event.preventDefault();\n          break;\n      }\n    }\n  }, {\n    key: \"onRowClearItemClick\",\n    value: function onRowClearItemClick() {\n      this.clearFilter();\n      this.hide();\n    }\n  }, {\n    key: \"isRowMatchModeSelected\",\n    value: function isRowMatchModeSelected(matchMode) {\n      return this.dt.filters[this.field].matchMode === matchMode;\n    }\n  }, {\n    key: \"addConstraint\",\n    value: function addConstraint() {\n      this.dt.filters[this.field].push({\n        value: null,\n        matchMode: this.getDefaultMatchMode(),\n        operator: this.getDefaultOperator()\n      });\n\n      this.dt._filter();\n    }\n  }, {\n    key: \"removeConstraint\",\n    value: function removeConstraint(filterMeta) {\n      this.dt.filters[this.field] = this.dt.filters[this.field].filter(function (meta) {\n        return meta !== filterMeta;\n      });\n\n      this.dt._filter();\n    }\n  }, {\n    key: \"onOperatorChange\",\n    value: function onOperatorChange(value) {\n      this.dt.filters[this.field].forEach(function (filterMeta) {\n        filterMeta.operator = value;\n      });\n\n      if (!this.showApplyButton) {\n        this.dt._filter();\n      }\n    }\n  }, {\n    key: \"toggleMenu\",\n    value: function toggleMenu() {\n      this.overlayVisible = !this.overlayVisible;\n    }\n  }, {\n    key: \"onToggleButtonKeyDown\",\n    value: function onToggleButtonKeyDown(event) {\n      switch (event.key) {\n        case 'Escape':\n        case 'Tab':\n          this.overlayVisible = false;\n          break;\n\n        case 'ArrowDown':\n          if (this.overlayVisible) {\n            var focusable = DomHandler.getFocusableElements(this.overlay);\n\n            if (focusable) {\n              focusable[0].focus();\n            }\n\n            event.preventDefault();\n          } else if (event.altKey) {\n            this.overlayVisible = true;\n            event.preventDefault();\n          }\n\n          break;\n      }\n    }\n  }, {\n    key: \"onEscape\",\n    value: function onEscape() {\n      this.overlayVisible = false;\n      this.icon.nativeElement.focus();\n    }\n  }, {\n    key: \"findNextItem\",\n    value: function findNextItem(item) {\n      var nextItem = item.nextElementSibling;\n      if (nextItem) return DomHandler.hasClass(nextItem, 'p-column-filter-separator') ? this.findNextItem(nextItem) : nextItem;else return item.parentElement.firstElementChild;\n    }\n  }, {\n    key: \"findPrevItem\",\n    value: function findPrevItem(item) {\n      var prevItem = item.previousElementSibling;\n      if (prevItem) return DomHandler.hasClass(prevItem, 'p-column-filter-separator') ? this.findPrevItem(prevItem) : prevItem;else return item.parentElement.lastElementChild;\n    }\n  }, {\n    key: \"onOverlayAnimationStart\",\n    value: function onOverlayAnimationStart(event) {\n      switch (event.toState) {\n        case 'visible':\n          this.overlay = event.element;\n          document.body.appendChild(this.overlay);\n          this.overlay.style.zIndex = String(++DomHandler.zindex);\n          DomHandler.absolutePosition(this.overlay, this.icon.nativeElement);\n          this.bindDocumentClickListener();\n          this.bindDocumentResizeListener();\n          this.bindScrollListener();\n          break;\n\n        case 'void':\n          this.onOverlayHide();\n          break;\n      }\n    }\n  }, {\n    key: \"getDefaultMatchMode\",\n    value: function getDefaultMatchMode() {\n      if (this.matchMode) {\n        return this.matchMode;\n      } else {\n        if (this.type === 'text') return FilterMatchMode.STARTS_WITH;else if (this.type === 'numeric') return FilterMatchMode.EQUALS;else if (this.type === 'date') return FilterMatchMode.EQUALS;else return FilterMatchMode.CONTAINS;\n      }\n    }\n  }, {\n    key: \"getDefaultOperator\",\n    value: function getDefaultOperator() {\n      return this.dt.filters ? this.dt.filters[this.field][0].operator : this.operator;\n    }\n  }, {\n    key: \"hasRowFilter\",\n    value: function hasRowFilter() {\n      return this.dt.filters[this.field] && !this.dt.isFilterBlank(this.dt.filters[this.field].value);\n    }\n  }, {\n    key: \"hasFilter\",\n    value: function hasFilter() {\n      var fieldFilter = this.dt.filters[this.field];\n\n      if (fieldFilter) {\n        if (Array.isArray(fieldFilter)) return !this.dt.isFilterBlank(fieldFilter[0].value);else return !this.dt.isFilterBlank(fieldFilter.value);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isOutsideClicked\",\n    value: function isOutsideClicked(event) {\n      return !(this.overlay.isSameNode(event.target) || this.overlay.contains(event.target) || this.icon.nativeElement.isSameNode(event.target) || this.icon.nativeElement.contains(event.target) || DomHandler.hasClass(event.target, 'p-column-filter-add-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-add-button') || DomHandler.hasClass(event.target, 'p-column-filter-remove-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-remove-button'));\n    }\n  }, {\n    key: \"bindDocumentClickListener\",\n    value: function bindDocumentClickListener() {\n      var _this32 = this;\n\n      if (!this.documentClickListener) {\n        var documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n        this.documentClickListener = this.renderer.listen(documentTarget, 'mousedown', function (event) {\n          if (_this32.isOutsideClicked(event)) {\n            _this32.hide();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"unbindDocumentClickListener\",\n    value: function unbindDocumentClickListener() {\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        this.documentClickListener = null;\n      }\n    }\n  }, {\n    key: \"bindDocumentResizeListener\",\n    value: function bindDocumentResizeListener() {\n      var _this33 = this;\n\n      this.documentResizeListener = function () {\n        return _this33.hide();\n      };\n\n      window.addEventListener('resize', this.documentResizeListener);\n    }\n  }, {\n    key: \"unbindDocumentResizeListener\",\n    value: function unbindDocumentResizeListener() {\n      if (this.documentResizeListener) {\n        window.removeEventListener('resize', this.documentResizeListener);\n        this.documentResizeListener = null;\n      }\n    }\n  }, {\n    key: \"bindScrollListener\",\n    value: function bindScrollListener() {\n      var _this34 = this;\n\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.icon.nativeElement, function () {\n          if (_this34.overlayVisible) {\n            _this34.hide();\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    }\n  }, {\n    key: \"unbindScrollListener\",\n    value: function unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.overlayVisible = false;\n    }\n  }, {\n    key: \"onOverlayHide\",\n    value: function onOverlayHide() {\n      this.unbindDocumentClickListener();\n      this.unbindDocumentResizeListener();\n      this.unbindScrollListener();\n      this.overlay = null;\n    }\n  }, {\n    key: \"clearFilter\",\n    value: function clearFilter() {\n      this.initFieldFilterConstraint();\n\n      this.dt._filter();\n    }\n  }, {\n    key: \"applyFilter\",\n    value: function applyFilter() {\n      this.dt._filter();\n\n      this.hide();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.overlay) {\n        this.el.nativeElement.appendChild(this.overlay);\n        this.onOverlayHide();\n      }\n\n      if (this.translationSubscription) {\n        this.translationSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"fieldConstraints\",\n    get: function get() {\n      return this.dt.filters ? this.dt.filters[this.field] : null;\n    }\n  }, {\n    key: \"showRemoveIcon\",\n    get: function get() {\n      return this.fieldConstraints ? this.fieldConstraints.length > 1 : false;\n    }\n  }, {\n    key: \"showMenuButton\",\n    get: function get() {\n      return this.showMenu && (this.display === 'row' ? this.type !== 'boolean' : true);\n    }\n  }, {\n    key: \"isShowOperator\",\n    get: function get() {\n      return this.showOperator && this.type !== 'boolean';\n    }\n  }, {\n    key: \"isShowAddConstraint\",\n    get: function get() {\n      return this.showAddButton && this.type !== 'boolean' && this.fieldConstraints && this.fieldConstraints.length < this.maxConstraints;\n    }\n  }, {\n    key: \"applyButtonLabel\",\n    get: function get() {\n      return this.config.getTranslation(TranslationKeys.APPLY);\n    }\n  }, {\n    key: \"clearButtonLabel\",\n    get: function get() {\n      return this.config.getTranslation(TranslationKeys.CLEAR);\n    }\n  }, {\n    key: \"addRuleButtonLabel\",\n    get: function get() {\n      return this.config.getTranslation(TranslationKeys.ADD_RULE);\n    }\n  }, {\n    key: \"removeRuleButtonLabel\",\n    get: function get() {\n      return this.config.getTranslation(TranslationKeys.REMOVE_RULE);\n    }\n  }, {\n    key: \"noFilterLabel\",\n    get: function get() {\n      return this.config.getTranslation(TranslationKeys.NO_FILTER);\n    }\n  }]);\n\n  return ColumnFilter;\n}();\n\nColumnFilter.ɵfac = function ColumnFilter_Factory(t) {\n  return new (t || ColumnFilter)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(Table), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.PrimeNGConfig));\n};\n\nColumnFilter.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ColumnFilter,\n  selectors: [[\"p-columnFilter\"]],\n  contentQueries: function ColumnFilter_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function ColumnFilter_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c32, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.icon = _t.first);\n    }\n  },\n  inputs: {\n    type: \"type\",\n    display: \"display\",\n    showMenu: \"showMenu\",\n    operator: \"operator\",\n    showOperator: \"showOperator\",\n    showClearButton: \"showClearButton\",\n    showApplyButton: \"showApplyButton\",\n    showMatchModes: \"showMatchModes\",\n    showAddButton: \"showAddButton\",\n    maxConstraints: \"maxConstraints\",\n    useGrouping: \"useGrouping\",\n    field: \"field\",\n    matchMode: \"matchMode\",\n    placeholder: \"placeholder\",\n    matchModeOptions: \"matchModeOptions\",\n    minFractionDigits: \"minFractionDigits\",\n    maxFractionDigits: \"maxFractionDigits\",\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n    locale: \"locale\",\n    localeMatcher: \"localeMatcher\",\n    currency: \"currency\",\n    currencyDisplay: \"currencyDisplay\"\n  },\n  decls: 5,\n  vars: 8,\n  consts: [[1, \"p-column-filter\", 3, \"ngClass\"], [\"class\", \"p-fluid\", 3, \"type\", \"field\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"p-column-filter-menu-button p-link\", \"aria-haspopup\", \"true\", 3, \"ngClass\", \"click\", \"keydown\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"p-column-filter-clear-button p-link\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"keydown.escape\", 4, \"ngIf\"], [1, \"p-fluid\", 3, \"type\", \"field\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\"], [\"type\", \"button\", \"aria-haspopup\", \"true\", 1, \"p-column-filter-menu-button\", \"p-link\", 3, \"ngClass\", \"click\", \"keydown\"], [\"icon\", \"\"], [1, \"pi\", \"pi-filter-icon\", \"pi-filter\"], [\"type\", \"button\", 1, \"p-column-filter-clear-button\", \"p-link\", 3, \"ngClass\", \"click\"], [1, \"pi\", \"pi-filter-slash\"], [3, \"ngClass\", \"keydown.escape\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"p-column-filter-row-items\", 4, \"ngIf\", \"ngIfElse\"], [\"menu\", \"\"], [1, \"p-column-filter-row-items\"], [\"class\", \"p-column-filter-row-item\", 3, \"ngClass\", \"click\", \"keydown\", \"keydown.enter\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-column-filter-separator\"], [1, \"p-column-filter-row-item\", 3, \"click\", \"keydown\", \"keydown.enter\"], [1, \"p-column-filter-row-item\", 3, \"ngClass\", \"click\", \"keydown\", \"keydown.enter\"], [\"class\", \"p-column-filter-operator\", 4, \"ngIf\"], [1, \"p-column-filter-constraints\"], [\"class\", \"p-column-filter-constraint\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"p-column-filter-add-rule\", 4, \"ngIf\"], [1, \"p-column-filter-buttonbar\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 1, \"p-button-outlined\", 3, \"label\", \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 3, \"label\", \"click\"], [1, \"p-column-filter-operator\"], [\"styleClass\", \"p-column-filter-operator-dropdown\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [1, \"p-column-filter-constraint\"], [\"styleClass\", \"p-column-filter-matchmode-dropdown\", 3, \"options\", \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [3, \"type\", \"field\", \"filterConstraint\", \"filterTemplate\", \"placeholder\", \"minFractionDigits\", \"maxFractionDigits\", \"prefix\", \"suffix\", \"locale\", \"localeMatcher\", \"currency\", \"currencyDisplay\", \"useGrouping\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-trash\", \"class\", \"p-column-filter-remove-button p-button-text p-button-danger p-button-sm\", \"pRipple\", \"\", 3, \"label\", \"click\", 4, \"ngIf\"], [\"styleClass\", \"p-column-filter-matchmode-dropdown\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-trash\", \"pRipple\", \"\", 1, \"p-column-filter-remove-button\", \"p-button-text\", \"p-button-danger\", \"p-button-sm\", 3, \"label\", \"click\"], [1, \"p-column-filter-add-rule\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-plus\", \"pRipple\", \"\", 1, \"p-column-filter-add-button\", \"p-button-text\", \"p-button-sm\", 3, \"label\", \"click\"]],\n  template: function ColumnFilter_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, ColumnFilter_p_columnFilterFormElement_1_Template, 1, 14, \"p-columnFilterFormElement\", 1);\n      ɵngcc0.ɵɵtemplate(2, ColumnFilter_button_2_Template, 3, 5, \"button\", 2);\n      ɵngcc0.ɵɵtemplate(3, ColumnFilter_button_3_Template, 3, 3, \"button\", 3);\n      ɵngcc0.ɵɵtemplate(4, ColumnFilter_div_4_Template, 6, 14, \"div\", 4);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(5, _c37, ctx.display === \"row\", ctx.display === \"menu\"));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.display === \"row\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMenuButton);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMenuButton && ctx.display === \"row\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMenu && ctx.overlayVisible);\n    }\n  },\n  directives: [ɵngcc2.NgClass, ɵngcc2.NgIf, ColumnFilterFormElement, ɵngcc2.NgTemplateOutlet, ɵngcc2.NgForOf, ɵngcc10.ButtonDirective, ɵngcc11.Dropdown, ɵngcc7.NgControlStatus, ɵngcc7.NgModel],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('overlayAnimation', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scaleY(0.8)'\n    }), animate('.12s cubic-bezier(0, 0, 0.2, 1)')]), transition(':leave', [animate('.1s linear', style({\n      opacity: 0\n    }))])])]\n  }\n});\n\nColumnFilter.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Table\n  }, {\n    type: Renderer2\n  }, {\n    type: PrimeNGConfig\n  }];\n};\n\nColumnFilter.propDecorators = {\n  field: [{\n    type: Input\n  }],\n  type: [{\n    type: Input\n  }],\n  display: [{\n    type: Input\n  }],\n  showMenu: [{\n    type: Input\n  }],\n  matchMode: [{\n    type: Input\n  }],\n  operator: [{\n    type: Input\n  }],\n  showOperator: [{\n    type: Input\n  }],\n  showClearButton: [{\n    type: Input\n  }],\n  showApplyButton: [{\n    type: Input\n  }],\n  showMatchModes: [{\n    type: Input\n  }],\n  showAddButton: [{\n    type: Input\n  }],\n  placeholder: [{\n    type: Input\n  }],\n  matchModeOptions: [{\n    type: Input\n  }],\n  maxConstraints: [{\n    type: Input\n  }],\n  minFractionDigits: [{\n    type: Input\n  }],\n  maxFractionDigits: [{\n    type: Input\n  }],\n  prefix: [{\n    type: Input\n  }],\n  suffix: [{\n    type: Input\n  }],\n  locale: [{\n    type: Input\n  }],\n  localeMatcher: [{\n    type: Input\n  }],\n  currency: [{\n    type: Input\n  }],\n  currencyDisplay: [{\n    type: Input\n  }],\n  useGrouping: [{\n    type: Input\n  }],\n  icon: [{\n    type: ViewChild,\n    args: ['icon']\n  }],\n  templates: [{\n    type: ContentChildren,\n    args: [PrimeTemplate]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnFilter, [{\n    type: Component,\n    args: [{\n      selector: 'p-columnFilter',\n      template: \"\\n        <div class=\\\"p-column-filter\\\" [ngClass]=\\\"{'p-column-filter-row': display === 'row', 'p-column-filter-menu': display === 'menu'}\\\">\\n            <p-columnFilterFormElement *ngIf=\\\"display === 'row'\\\" class=\\\"p-fluid\\\" [type]=\\\"type\\\" [field]=\\\"field\\\" [filterConstraint]=\\\"dt.filters[field]\\\" [filterTemplate]=\\\"filterTemplate\\\" [placeholder]=\\\"placeholder\\\" [minFractionDigits]=\\\"minFractionDigits\\\" [maxFractionDigits]=\\\"maxFractionDigits\\\" [prefix]=\\\"prefix\\\" [suffix]=\\\"suffix\\\"\\n                                    [locale]=\\\"locale\\\"  [localeMatcher]=\\\"localeMatcher\\\" [currency]=\\\"currency\\\" [currencyDisplay]=\\\"currencyDisplay\\\" [useGrouping]=\\\"useGrouping\\\"></p-columnFilterFormElement>\\n            <button #icon *ngIf=\\\"showMenuButton\\\" type=\\\"button\\\" class=\\\"p-column-filter-menu-button p-link\\\" aria-haspopup=\\\"true\\\" [attr.aria-expanded]=\\\"overlayVisible\\\"\\n                [ngClass]=\\\"{'p-column-filter-menu-button-open': overlayVisible, 'p-column-filter-menu-button-active': hasFilter()}\\\" \\n                (click)=\\\"toggleMenu()\\\" (keydown)=\\\"onToggleButtonKeyDown($event)\\\"><span class=\\\"pi pi-filter-icon pi-filter\\\"></span></button>\\n            <button #icon *ngIf=\\\"showMenuButton && display === 'row'\\\" [ngClass]=\\\"{'p-hidden-space': !hasRowFilter()}\\\" type=\\\"button\\\" class=\\\"p-column-filter-clear-button p-link\\\" (click)=\\\"clearFilter()\\\"><span class=\\\"pi pi-filter-slash\\\"></span></button>\\n            <div *ngIf=\\\"showMenu && overlayVisible\\\" [ngClass]=\\\"{'p-column-filter-overlay p-component p-fluid': true, 'p-column-filter-overlay-menu': display === 'menu'}\\\" \\n                [@overlayAnimation]=\\\"'visible'\\\" (@overlayAnimation.start)=\\\"onOverlayAnimationStart($event)\\\" (keydown.escape)=\\\"onEscape()\\\">\\n                <ng-container *ngTemplateOutlet=\\\"headerTemplate; context: {$implicit: field}\\\"></ng-container>\\n                <ul *ngIf=\\\"display === 'row'; else menu\\\" class=\\\"p-column-filter-row-items\\\">\\n                    <li class=\\\"p-column-filter-row-item\\\" *ngFor=\\\"let matchMode of matchModes; let i = index;\\\" (click)=\\\"onRowMatchModeChange(matchMode.value)\\\" (keydown)=\\\"onRowMatchModeKeyDown($event)\\\" (keydown.enter)=\\\"this.onRowMatchModeChange(matchMode.value)\\\"\\n                        [ngClass]=\\\"{'p-highlight': isRowMatchModeSelected(matchMode.value)}\\\" [attr.tabindex]=\\\"i === 0 ? '0' : null\\\">{{matchMode.label}}</li>\\n                    <li class=\\\"p-column-filter-separator\\\"></li>\\n                    <li class=\\\"p-column-filter-row-item\\\" (click)=\\\"onRowClearItemClick()\\\" (keydown)=\\\"onRowMatchModeKeyDown($event)\\\" (keydown.enter)=\\\"onRowClearItemClick()\\\">{{noFilterLabel}}</li>\\n                </ul>\\n                <ng-template #menu>\\n                    <div class=\\\"p-column-filter-operator\\\" *ngIf=\\\"isShowOperator\\\">\\n                        <p-dropdown [options]=\\\"operatorOptions\\\" [ngModel]=\\\"operator\\\" (ngModelChange)=\\\"onOperatorChange($event)\\\" styleClass=\\\"p-column-filter-operator-dropdown\\\"></p-dropdown>\\n                    </div>\\n                    <div class=\\\"p-column-filter-constraints\\\">\\n                        <div *ngFor=\\\"let fieldConstraint of fieldConstraints; let i = index\\\" class=\\\"p-column-filter-constraint\\\">\\n                            <p-dropdown  *ngIf=\\\"showMatchModes && matchModes\\\" [options]=\\\"matchModes\\\" [ngModel]=\\\"fieldConstraint.matchMode\\\" (ngModelChange)=\\\"onMenuMatchModeChange($event, fieldConstraint)\\\" styleClass=\\\"p-column-filter-matchmode-dropdown\\\"></p-dropdown>\\n                            <p-columnFilterFormElement [type]=\\\"type\\\" [field]=\\\"field\\\" [filterConstraint]=\\\"fieldConstraint\\\" [filterTemplate]=\\\"filterTemplate\\\" [placeholder]=\\\"placeholder\\\"\\n                            [minFractionDigits]=\\\"minFractionDigits\\\" [maxFractionDigits]=\\\"maxFractionDigits\\\" [prefix]=\\\"prefix\\\" [suffix]=\\\"suffix\\\"\\n                            [locale]=\\\"locale\\\"  [localeMatcher]=\\\"localeMatcher\\\" [currency]=\\\"currency\\\" [currencyDisplay]=\\\"currencyDisplay\\\" [useGrouping]=\\\"useGrouping\\\"></p-columnFilterFormElement>\\n                            <button *ngIf=\\\"showRemoveIcon\\\" type=\\\"button\\\" pButton icon=\\\"pi pi-trash\\\" class=\\\"p-column-filter-remove-button p-button-text p-button-danger p-button-sm\\\" (click)=\\\"removeConstraint(fieldConstraint)\\\" pRipple [label]=\\\"removeRuleButtonLabel\\\"></button>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"p-column-filter-add-rule\\\" *ngIf=\\\"isShowAddConstraint\\\">\\n                        <button type=\\\"button\\\" pButton [label]=\\\"addRuleButtonLabel\\\" icon=\\\"pi pi-plus\\\" class=\\\"p-column-filter-add-button p-button-text p-button-sm\\\" (click)=\\\"addConstraint()\\\" pRipple></button>\\n                    </div>\\n                    <div class=\\\"p-column-filter-buttonbar\\\">\\n                        <button type=\\\"button\\\" pButton class=\\\"p-button-outlined\\\" (click)=\\\"clearFilter()\\\" [label]=\\\"clearButtonLabel\\\" pRipple></button>\\n                        <button type=\\\"button\\\" pButton (click)=\\\"applyFilter()\\\" [label]=\\\"applyButtonLabel\\\" pRipple></button>\\n                    </div>\\n                </ng-template>\\n                <ng-container *ngTemplateOutlet=\\\"footerTemplate; context: {$implicit: field}\\\"></ng-container>\\n            </div>\\n        </div>\\n    \",\n      animations: [trigger('overlayAnimation', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scaleY(0.8)'\n      }), animate('.12s cubic-bezier(0, 0, 0.2, 1)')]), transition(':leave', [animate('.1s linear', style({\n        opacity: 0\n      }))])])],\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: Table\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc1.PrimeNGConfig\n    }];\n  }, {\n    type: [{\n      type: Input\n    }],\n    display: [{\n      type: Input\n    }],\n    showMenu: [{\n      type: Input\n    }],\n    operator: [{\n      type: Input\n    }],\n    showOperator: [{\n      type: Input\n    }],\n    showClearButton: [{\n      type: Input\n    }],\n    showApplyButton: [{\n      type: Input\n    }],\n    showMatchModes: [{\n      type: Input\n    }],\n    showAddButton: [{\n      type: Input\n    }],\n    maxConstraints: [{\n      type: Input\n    }],\n    useGrouping: [{\n      type: Input\n    }],\n    field: [{\n      type: Input\n    }],\n    matchMode: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    matchModeOptions: [{\n      type: Input\n    }],\n    minFractionDigits: [{\n      type: Input\n    }],\n    maxFractionDigits: [{\n      type: Input\n    }],\n    prefix: [{\n      type: Input\n    }],\n    suffix: [{\n      type: Input\n    }],\n    locale: [{\n      type: Input\n    }],\n    localeMatcher: [{\n      type: Input\n    }],\n    currency: [{\n      type: Input\n    }],\n    currencyDisplay: [{\n      type: Input\n    }],\n    icon: [{\n      type: ViewChild,\n      args: ['icon']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nvar TableModule = function TableModule() {\n  _classCallCheck(this, TableModule);\n};\n\nTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: TableModule\n});\nTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function TableModule_Factory(t) {\n    return new (t || TableModule)();\n  },\n  imports: [[CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule], SharedModule, ScrollingModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TableModule, {\n    declarations: function declarations() {\n      return [Table, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, TableBody, ScrollableView, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ColumnFilter, ColumnFilterFormElement];\n    },\n    imports: function imports() {\n      return [CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule];\n    },\n    exports: function exports() {\n      return [Table, SharedModule, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ScrollingModule, ColumnFilter];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, PaginatorModule, InputTextModule, DropdownModule, ScrollingModule, FormsModule, ButtonModule, SelectButtonModule, CalendarModule, InputNumberModule, TriStateCheckboxModule],\n      exports: [Table, SharedModule, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ScrollingModule, ColumnFilter],\n      declarations: [Table, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, TableBody, ScrollableView, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow, ColumnFilter, ColumnFilterFormElement]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CancelEditableRow, CellEditor, ColumnFilter, ColumnFilterFormElement, ContextMenuRow, EditableColumn, EditableRow, InitEditableRow, ReorderableColumn, ReorderableRow, ReorderableRowHandle, ResizableColumn, RowToggler, SaveEditableRow, ScrollableView, SelectableRow, SelectableRowDblClick, SortIcon, SortableColumn, Table, TableBody, TableCheckbox, TableHeaderCheckbox, TableModule, TableRadioButton, TableService };","map":{"version":3,"sources":["../../src/app/components/table/table.ts","../../src/app/components/table/primeng-table.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAyBa,Y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","sourcesContent":["import { NgModule, Component, HostListener, OnInit, OnDestroy, AfterViewInit, Directive, Optional, AfterContentInit,\n    Input, Output, EventEmitter, ElementRef, ContentChildren, TemplateRef, QueryList, ViewChild, NgZone, ChangeDetectorRef, OnChanges, SimpleChanges, ChangeDetectionStrategy, Query, ViewEncapsulation, Renderer2} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { PrimeTemplate, SharedModule, FilterMatchMode, FilterOperator, SelectItem, PrimeNGConfig, TranslationKeys, FilterService } from 'primeng/api';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\nimport { CalendarModule } from 'primeng/calendar';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { ObjectUtils } from 'primeng/utils';\nimport { SortMeta } from 'primeng/api';\nimport { TableState } from 'primeng/api';\nimport { FilterMetadata } from 'primeng/api';\nimport { Injectable } from '@angular/core';\nimport { BlockableUI } from 'primeng/api';\nimport { Subject, Subscription } from 'rxjs';\nimport { ScrollingModule, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {trigger,style,transition,animate,AnimationEvent} from '@angular/animations';\n\n@Injectable()\nexport class TableService {\n\n    private sortSource = new Subject<SortMeta|SortMeta[]>();\n    private selectionSource = new Subject();\n    private contextMenuSource = new Subject<any>();\n    private valueSource = new Subject<any>();\n    private totalRecordsSource = new Subject<any>();\n    private columnsSource = new Subject();\n\n    sortSource$ = this.sortSource.asObservable();\n    selectionSource$ = this.selectionSource.asObservable();\n    contextMenuSource$ = this.contextMenuSource.asObservable();\n    valueSource$ = this.valueSource.asObservable();\n    totalRecordsSource$ = this.totalRecordsSource.asObservable();\n    columnsSource$ = this.columnsSource.asObservable();\n\n    onSort(sortMeta: SortMeta|SortMeta[]) {\n        this.sortSource.next(sortMeta);\n    }\n\n    onSelectionChange() {\n        this.selectionSource.next();\n    }\n\n    onContextMenu(data: any) {\n        this.contextMenuSource.next(data);\n    }\n\n    onValueChange(value: any) {\n        this.valueSource.next(value);\n    }\n\n    onTotalRecordsChange(value: number) {\n        this.totalRecordsSource.next(value);\n    }\n\n    onColumnsChange(columns: any[]) {\n        this.columnsSource.next(columns);\n    }\n}\n\n@Component({\n    selector: 'p-table',\n    template: `\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\" data-scrollselectors=\".p-datatable-scrollable-body, .p-datatable-unfrozen-view .p-datatable-scrollable-body\"\n            [ngClass]=\"{'p-datatable p-component': true,\n                'p-datatable-hoverable-rows': (rowHover||selectionMode),\n                'p-datatable-auto-layout': autoLayout,\n                'p-datatable-resizable': resizableColumns,\n                'p-datatable-resizable-fit': (resizableColumns && columnResizeMode === 'fit'),\n                'p-datatable-scrollable': scrollable,\n                'p-datatable-flex-scrollable': (scrollable && scrollHeight === 'flex'),\n                'p-datatable-responsive': responsive}\">\n            <div class=\"p-datatable-loading-overlay p-component-overlay\" *ngIf=\"loading && showLoader\">\n                <i [class]=\"'p-datatable-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"p-datatable-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-top\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div class=\"p-datatable-wrapper\" *ngIf=\"!scrollable\">\n                <table role=\"grid\" #table [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"p-datatable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-datatable-tbody\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                    <tfoot *ngIf=\"footerTemplate\" class=\"p-datatable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n\n            <div class=\"p-datatable-scrollable-wrapper\" *ngIf=\"scrollable\">\n               <div class=\"p-datatable-scrollable-view p-datatable-frozen-view\" *ngIf=\"frozenColumns||frozenBodyTemplate\" #scrollableFrozenView [pScrollableView]=\"frozenColumns\" [frozen]=\"true\" [ngStyle]=\"{width: frozenWidth}\" [scrollHeight]=\"scrollHeight\"></div>\n               <div class=\"p-datatable-scrollable-view\" #scrollableView [pScrollableView]=\"columns\" [frozen]=\"false\" [scrollHeight]=\"scrollHeight\" [ngStyle]=\"{left: frozenWidth, width: 'calc(100% - '+frozenWidth+')'}\"></div>\n            </div>\n\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"p-paginator-bottom\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\" [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showFirstLastIcon]=\"showFirstLastIcon\" [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\" [showJumpToPageDropdown]=\"showJumpToPageDropdown\" [showPageLinks]=\"showPageLinks\"></p-paginator>\n\n            <div *ngIf=\"summaryTemplate\" class=\"p-datatable-footer\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n            <span #reorderIndicatorUp class=\"pi pi-arrow-down p-datatable-reorder-indicator-up\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n            <span #reorderIndicatorDown class=\"pi pi-arrow-up p-datatable-reorder-indicator-down\" style=\"display:none\" *ngIf=\"reorderableColumns\"></span>\n        </div>\n    `,\n    providers: [TableService],\n    changeDetection: ChangeDetectionStrategy.Default,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./table.css']\n})\nexport class Table implements OnInit, AfterViewInit, AfterContentInit, BlockableUI, OnChanges {\n\n    @Input() frozenColumns: any[];\n\n    @Input() frozenValue: any[];\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() tableStyle: any;\n\n    @Input() tableStyleClass: string;\n\n    @Input() paginator: boolean;\n\n    @Input() pageLinks: number = 5;\n\n    @Input() rowsPerPageOptions: any[];\n\n    @Input() alwaysShowPaginator: boolean = true;\n\n    @Input() paginatorPosition: string = 'bottom';\n\n    @Input() paginatorDropdownAppendTo: any;\n\n    @Input() paginatorDropdownScrollHeight: string = '200px';\n\n    @Input() currentPageReportTemplate: string = '{currentPage} of {totalPages}';\n\n    @Input() showCurrentPageReport: boolean;\n\n    @Input() showJumpToPageDropdown: boolean;\n\n    @Input() showFirstLastIcon: boolean = true;\n\n    @Input() showPageLinks: boolean = true;\n\n    @Input() defaultSortOrder: number = 1;\n\n    @Input() sortMode: string = 'single';\n\n    @Input() resetPageOnSort: boolean = true;\n\n    @Input() selectionMode: string;\n\n    @Output() selectionChange: EventEmitter<any> = new EventEmitter();\n\n    @Input() contextMenuSelection: any;\n\n    @Output() contextMenuSelectionChange: EventEmitter<any> = new EventEmitter();\n\n    @Input() contextMenuSelectionMode: string = \"separate\";\n\n    @Input() dataKey: string;\n\n    @Input() metaKeySelection: boolean;\n\n    @Input() rowTrackBy: Function = (index: number, item: any) => item;\n\n    @Input() lazy: boolean = false;\n\n    @Input() lazyLoadOnInit: boolean = true;\n\n    @Input() compareSelectionBy: string = 'deepEquals';\n\n    @Input() csvSeparator: string = ',';\n\n    @Input() exportFilename: string = 'download';\n\n    @Input() filters: { [s: string]: FilterMetadata | FilterMetadata[] } = {};\n\n    @Input() globalFilterFields: string[];\n\n    @Input() filterDelay: number = 300;\n\n    @Input() filterLocale: string;\n\n    @Input() expandedRowKeys: { [s: string]: boolean; } = {};\n\n    @Input() editingRowKeys: { [s: string]: boolean; } = {};\n\n    @Input() rowExpandMode: string = 'multiple';\n\n    @Input() scrollable: boolean;\n\n    @Input() scrollHeight: string;\n\n    @Input() virtualScroll: boolean;\n\n    @Input() virtualScrollDelay: number = 250;\n\n    @Input() virtualRowHeight: number = 28;\n\n    @Input() frozenWidth: string;\n\n    @Input() responsive: boolean;\n\n    @Input() contextMenu: any;\n\n    @Input() resizableColumns: boolean;\n\n    @Input() columnResizeMode: string = 'fit';\n\n    @Input() reorderableColumns: boolean;\n\n    @Input() loading: boolean;\n\n    @Input() loadingIcon: string = 'pi pi-spinner';\n\n    @Input() showLoader: boolean = true;\n\n    @Input() rowHover: boolean;\n\n    @Input() customSort: boolean;\n\n    @Input() autoLayout: boolean;\n\n    @Input() exportFunction;\n\n    @Input() stateKey: string;\n\n    @Input() stateStorage: string = 'session';\n\n    @Input() editMode: string = 'cell';\n\n    @Input() minBufferPx: number;\n\n    @Input() maxBufferPx: number;\n\n    @Output() onRowSelect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onRowUnselect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onPage: EventEmitter<any> = new EventEmitter();\n\n    @Output() onSort: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFilter: EventEmitter<any> = new EventEmitter();\n\n    @Output() onLazyLoad: EventEmitter<any> = new EventEmitter();\n\n    @Output() onRowExpand: EventEmitter<any> = new EventEmitter();\n\n    @Output() onRowCollapse: EventEmitter<any> = new EventEmitter();\n\n    @Output() onContextMenuSelect: EventEmitter<any> = new EventEmitter();\n\n    @Output() onColResize: EventEmitter<any> = new EventEmitter();\n\n    @Output() onColReorder: EventEmitter<any> = new EventEmitter();\n\n    @Output() onRowReorder: EventEmitter<any> = new EventEmitter();\n\n    @Output() onEditInit: EventEmitter<any> = new EventEmitter();\n\n    @Output() onEditComplete: EventEmitter<any> = new EventEmitter();\n\n    @Output() onEditCancel: EventEmitter<any> = new EventEmitter();\n\n    @Output() onHeaderCheckboxToggle: EventEmitter<any> = new EventEmitter();\n\n    @Output() sortFunction: EventEmitter<any> = new EventEmitter();\n\n    @Output() firstChange: EventEmitter<number> = new EventEmitter();\n\n    @Output() rowsChange: EventEmitter<number> = new EventEmitter();\n\n    @Output() onStateSave: EventEmitter<any> = new EventEmitter();\n\n    @Output() onStateRestore: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('container') containerViewChild: ElementRef;\n\n    @ViewChild('resizeHelper') resizeHelperViewChild: ElementRef;\n\n    @ViewChild('reorderIndicatorUp') reorderIndicatorUpViewChild: ElementRef;\n\n    @ViewChild('reorderIndicatorDown') reorderIndicatorDownViewChild: ElementRef;\n\n    @ViewChild('table') tableViewChild: ElementRef;\n\n    @ViewChild('scrollableView') scrollableViewChild;\n\n    @ViewChild('scrollableFrozenView') scrollableFrozenViewChild;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<PrimeTemplate>;\n\n    _value: any[] = [];\n\n    _columns: any[];\n\n    _totalRecords: number = 0;\n\n    _first: number = 0;\n\n    _rows: number;\n\n    filteredValue: any[];\n\n    headerTemplate: TemplateRef<any>;\n\n    bodyTemplate: TemplateRef<any>;\n\n    loadingBodyTemplate: TemplateRef<any>;\n\n    captionTemplate: TemplateRef<any>;\n\n    frozenRowsTemplate: TemplateRef<any>;\n\n    footerTemplate: TemplateRef<any>;\n\n    summaryTemplate: TemplateRef<any>;\n\n    colGroupTemplate: TemplateRef<any>;\n\n    expandedRowTemplate: TemplateRef<any>;\n\n    frozenHeaderTemplate: TemplateRef<any>;\n\n    frozenBodyTemplate: TemplateRef<any>;\n\n    frozenFooterTemplate: TemplateRef<any>;\n\n    frozenColGroupTemplate: TemplateRef<any>;\n\n    emptyMessageTemplate: TemplateRef<any>;\n\n    paginatorLeftTemplate: TemplateRef<any>;\n\n    paginatorRightTemplate: TemplateRef<any>;\n\n    paginatorDropdownItemTemplate: TemplateRef<any>;\n\n    selectionKeys: any = {};\n\n    lastResizerHelperX: number;\n\n    reorderIconWidth: number;\n\n    reorderIconHeight: number;\n\n    draggedColumn: any;\n\n    draggedRowIndex: number;\n\n    droppedRowIndex: number;\n\n    rowDragging: boolean;\n\n    dropPosition: number;\n\n    editingCell: Element;\n\n    editingCellData: any;\n\n    editingCellField: any;\n\n    editingCellRowIndex: number;\n\n    editingCellClick: boolean;\n\n    documentEditListener: any;\n\n    _multiSortMeta: SortMeta[];\n\n    _sortField: string;\n\n    _sortOrder: number = 1;\n\n    preventSelectionSetterPropagation: boolean;\n\n    _selection: any;\n\n    anchorRowIndex: number;\n\n    rangeRowIndex: number;\n\n    filterTimeout: any;\n\n    initialized: boolean;\n\n    rowTouched: boolean;\n\n    restoringSort: boolean;\n\n    restoringFilter: boolean;\n\n    stateRestored: boolean;\n\n    columnOrderStateRestored: boolean;\n\n    columnWidthsState: string;\n\n    tableWidthState: string;\n\n    constructor(public el: ElementRef, public zone: NgZone, public tableService: TableService, public cd: ChangeDetectorRef, public filterService: FilterService) {}\n\n    ngOnInit() {\n        if (this.lazy && this.lazyLoadOnInit) {\n            if (!this.virtualScroll) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n\n            if (this.restoringFilter) {\n                this.restoringFilter = false;\n            }\n        }\n\n        this.initialized = true;\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'caption':\n                    this.captionTemplate = item.template;\n                break;\n\n                case 'header':\n                    this.headerTemplate = item.template;\n                break;\n\n                case 'body':\n                    this.bodyTemplate = item.template;\n                break;\n\n                case 'loadingbody':\n                    this.loadingBodyTemplate = item.template;\n                break;\n\n                case 'footer':\n                    this.footerTemplate = item.template;\n                break;\n\n                case 'summary':\n                    this.summaryTemplate = item.template;\n                break;\n\n                case 'colgroup':\n                    this.colGroupTemplate = item.template;\n                break;\n\n                case 'rowexpansion':\n                    this.expandedRowTemplate = item.template;\n                break;\n\n                case 'frozenrows':\n                    this.frozenRowsTemplate = item.template;\n                break;\n\n                case 'frozenheader':\n                    this.frozenHeaderTemplate = item.template;\n                break;\n\n                case 'frozenbody':\n                    this.frozenBodyTemplate = item.template;\n                break;\n\n                case 'frozenfooter':\n                    this.frozenFooterTemplate = item.template;\n                break;\n\n                case 'frozencolgroup':\n                    this.frozenColGroupTemplate = item.template;\n                break;\n\n                case 'emptymessage':\n                    this.emptyMessageTemplate = item.template;\n                break;\n\n                case 'paginatorleft':\n                    this.paginatorLeftTemplate = item.template;\n                break;\n\n                case 'paginatorright':\n                    this.paginatorRightTemplate = item.template;\n                break;\n\n                case 'paginatordropdownitem':\n                    this.paginatorDropdownItemTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    ngAfterViewInit() {\n        if (this.isStateful() && this.resizableColumns) {\n            this.restoreColumnWidths();\n        }\n    }\n\n    ngOnChanges(simpleChange: SimpleChanges) {\n        if (simpleChange.value) {\n            if (this.isStateful() && !this.stateRestored) {\n                this.restoreState();\n            }\n\n            this._value = simpleChange.value.currentValue;\n\n            if (!this.lazy) {\n                this.totalRecords = (this._value ? this._value.length : 0);\n\n                if (this.sortMode == 'single' && this.sortField)\n                    this.sortSingle();\n                else if (this.sortMode == 'multiple' && this.multiSortMeta)\n                    this.sortMultiple();\n                else if (this.hasFilter())       //sort already filters\n                    this._filter();\n            }\n\n            this.tableService.onValueChange(simpleChange.value.currentValue);\n        }\n\n        if (simpleChange.columns) {\n            this._columns = simpleChange.columns.currentValue;\n            this.tableService.onColumnsChange(simpleChange.columns.currentValue);\n\n            if (this._columns && this.isStateful() && this.reorderableColumns && !this.columnOrderStateRestored ) {\n                this.restoreColumnOrder();\n            }\n        }\n\n        if (simpleChange.sortField) {\n            this._sortField = simpleChange.sortField.currentValue;\n\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if ( !this.lazy || this.initialized ) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n\n        if (simpleChange.sortOrder) {\n            this._sortOrder = simpleChange.sortOrder.currentValue;\n\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if ( !this.lazy || this.initialized ) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n\n        if (simpleChange.multiSortMeta) {\n            this._multiSortMeta = simpleChange.multiSortMeta.currentValue;\n            if (this.sortMode === 'multiple') {\n                this.sortMultiple();\n            }\n        }\n\n        if (simpleChange.selection) {\n            this._selection = simpleChange.selection.currentValue;\n\n            if (!this.preventSelectionSetterPropagation) {\n                this.updateSelectionKeys();\n                this.tableService.onSelectionChange();\n            }\n            this.preventSelectionSetterPropagation = false;\n        }\n    }\n\n    @Input() get value(): any[] {\n        return this._value;\n    }\n    set value(val: any[]) {\n        this._value = val;\n    }\n\n    @Input() get columns(): any[] {\n        return this._columns;\n    }\n    set columns(cols: any[]) {\n        this._columns = cols;\n    }\n\n    @Input() get first(): number {\n        return this._first;\n    }\n    set first(val: number) {\n        this._first = val;\n    }\n\n    @Input() get rows(): number {\n        return this._rows;\n    }\n    set rows(val: number) {\n        this._rows = val;\n    }\n\n    @Input() get totalRecords(): number {\n        return this._totalRecords;\n    }\n    set totalRecords(val: number) {\n        this._totalRecords = val;\n        this.tableService.onTotalRecordsChange(this._totalRecords);\n    }\n\n    @Input() get sortField(): string {\n        return this._sortField;\n    }\n\n    set sortField(val: string) {\n        this._sortField = val;\n    }\n\n    @Input() get sortOrder(): number {\n        return this._sortOrder;\n    }\n    set sortOrder(val: number) {\n        this._sortOrder = val;\n    }\n\n    @Input() get multiSortMeta(): SortMeta[] {\n        return this._multiSortMeta;\n    }\n\n    set multiSortMeta(val: SortMeta[]) {\n        this._multiSortMeta = val;\n    }\n\n    @Input() get selection(): any {\n        return this._selection;\n    }\n\n    set selection(val: any) {\n        this._selection = val;\n    }\n\n    updateSelectionKeys() {\n        if (this.dataKey && this._selection) {\n            this.selectionKeys = {};\n            if (Array.isArray(this._selection)) {\n                for(let data of this._selection) {\n                    this.selectionKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.selectionKeys[String(ObjectUtils.resolveFieldData(this._selection, this.dataKey))] = 1;\n            }\n        }\n    }\n\n    onPageChange(event) {\n        this.first = event.first;\n        this.rows = event.rows;\n\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n\n        this.onPage.emit({\n            first: this.first,\n            rows: this.rows\n        });\n\n        this.firstChange.emit(this.first);\n        this.rowsChange.emit(this.rows);\n        this.tableService.onValueChange(this.value);\n\n        if (this.isStateful()) {\n            this.saveState();\n        }\n\n        this.anchorRowIndex = null;\n\n        if (this.scrollable) {\n            this.resetScrollTop();\n        }\n    }\n\n    sort(event) {\n        let originalEvent = event.originalEvent;\n\n        if (this.sortMode === 'single') {\n            this._sortOrder = (this.sortField === event.field) ? this.sortOrder * -1 : this.defaultSortOrder;\n            this._sortField = event.field;\n            this.sortSingle();\n\n            if (this.resetPageOnSort) {\n                this._first = 0;\n                this.firstChange.emit(this._first);\n\n                if (this.scrollable) {\n                    this.resetScrollTop();\n                }\n            }\n        }\n        if (this.sortMode === 'multiple') {\n            let metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\n            let sortMeta = this.getSortMeta(event.field);\n\n            if (sortMeta) {\n                if (!metaKey) {\n                    this._multiSortMeta = [{ field: event.field, order: sortMeta.order * -1 }];\n\n                    if (this.resetPageOnSort) {\n                        this._first = 0;\n                        this.firstChange.emit(this._first);\n\n                        if (this.scrollable) {\n                            this.resetScrollTop();\n                        }\n                    }\n                }\n                else {\n                    sortMeta.order = sortMeta.order * -1;\n                }\n            }\n            else {\n                if (!metaKey || !this.multiSortMeta) {\n                    this._multiSortMeta = [];\n\n                    if (this.resetPageOnSort) {\n                        this._first = 0;\n                        this.firstChange.emit(this._first);\n                    }\n                }\n                this._multiSortMeta.push({ field: event.field, order: this.defaultSortOrder });\n            }\n\n            this.sortMultiple();\n        }\n\n        if (this.isStateful()) {\n            this.saveState();\n        }\n\n        this.anchorRowIndex = null;\n    }\n\n    sortSingle() {\n        if (this.sortField && this.sortOrder) {\n            if (this.restoringSort) {\n                this.restoringSort = false;\n            }\n\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n                if (this.customSort) {\n                    this.sortFunction.emit({\n                        data: this.value,\n                        mode: this.sortMode,\n                        field: this.sortField,\n                        order: this.sortOrder\n                    });\n                }\n                else {\n                    this.value.sort((data1, data2) => {\n                        let value1 = ObjectUtils.resolveFieldData(data1, this.sortField);\n                        let value2 = ObjectUtils.resolveFieldData(data2, this.sortField);\n                        let result = null;\n\n                        if (value1 == null && value2 != null)\n                            result = -1;\n                        else if (value1 != null && value2 == null)\n                            result = 1;\n                        else if (value1 == null && value2 == null)\n                            result = 0;\n                        else if (typeof value1 === 'string' && typeof value2 === 'string')\n                            result = value1.localeCompare(value2);\n                        else\n                            result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\n\n                        return (this.sortOrder * result);\n                    });\n\n                    this._value = [...this.value];\n                }\n\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n\n            let sortMeta: SortMeta = {\n                field: this.sortField,\n                order: this.sortOrder\n            };\n\n            this.onSort.emit(sortMeta);\n            this.tableService.onSort(sortMeta);\n        }\n    }\n\n    sortMultiple() {\n        if (this.multiSortMeta) {\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n                if (this.customSort) {\n                    this.sortFunction.emit({\n                        data: this.value,\n                        mode: this.sortMode,\n                        multiSortMeta: this.multiSortMeta\n                    });\n                }\n                else {\n                    this.value.sort((data1, data2) => {\n                        return this.multisortField(data1, data2, this.multiSortMeta, 0);\n                    });\n\n                    this._value = [...this.value];\n                }\n\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n\n            this.onSort.emit({\n                multisortmeta: this.multiSortMeta\n            });\n            this.tableService.onSort(this.multiSortMeta);\n        }\n    }\n\n    multisortField(data1, data2, multiSortMeta, index) {\n        let value1 = ObjectUtils.resolveFieldData(data1, multiSortMeta[index].field);\n        let value2 = ObjectUtils.resolveFieldData(data2, multiSortMeta[index].field);\n        let result = null;\n\n        if (value1 == null && value2 != null)\n            result = -1;\n        else if (value1 != null && value2 == null)\n            result = 1;\n        else if (value1 == null && value2 == null)\n            result = 0;\n        else if (typeof value1 == 'string' || value1 instanceof String) {\n            if (value1.localeCompare && (value1 != value2)) {\n                return (multiSortMeta[index].order * value1.localeCompare(value2));\n            }\n        }\n        else {\n            result = (value1 < value2) ? -1 : 1;\n        }\n\n        if (value1 == value2) {\n            return (multiSortMeta.length - 1) > (index) ? (this.multisortField(data1, data2, multiSortMeta, index + 1)) : 0;\n        }\n\n        return (multiSortMeta[index].order * result);\n    }\n\n    getSortMeta(field: string) {\n        if (this.multiSortMeta && this.multiSortMeta.length) {\n            for (let i = 0; i < this.multiSortMeta.length; i++) {\n                if (this.multiSortMeta[i].field === field) {\n                    return this.multiSortMeta[i];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    isSorted(field: string) {\n        if (this.sortMode === 'single') {\n            return (this.sortField && this.sortField === field);\n        }\n        else if (this.sortMode === 'multiple') {\n            let sorted = false;\n            if (this.multiSortMeta) {\n                for(let i = 0; i < this.multiSortMeta.length; i++) {\n                    if (this.multiSortMeta[i].field == field) {\n                        sorted = true;\n                        break;\n                    }\n                }\n            }\n            return sorted;\n        }\n    }\n\n    handleRowClick(event) {\n        let target = (<HTMLElement> event.originalEvent.target);\n        let targetNode = target.nodeName;\n        let parentNode = target.parentElement && target.parentElement.nodeName;\n        if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' ||\n            parentNode == 'INPUT' || parentNode == 'BUTTON' || parentNode == 'A' ||\n            (DomHandler.hasClass(event.originalEvent.target, 'p-clickable'))) {\n            return;\n        }\n\n        if (this.selectionMode) {\n            this.preventSelectionSetterPropagation = true;\n            if (this.isMultipleSelectionMode() && event.originalEvent.shiftKey && this.anchorRowIndex != null) {\n                DomHandler.clearSelection();\n                if (this.rangeRowIndex != null) {\n                    this.clearSelectionRange(event.originalEvent);\n                }\n\n                this.rangeRowIndex = event.rowIndex;\n                this.selectRange(event.originalEvent, event.rowIndex);\n            }\n            else {\n                let rowData = event.rowData;\n                let selected = this.isSelected(rowData);\n                let metaSelection = this.rowTouched ? false : this.metaKeySelection;\n                let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n                this.anchorRowIndex = event.rowIndex;\n                this.rangeRowIndex = event.rowIndex;\n\n                if (metaSelection) {\n                    let metaKey = event.originalEvent.metaKey||event.originalEvent.ctrlKey;\n\n                    if (selected && metaKey) {\n                        if (this.isSingleSelectionMode()) {\n                            this._selection = null;\n                            this.selectionKeys = {};\n                            this.selectionChange.emit(null);\n                        }\n                        else {\n                            let selectionIndex = this.findIndexInSelection(rowData);\n                            this._selection = this.selection.filter((val,i) => i!=selectionIndex);\n                            this.selectionChange.emit(this.selection);\n                            if (dataKeyValue) {\n                                delete this.selectionKeys[dataKeyValue];\n                            }\n                        }\n\n                        this.onRowUnselect.emit({originalEvent: event.originalEvent, data: rowData, type: 'row'});\n                    }\n                    else {\n                        if (this.isSingleSelectionMode()) {\n                            this._selection = rowData;\n                            this.selectionChange.emit(rowData);\n                            if (dataKeyValue) {\n                                this.selectionKeys = {};\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                        else if (this.isMultipleSelectionMode()) {\n                            if (metaKey) {\n                                this._selection = this.selection||[];\n                            }\n                            else {\n                                this._selection = [];\n                                this.selectionKeys = {};\n                            }\n\n                            this._selection = [...this.selection,rowData];\n                            this.selectionChange.emit(this.selection);\n                            if (dataKeyValue) {\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n\n                        this.onRowSelect.emit({originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex});\n                    }\n                }\n                else {\n                    if (this.selectionMode === 'single') {\n                        if (selected) {\n                            this._selection = null;\n                            this.selectionKeys = {};\n                            this.selectionChange.emit(this.selection);\n                            this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row' });\n                        }\n                        else {\n                            this._selection = rowData;\n                            this.selectionChange.emit(this.selection);\n                            this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                            if (dataKeyValue) {\n                                this.selectionKeys = {};\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                    }\n                    else if (this.selectionMode === 'multiple') {\n                        if (selected) {\n                            let selectionIndex = this.findIndexInSelection(rowData);\n                            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n                            this.selectionChange.emit(this.selection);\n                            this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row' });\n                            if (dataKeyValue) {\n                                delete this.selectionKeys[dataKeyValue];\n                            }\n                        }\n                        else {\n                            this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n                            this.selectionChange.emit(this.selection);\n                            this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                            if (dataKeyValue) {\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                    }\n                }\n            }\n\n            this.tableService.onSelectionChange();\n\n            if (this.isStateful()) {\n                this.saveState();\n            }\n        }\n\n        this.rowTouched = false;\n    }\n\n    handleRowTouchEnd(event) {\n        this.rowTouched = true;\n    }\n\n    handleRowRightClick(event) {\n        if (this.contextMenu) {\n            const rowData = event.rowData;\n\n            if (this.contextMenuSelectionMode === 'separate') {\n                this.contextMenuSelection = rowData;\n                this.contextMenuSelectionChange.emit(rowData);\n                this.onContextMenuSelect.emit({originalEvent: event.originalEvent, data: rowData, index: event.rowIndex});\n                this.contextMenu.show(event.originalEvent);\n                this.tableService.onContextMenu(rowData);\n            }\n            else if (this.contextMenuSelectionMode === 'joint') {\n                this.preventSelectionSetterPropagation = true;\n                let selected = this.isSelected(rowData);\n                let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n\n                if (!selected) {\n                    if (this.isSingleSelectionMode()) {\n                        this.selection = rowData;\n                        this.selectionChange.emit(rowData);\n                    }\n                    else if (this.isMultipleSelectionMode()) {\n                        this.selection = [rowData];\n                        this.selectionChange.emit(this.selection);\n                    }\n\n                    if (dataKeyValue) {\n                        this.selectionKeys[dataKeyValue] = 1;\n                    }\n                }\n\n                this.contextMenu.show(event.originalEvent);\n                this.onContextMenuSelect.emit({originalEvent: event, data: rowData, index: event.rowIndex});\n            }\n        }\n    }\n\n    selectRange(event: MouseEvent, rowIndex: number) {\n        let rangeStart, rangeEnd;\n\n        if (this.anchorRowIndex > rowIndex) {\n            rangeStart = rowIndex;\n            rangeEnd = this.anchorRowIndex;\n        }\n        else if (this.anchorRowIndex < rowIndex) {\n            rangeStart = this.anchorRowIndex;\n            rangeEnd = rowIndex;\n        }\n        else {\n            rangeStart = rowIndex;\n            rangeEnd = rowIndex;\n        }\n\n        if (this.lazy && this.paginator) {\n            rangeStart -= this.first;\n            rangeEnd -= this.first;\n        }\n\n        let rangeRowsData = [];\n        for(let i = rangeStart; i <= rangeEnd; i++) {\n            let rangeRowData = this.filteredValue ? this.filteredValue[i] : this.value[i];\n            if (!this.isSelected(rangeRowData)) {\n                rangeRowsData.push(rangeRowData);\n                this._selection = [...this.selection, rangeRowData];\n                let dataKeyValue: string = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n                if (dataKeyValue) {\n                    this.selectionKeys[dataKeyValue] = 1;\n                }\n            }\n        }\n        this.onRowSelect.emit({originalEvent: event, data: rangeRowsData, type: 'row'});\n        this.selectionChange.emit(this.selection);\n    }\n\n    clearSelectionRange(event: MouseEvent) {\n        let rangeStart, rangeEnd;\n\n        if (this.rangeRowIndex > this.anchorRowIndex) {\n            rangeStart = this.anchorRowIndex;\n            rangeEnd = this.rangeRowIndex;\n        }\n        else if (this.rangeRowIndex < this.anchorRowIndex) {\n            rangeStart = this.rangeRowIndex;\n            rangeEnd = this.anchorRowIndex;\n        }\n        else {\n            rangeStart = this.rangeRowIndex;\n            rangeEnd = this.rangeRowIndex;\n        }\n\n        for(let i = rangeStart; i <= rangeEnd; i++) {\n            let rangeRowData = this.value[i];\n            let selectionIndex = this.findIndexInSelection(rangeRowData);\n            this._selection = this.selection.filter((val,i) => i!=selectionIndex);\n            let dataKeyValue: string = this.dataKey ? String(ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n            if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n            }\n            this.onRowUnselect.emit({originalEvent: event, data: rangeRowData, type: 'row'});\n        }\n    }\n\n    isSelected(rowData) {\n        if (rowData && this.selection) {\n            if (this.dataKey) {\n                return this.selectionKeys[ObjectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined;\n            }\n            else {\n                if (this.selection instanceof Array)\n                    return this.findIndexInSelection(rowData) > -1;\n                else\n                    return this.equals(rowData, this.selection);\n            }\n        }\n\n        return false;\n    }\n\n    findIndexInSelection(rowData: any) {\n        let index: number = -1;\n        if (this.selection && this.selection.length) {\n            for (let i = 0; i < this.selection.length; i++) {\n                if (this.equals(rowData, this.selection[i])) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n\n        return index;\n    }\n\n    toggleRowWithRadio(event: any, rowData:any) {\n        this.preventSelectionSetterPropagation = true;\n\n        if (this.selection != rowData) {\n            this._selection = rowData;\n            this.selectionChange.emit(this.selection);\n            this.onRowSelect.emit({originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'radiobutton'});\n\n            if (this.dataKey) {\n                this.selectionKeys = {};\n                this.selectionKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] = 1;\n            }\n        }\n        else {\n            this._selection = null;\n            this.selectionChange.emit(this.selection);\n            this.onRowUnselect.emit({originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'radiobutton'});\n        }\n\n        this.tableService.onSelectionChange();\n\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n\n    toggleRowWithCheckbox(event, rowData: any) {\n        this.selection = this.selection||[];\n        let selected = this.isSelected(rowData);\n        let dataKeyValue = this.dataKey ? String(ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n        this.preventSelectionSetterPropagation = true;\n\n        if (selected) {\n            let selectionIndex = this.findIndexInSelection(rowData);\n            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n            this.selectionChange.emit(this.selection);\n            this.onRowUnselect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'checkbox' });\n            if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n            }\n        }\n        else {\n            this._selection = this.selection ? [...this.selection, rowData] : [rowData];\n            this.selectionChange.emit(this.selection);\n            this.onRowSelect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'checkbox' });\n            if (dataKeyValue) {\n                this.selectionKeys[dataKeyValue] = 1;\n            }\n        }\n\n        this.tableService.onSelectionChange();\n\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n\n    toggleRowsWithCheckbox(event: Event, check: boolean) {\n        this._selection = check ? this.filteredValue ? this.filteredValue.slice(): this.value.slice() : [];\n        this.preventSelectionSetterPropagation = true;\n        this.updateSelectionKeys();\n        this.selectionChange.emit(this._selection);\n        this.tableService.onSelectionChange();\n        this.onHeaderCheckboxToggle.emit({originalEvent: event, checked: check});\n\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n\n    equals(data1, data2) {\n        return this.compareSelectionBy === 'equals' ? (data1 === data2) : ObjectUtils.equals(data1, data2, this.dataKey);\n    }\n\n    /* Legacy Filtering for custom elements */\n    filter(value: any, field: string, matchMode: string) {\n        if (this.filterTimeout) {\n            clearTimeout(this.filterTimeout);\n        }\n        if (!this.isFilterBlank(value)) {\n            this.filters[field] = { value: value, matchMode: matchMode };\n        } else if (this.filters[field]) {\n            delete this.filters[field];\n        }\n\n        this.filterTimeout = setTimeout(() => {\n            this._filter();\n            this.filterTimeout = null;\n        }, this.filterDelay);\n\n        this.anchorRowIndex = null;\n    }\n\n    filterGlobal(value, matchMode) {\n        this.filter(value, 'global', matchMode);\n    }\n\n    isFilterBlank(filter: any): boolean {\n        if (filter !== null && filter !== undefined) {\n            if ((typeof filter === 'string' && filter.trim().length == 0) || (filter instanceof Array && filter.length == 0))\n                return true;\n            else\n                return false;\n        }\n        return true;\n    }\n\n    _filter() {\n        if (!this.restoringFilter) {\n            this.first = 0;\n            this.firstChange.emit(this.first);\n        }\n\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            if (!this.value) {\n                return;\n            }\n\n            if (!this.hasFilter()) {\n                this.filteredValue = null;\n                if (this.paginator) {\n                    this.totalRecords = this.value ? this.value.length : 0;\n                }\n            }\n            else {\n                let globalFilterFieldsArray;\n                if (this.filters['global']) {\n                    if (!this.columns && !this.globalFilterFields)\n                        throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');\n                    else\n                        globalFilterFieldsArray = this.globalFilterFields||this.columns;\n                }\n\n                this.filteredValue = [];\n\n                for (let i = 0; i < this.value.length; i++) {\n                    let localMatch = true;\n                    let globalMatch = false;\n                    let localFiltered = false;\n\n                    for (let prop in this.filters) {\n                        if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\n                            localFiltered = true;\n                            let filterField = prop;\n                            let filterMeta = this.filters[filterField];\n\n                            if (Array.isArray(filterMeta)) {\n                                for (let meta of filterMeta) {\n                                    localMatch = this.executeLocalFilter(filterField, this.value[i], meta);\n\n                                    if ((meta.operator === FilterOperator.OR && localMatch) || (meta.operator === FilterOperator.AND && !localMatch)) {\n                                        break;\n                                    }\n                                }\n                            }\n                            else {\n                                localMatch = this.executeLocalFilter(filterField, this.value[i], filterMeta);\n                            }\n                            \n                            if (!localMatch) {\n                                break;\n                            }\n                        }\n                    }\n\n                    if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\n                        for(let j = 0; j < globalFilterFieldsArray.length; j++) {\n                            let globalFilterField = globalFilterFieldsArray[j].field||globalFilterFieldsArray[j];\n                            globalMatch = this.filterService.filters[(<FilterMetadata> this.filters['global']).matchMode](ObjectUtils.resolveFieldData(this.value[i], globalFilterField), (<FilterMetadata> this.filters['global']).value, this.filterLocale);\n\n                            if (globalMatch) {\n                                break;\n                            }\n                        }\n                    }\n\n                    let matches: boolean;\n                    if (this.filters['global']) {\n                        matches = localFiltered ? (localFiltered && localMatch && globalMatch) : globalMatch;\n                    }\n                    else {\n                        matches = localFiltered && localMatch;\n                    }\n\n                    if (matches) {\n                        this.filteredValue.push(this.value[i]);\n                    }\n                }\n\n                if (this.filteredValue.length === this.value.length) {\n                    this.filteredValue = null;\n                }\n\n                if (this.paginator) {\n                    this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;\n                }\n            }\n        }\n\n        this.onFilter.emit({\n            filters: this.filters,\n            filteredValue: this.filteredValue || this.value\n        });\n\n        this.tableService.onValueChange(this.value);\n\n        if (this.isStateful() && !this.restoringFilter) {\n            this.saveState();\n        }\n\n        if (this.restoringFilter) {\n            this.restoringFilter = false;\n        }\n\n        this.cd.markForCheck();\n\n        if (this.scrollable) {\n            this.resetScrollTop();\n        }\n    }\n\n    executeLocalFilter(field: string, rowData: any, filterMeta: FilterMetadata): boolean {\n        let filterValue = filterMeta.value;\n        let filterMatchMode = filterMeta.matchMode || FilterMatchMode.STARTS_WITH;\n        let dataFieldValue = ObjectUtils.resolveFieldData(rowData, field);\n        let filterConstraint = this.filterService.filters[filterMatchMode];\n\n        return filterConstraint(dataFieldValue, filterValue, this.filterLocale);\n    }\n\n    hasFilter() {\n        let empty = true;\n        for (let prop in this.filters) {\n            if (this.filters.hasOwnProperty(prop)) {\n                empty = false;\n                break;\n            }\n        }\n\n        return !empty;\n    }\n\n    createLazyLoadMetadata(): any {\n        return {\n            first: this.first,\n            rows: this.rows,\n            sortField: this.sortField,\n            sortOrder: this.sortOrder,\n            filters: this.filters,\n            globalFilter: this.filters && this.filters['global'] ? (<FilterMetadata> this.filters['global']).value : null,\n            multiSortMeta: this.multiSortMeta\n        };\n    }\n\n    public clear() {\n        this._sortField = null;\n        this._sortOrder = this.defaultSortOrder;\n        this._multiSortMeta = null;\n        this.tableService.onSort(null);\n\n        this.filteredValue = null;\n        this.filters = {};\n\n        this.first = 0;\n        this.firstChange.emit(this.first);\n\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            this.totalRecords = (this._value ? this._value.length : 0);\n        }\n    }\n\n    public reset() {\n        this.clear();\n    }\n\n    public exportCSV(options?: any) {\n        let data;\n        let csv = '';\n        let columns = this.frozenColumns ? [...this.frozenColumns, ...this.columns] : this.columns;\n\n        if (options && options.selectionOnly) {\n            data = this.selection || [];\n        }\n        else {\n            data = this.filteredValue || this.value;\n\n            if (this.frozenValue) {\n                data = data ? [...this.frozenValue, ...data] : this.frozenValue;\n            }\n        }\n\n        //headers\n        for (let i = 0; i < columns.length; i++) {\n            let column = columns[i];\n            if (column.exportable !== false && column.field) {\n                csv += '\"' + (column.header || column.field) + '\"';\n\n                if (i < (columns.length - 1)) {\n                    csv += this.csvSeparator;\n                }\n            }\n        }\n\n        //body\n        data.forEach((record, i) => {\n            csv += '\\n';\n            for (let i = 0; i < columns.length; i++) {\n                let column = columns[i];\n                if (column.exportable !== false && column.field) {\n                    let cellData = ObjectUtils.resolveFieldData(record, column.field);\n\n                    if (cellData != null) {\n                        if (this.exportFunction) {\n                            cellData = this.exportFunction({\n                                data: cellData,\n                                field: column.field\n                            });\n                        }\n                        else\n                            cellData = String(cellData).replace(/\"/g, '\"\"');\n                    }\n                    else\n                        cellData = '';\n\n                    csv += '\"' + cellData + '\"';\n\n                    if (i < (columns.length - 1)) {\n                        csv += this.csvSeparator;\n                    }\n                }\n            }\n        });\n\n        let blob = new Blob([csv], {\n            type: 'text/csv;charset=utf-8;'\n        });\n\n        if (window.navigator.msSaveOrOpenBlob) {\n            navigator.msSaveOrOpenBlob(blob, this.exportFilename + '.csv');\n        }\n        else {\n            let link = document.createElement(\"a\");\n            link.style.display = 'none';\n            document.body.appendChild(link);\n            if (link.download !== undefined) {\n                link.setAttribute('href', URL.createObjectURL(blob));\n                link.setAttribute('download', this.exportFilename + '.csv');\n                link.click();\n            }\n            else {\n                csv = 'data:text/csv;charset=utf-8,' + csv;\n                window.open(encodeURI(csv));\n            }\n            document.body.removeChild(link);\n        }\n    }\n\n    public resetScrollTop() {\n        if (this.virtualScroll)\n            this.scrollToVirtualIndex(0);\n        else\n            this.scrollTo({top: 0});\n    }\n\n    public scrollToVirtualIndex(index: number) {\n        if (this.scrollableViewChild) {\n            this.scrollableViewChild.scrollToVirtualIndex(index);\n        }\n\n        if (this.scrollableFrozenViewChild) {\n            this.scrollableFrozenViewChild.scrollToVirtualIndex(index);\n        }\n    }\n\n    public scrollTo(options) {\n        if (this.scrollableViewChild) {\n            this.scrollableViewChild.scrollTo(options);\n        }\n\n        if (this.scrollableFrozenViewChild) {\n            this.scrollableFrozenViewChild.scrollTo(options);\n        }\n    }\n\n    updateEditingCell(cell, data, field, index) {\n        this.editingCell = cell;\n        this.editingCellData = data;\n        this.editingCellField = field;\n        this.editingCellRowIndex = index;\n        this.bindDocumentEditListener();\n    }\n\n    isEditingCellValid() {\n        return (this.editingCell && DomHandler.find(this.editingCell, '.ng-invalid.ng-dirty').length === 0);\n    }\n\n    bindDocumentEditListener() {\n        if (!this.documentEditListener) {\n            this.documentEditListener = (event) => {\n                if (this.editingCell && !this.editingCellClick && this.isEditingCellValid()) {\n                    DomHandler.removeClass(this.editingCell, 'p-cell-editing');\n                    this.editingCell = null;\n                    this.onEditComplete.emit({ field: this.editingCellField, data: this.editingCellData, originalEvent: event, index: this.editingCellRowIndex });\n                    this.editingCellField = null;\n                    this.editingCellData = null;\n                    this.editingCellRowIndex = null;\n                    this.unbindDocumentEditListener();\n                    this.cd.markForCheck();\n                }\n\n                this.editingCellClick = false;\n            };\n\n            document.addEventListener('click', this.documentEditListener);\n        }\n    }\n\n    unbindDocumentEditListener() {\n        if (this.documentEditListener) {\n            document.removeEventListener('click', this.documentEditListener);\n            this.documentEditListener = null;\n        }\n    }\n\n    initRowEdit(rowData: any) {\n        let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        this.editingRowKeys[dataKeyValue] = true;\n    }\n\n    saveRowEdit(rowData: any, rowElement: HTMLTableRowElement) {\n        if (DomHandler.find(rowElement, '.ng-invalid.ng-dirty').length === 0) {\n            let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n            delete this.editingRowKeys[dataKeyValue];\n        }\n    }\n\n    cancelRowEdit(rowData: any) {\n        let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        delete this.editingRowKeys[dataKeyValue];\n    }\n\n    toggleRow(rowData: any, event?: Event) {\n        if (!this.dataKey) {\n            throw new Error('dataKey must be defined to use row expansion');\n        }\n\n        let dataKeyValue = String(ObjectUtils.resolveFieldData(rowData, this.dataKey));\n\n        if (this.expandedRowKeys[dataKeyValue] != null) {\n            delete this.expandedRowKeys[dataKeyValue];\n            this.onRowCollapse.emit({\n                originalEvent: event,\n                data: rowData\n            });\n        }\n        else {\n            if (this.rowExpandMode === 'single') {\n                this.expandedRowKeys = {};\n            }\n\n            this.expandedRowKeys[dataKeyValue] = true;\n            this.onRowExpand.emit({\n                originalEvent: event,\n                data: rowData\n            });\n        }\n\n        if (event) {\n            event.preventDefault();\n        }\n\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    }\n\n    isRowExpanded(rowData: any): boolean {\n        return this.expandedRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n    }\n\n    isRowEditing(rowData: any): boolean {\n        return this.editingRowKeys[String(ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n    }\n\n    isSingleSelectionMode() {\n        return this.selectionMode === 'single';\n    }\n\n    isMultipleSelectionMode() {\n        return this.selectionMode === 'multiple';\n    }\n\n    onColumnResizeBegin(event) {\n        let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n        this.lastResizerHelperX = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft);\n        this.onColumnResize(event);\n        event.preventDefault();\n    }\n\n    onColumnResize(event) {\n        let containerLeft = DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n        DomHandler.addClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n        this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';\n        this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\n        this.resizeHelperViewChild.nativeElement.style.left = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft) + 'px';\n\n        this.resizeHelperViewChild.nativeElement.style.display = 'block';\n    }\n\n    onColumnResizeEnd(event, column) {\n        let delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\n        let columnWidth = column.offsetWidth;\n        let minWidth = parseInt(column.style.minWidth || 15);\n\n        if (columnWidth + delta < minWidth) {\n            delta = minWidth - columnWidth;\n        }\n\n        const newColumnWidth = columnWidth + delta;\n\n        if (newColumnWidth >= minWidth) {\n            if (this.columnResizeMode === 'fit') {\n                let nextColumn = column.nextElementSibling;\n                while (!nextColumn.offsetParent) {\n                    nextColumn = nextColumn.nextElementSibling;\n                }\n\n                if (nextColumn) {\n                    let nextColumnWidth = nextColumn.offsetWidth - delta;\n                    let nextColumnMinWidth = nextColumn.style.minWidth || 15;\n\n                    if (newColumnWidth > 15 && nextColumnWidth > parseInt(nextColumnMinWidth)) {\n                        if (this.scrollable) {\n                            let scrollableView = this.findParentScrollableView(column);\n                            let scrollableBodyTable = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-body table') || DomHandler.findSingle(scrollableView, '.p-datatable-virtual-scrollable-body table');\n                            let scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-header-table');\n                            let scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-footer-table');\n                            let resizeColumnIndex = DomHandler.index(column);\n\n                            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                        }\n                        else {\n                            column.style.width = newColumnWidth + 'px';\n                            if (nextColumn) {\n                                nextColumn.style.width = nextColumnWidth + 'px';\n                            }\n                        }\n                    }\n                }\n            }\n            else if (this.columnResizeMode === 'expand') {\n                if (newColumnWidth >= minWidth) {\n                    if (this.scrollable) {\n                        this.setScrollableItemsWidthOnExpandResize(column, newColumnWidth, delta);\n                    }\n                    else {\n                        this.tableViewChild.nativeElement.style.width = this.tableViewChild.nativeElement.offsetWidth + delta + 'px';\n                        column.style.width = newColumnWidth + 'px';\n                        let containerWidth = this.tableViewChild.nativeElement.style.width;\n                        this.containerViewChild.nativeElement.style.width = containerWidth + 'px';\n                    }\n                }\n            }\n\n            this.onColResize.emit({\n                element: column,\n                delta: delta\n            });\n\n            if (this.isStateful()) {\n                this.saveState();\n            }\n        }\n\n        this.resizeHelperViewChild.nativeElement.style.display = 'none';\n        DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-unselectable-text');\n    }\n\n    setScrollableItemsWidthOnExpandResize(column, newColumnWidth, delta) {\n        let scrollableView = column ? this.findParentScrollableView(column) : this.containerViewChild.nativeElement;\n        let scrollableBody = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-body') || DomHandler.findSingle(scrollableView, 'cdk-virtual-scroll-viewport');\n        let scrollableHeader = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-header');\n        let scrollableFooter = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-footer');\n        let scrollableBodyTable = DomHandler.findSingle(scrollableBody, '.p-datatable-scrollable-body table') || DomHandler.findSingle(scrollableView, 'cdk-virtual-scroll-viewport table');\n        let scrollableHeaderTable = DomHandler.findSingle(scrollableHeader, 'table.p-datatable-scrollable-header-table');\n        let scrollableFooterTable = DomHandler.findSingle(scrollableFooter, 'table.p-datatable-scrollable-footer-table');\n\n        const scrollableBodyTableWidth = column ? scrollableBodyTable.offsetWidth + delta : newColumnWidth;\n        const scrollableHeaderTableWidth = column ? scrollableHeaderTable.offsetWidth + delta : newColumnWidth;\n        const isContainerInViewport = this.containerViewChild.nativeElement.offsetWidth >= scrollableBodyTableWidth;\n\n        let setWidth = (container, table, width, isContainerInViewport) => {\n            if (container && table) {\n                container.style.width = isContainerInViewport ? width + DomHandler.calculateScrollbarWidth(scrollableBody) + 'px' : 'auto'\n                table.style.width = width + 'px';\n            }\n        };\n\n        setWidth(scrollableBody, scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);\n        setWidth(scrollableHeader, scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);\n        setWidth(scrollableFooter, scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);\n\n        if (column) {\n            let resizeColumnIndex = DomHandler.index(column);\n\n            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\n            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\n            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\n        }\n    }\n\n    findParentScrollableView(column) {\n        if (column) {\n            let parent = column.parentElement;\n            while (parent && !DomHandler.hasClass(parent, 'p-datatable-scrollable-view')) {\n                parent = parent.parentElement;\n            }\n\n            return parent;\n        }\n        else {\n            return null;\n        }\n    }\n\n    resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\n        if (table) {\n            let colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\n\n            if (colGroup) {\n                let col = colGroup.children[resizeColumnIndex];\n                let nextCol = col.nextElementSibling;\n                col.style.width = newColumnWidth + 'px';\n\n                if (nextCol && nextColumnWidth) {\n                    nextCol.style.width = nextColumnWidth + 'px';\n                }\n            }\n            else {\n                throw \"Scrollable tables require a colgroup to support resizable columns\";\n            }\n        }\n    }\n\n    onColumnDragStart(event, columnElement) {\n        this.reorderIconWidth = DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);\n        this.reorderIconHeight = DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);\n        this.draggedColumn = columnElement;\n        event.dataTransfer.setData('text', 'b');    // For firefox\n    }\n\n    onColumnDragEnter(event, dropHeader) {\n        if (this.reorderableColumns && this.draggedColumn && dropHeader) {\n            event.preventDefault();\n            let containerOffset = DomHandler.getOffset(this.containerViewChild.nativeElement);\n            let dropHeaderOffset = DomHandler.getOffset(dropHeader);\n\n            if (this.draggedColumn != dropHeader) {\n                let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n                let dropIndex = DomHandler.indexWithinGroup(dropHeader, 'preorderablecolumn');\n                let targetLeft = dropHeaderOffset.left - containerOffset.left;\n                let targetTop = containerOffset.top - dropHeaderOffset.top;\n                let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n\n                this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\n                this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n\n                if (event.pageX > columnCenter) {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.dropPosition = 1;\n                }\n                else {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.dropPosition = -1;\n                }\n\n                if ((dropIndex - dragIndex === 1 && this.dropPosition === -1) || (dropIndex - dragIndex === -1 && this.dropPosition === 1)) {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n                }\n                else {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\n                }\n            }\n            else {\n                event.dataTransfer.dropEffect = 'none';\n            }\n        }\n    }\n\n    onColumnDragLeave(event) {\n        if (this.reorderableColumns && this.draggedColumn) {\n            event.preventDefault();\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n        }\n    }\n\n    onColumnDrop(event, dropColumn) {\n        event.preventDefault();\n        if (this.draggedColumn) {\n            let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n            let dropIndex = DomHandler.indexWithinGroup(dropColumn, 'preorderablecolumn');\n            let allowDrop = (dragIndex != dropIndex);\n            if (allowDrop && ((dropIndex - dragIndex == 1 && this.dropPosition === -1) || (dragIndex - dropIndex == 1 && this.dropPosition === 1))) {\n                allowDrop = false;\n            }\n\n            if (allowDrop && ((dropIndex < dragIndex && this.dropPosition === 1))) {\n                dropIndex = dropIndex + 1;\n            }\n\n            if (allowDrop && ((dropIndex > dragIndex && this.dropPosition === -1))) {\n                dropIndex = dropIndex - 1;\n            }\n\n            if (allowDrop) {\n                ObjectUtils.reorderArray(this.columns, dragIndex, dropIndex);\n\n                this.onColReorder.emit({\n                    dragIndex: dragIndex,\n                    dropIndex: dropIndex,\n                    columns: this.columns\n                });\n\n                if (this.isStateful()) {\n                    this.zone.runOutsideAngular(() => {\n                        setTimeout(() => {\n                            this.saveState();\n                        });\n                    });\n                }\n            }\n\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n            this.draggedColumn.draggable = false;\n            this.draggedColumn = null;\n            this.dropPosition = null;\n        }\n    }\n\n    onRowDragStart(event, index) {\n        this.rowDragging = true;\n        this.draggedRowIndex = index;\n        event.dataTransfer.setData('text', 'b');    // For firefox\n    }\n\n    onRowDragOver(event, index, rowElement) {\n        if (this.rowDragging && this.draggedRowIndex !== index) {\n            let rowY = DomHandler.getOffset(rowElement).top + DomHandler.getWindowScrollTop();\n            let pageY = event.pageY;\n            let rowMidY = rowY + DomHandler.getOuterHeight(rowElement) / 2;\n            let prevRowElement = rowElement.previousElementSibling;\n\n            if (pageY < rowMidY) {\n                DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n\n                this.droppedRowIndex = index;\n                if (prevRowElement)\n                    DomHandler.addClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n                else\n                    DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n            }\n            else {\n                if (prevRowElement)\n                    DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n                else\n                    DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n\n                this.droppedRowIndex = index + 1;\n                DomHandler.addClass(rowElement, 'p-datatable-dragpoint-bottom');\n            }\n        }\n    }\n\n    onRowDragLeave(event, rowElement) {\n        let prevRowElement = rowElement.previousElementSibling;\n        if (prevRowElement) {\n            DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n        }\n\n        DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n        DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-top');\n    }\n\n    onRowDragEnd(event) {\n        this.rowDragging = false;\n        this.draggedRowIndex = null;\n        this.droppedRowIndex = null;\n    }\n\n    onRowDrop(event, rowElement) {\n        if (this.droppedRowIndex != null) {\n            let dropIndex = (this.draggedRowIndex > this.droppedRowIndex) ? this.droppedRowIndex : (this.droppedRowIndex === 0) ? 0 : this.droppedRowIndex - 1;\n            ObjectUtils.reorderArray(this.value, this.draggedRowIndex, dropIndex);\n\n            this.onRowReorder.emit({\n                dragIndex: this.draggedRowIndex,\n                dropIndex: dropIndex\n            });\n        }\n        //cleanup\n        this.onRowDragLeave(event, rowElement);\n        this.onRowDragEnd(event);\n    }\n\n    isEmpty() {\n        let data = this.filteredValue||this.value;\n        return data == null || data.length == 0;\n    }\n\n    getBlockableElement(): HTMLElement {\n        return this.el.nativeElement.children[0];\n    }\n\n    getStorage() {\n        switch(this.stateStorage) {\n            case 'local':\n                return window.localStorage;\n\n            case 'session':\n                return window.sessionStorage;\n\n            default:\n                throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n        }\n    }\n\n    isStateful() {\n        return this.stateKey != null;\n    }\n\n    saveState() {\n        const storage = this.getStorage();\n        let state: TableState = {};\n\n        if (this.paginator) {\n            state.first = this.first;\n            state.rows = this.rows;\n        }\n\n        if (this.sortField) {\n            state.sortField = this.sortField;\n            state.sortOrder = this.sortOrder;\n        }\n\n        if (this.multiSortMeta) {\n            state.multiSortMeta = this.multiSortMeta;\n        }\n\n        if (this.hasFilter()) {\n            state.filters = this.filters;\n        }\n\n        if (this.resizableColumns) {\n            this.saveColumnWidths(state);\n        }\n\n        if (this.reorderableColumns) {\n            this.saveColumnOrder(state);\n        }\n\n        if (this.selection) {\n            state.selection = this.selection;\n        }\n\n        if (Object.keys(this.expandedRowKeys).length) {\n            state.expandedRowKeys = this.expandedRowKeys;\n        }\n\n        if (Object.keys(state).length) {\n            storage.setItem(this.stateKey, JSON.stringify(state));\n        }\n\n        this.onStateSave.emit(state);\n    }\n\n    clearState() {\n        const storage = this.getStorage();\n\n        if (this.stateKey) {\n            storage.removeItem(this.stateKey);\n        }\n    }\n\n    restoreState() {\n        const storage = this.getStorage();\n        const stateString = storage.getItem(this.stateKey);\n\n        if (stateString) {\n            let state: TableState = JSON.parse(stateString);\n\n            if (this.paginator) {\n                if (this.first !== undefined) {\n                    this.first = state.first;\n                    this.firstChange.emit(this.first);\n                }\n\n                if (this.rows !== undefined) {\n                    this.rows = state.rows;\n                    this.rowsChange.emit(this.rows);\n                }\n            }\n\n            if (state.sortField) {\n                this.restoringSort = true;\n                this._sortField = state.sortField;\n                this._sortOrder = state.sortOrder;\n            }\n\n            if (state.multiSortMeta) {\n                this.restoringSort = true;\n                this._multiSortMeta = state.multiSortMeta;\n            }\n\n            if (state.filters) {\n                this.restoringFilter = true;\n                this.filters = state.filters;\n            }\n\n            if (this.resizableColumns) {\n                this.columnWidthsState = state.columnWidths;\n                this.tableWidthState = state.tableWidth;\n            }\n\n            if (state.expandedRowKeys) {\n                this.expandedRowKeys = state.expandedRowKeys;\n            }\n\n            if (state.selection) {\n                Promise.resolve(null).then(() => this.selectionChange.emit(state.selection));\n            }\n\n            this.stateRestored = true;\n\n            this.onStateRestore.emit(state);\n        }\n    }\n\n    saveColumnWidths(state) {\n        let widths = [];\n        let headers = DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-thead > tr:first-child > th');\n        headers.map(header => widths.push(DomHandler.getOuterWidth(header)));\n        state.columnWidths = widths.join(',');\n\n        if (this.columnResizeMode === 'expand') {\n            state.tableWidth = this.scrollable ? DomHandler.findSingle(this.containerViewChild.nativeElement, '.p-datatable-scrollable-header-table').style.width :\n                                                DomHandler.getOuterWidth(this.tableViewChild.nativeElement) + 'px';\n        }\n    }\n\n    restoreColumnWidths() {\n        if (this.columnWidthsState) {\n            let widths = this.columnWidthsState.split(',');\n\n            if (this.columnResizeMode === 'expand' && this.tableWidthState) {\n                if (this.scrollable) {\n                    this.setScrollableItemsWidthOnExpandResize(null, this.tableWidthState, 0);\n                }\n                else {\n                    this.tableViewChild.nativeElement.style.width = this.tableWidthState;\n                    this.containerViewChild.nativeElement.style.width = this.tableWidthState;\n                }\n            }\n\n            if (this.scrollable) {\n                let headerCols = DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-scrollable-header-table > colgroup > col');\n                let bodyCols = this.virtualScroll ? DomHandler.find(this.containerViewChild.nativeElement, 'cdk-virtual-scroll-viewport table > colgroup > col') : DomHandler.find(this.containerViewChild.nativeElement, '.p-datatable-scrollable-body table > colgroup > col');\n\n                headerCols.map((col, index) => col.style.width = widths[index] + 'px');\n                bodyCols.map((col, index) => col.style.width = widths[index] + 'px');\n            }\n            else {\n                let headers = DomHandler.find(this.tableViewChild.nativeElement, '.p-datatable-thead > tr:first-child > th');\n                headers.map((header, index) => header.style.width = widths[index] + 'px');\n            }\n        }\n    }\n\n    saveColumnOrder(state) {\n        if (this.columns) {\n            let columnOrder: string[] = [];\n            this.columns.map(column => {\n                columnOrder.push(column.field||column.key)\n            });\n\n            state.columnOrder = columnOrder;\n        }\n    }\n\n    restoreColumnOrder() {\n        const storage = this.getStorage();\n        const stateString = storage.getItem(this.stateKey);\n        if (stateString) {\n            let state: TableState = JSON.parse(stateString);\n            let columnOrder = state.columnOrder;\n            if (columnOrder) {\n                let reorderedColumns = [];\n\n                columnOrder.map(key =>  {\n                    let col = this.findColumnByKey(key);\n                    if (col) {\n                        reorderedColumns.push(col)\n                    }\n                });\n                this.columnOrderStateRestored = true;\n                this.columns = reorderedColumns;\n            }\n        }\n    }\n\n    findColumnByKey(key) {\n        if (this.columns) {\n            for (let col of this.columns) {\n                if (col.key === key || col.field === key)\n                    return col;\n                else\n                    continue;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n\n    ngOnDestroy() {\n        this.unbindDocumentEditListener();\n        this.editingCell = null;\n        this.initialized = null;\n    }\n}\n\n@Component({\n    selector: '[pTableBody]',\n    template: `\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && !dt.virtualScroll\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"!dt.expandedRowTemplate && dt.virtualScroll\">\n            <ng-template cdkVirtualFor let-rowData let-rowIndex=\"index\" [cdkVirtualForOf]=\"dt.filteredValue||dt.value\" [cdkVirtualForTrackBy]=\"dt.rowTrackBy\" [cdkVirtualForTemplateCacheSize]=\"0\">\n                <ng-container *ngTemplateOutlet=\"rowData ? template: dt.loadingBodyTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\"></ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.expandedRowTemplate\">\n            <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\"></ng-container>\n                <ng-container *ngIf=\"dt.isRowExpanded(rowData)\">\n                    <ng-container *ngTemplateOutlet=\"dt.expandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.loadingBodyTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"dt.isEmpty() && !dt.loading\">\n            <ng-container *ngTemplateOutlet=\"dt.emptyMessageTemplate; context: {$implicit: columns, frozen: frozen}\"></ng-container>\n        </ng-container>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default,\n    encapsulation: ViewEncapsulation.None\n})\nexport class TableBody implements OnDestroy {\n\n    @Input(\"pTableBody\") columns: any[];\n\n    @Input(\"pTableBodyTemplate\") template: TemplateRef<any>;\n\n    @Input() frozen: boolean;\n\n    subscription: Subscription;\n\n    constructor(public dt: Table, public tableService: TableService, public cd: ChangeDetectorRef) {\n        this.subscription = this.dt.tableService.valueSource$.subscribe(() => {\n            if (this.dt.virtualScroll) {\n                this.cd.detectChanges();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n@Component({\n    selector: '[pScrollableView]',\n    template: `\n        <div #scrollHeader class=\"p-datatable-scrollable-header\">\n            <div #scrollHeaderBox class=\"p-datatable-scrollable-header-box\">\n                <table class=\"p-datatable-scrollable-header-table\" [ngClass]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"p-datatable-thead\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenHeaderTemplate||dt.headerTemplate : dt.headerTemplate; context {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-datatable-tbody\">\n                        <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"dt.frozenValue\" [ngForTrackBy]=\"dt.rowTrackBy\">\n                            <ng-container *ngTemplateOutlet=\"dt.frozenRowsTemplate; context: {$implicit: rowData, rowIndex: rowIndex, columns: columns}\"></ng-container>\n                        </ng-template>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <ng-container *ngIf=\"!dt.virtualScroll; else virtualScrollTemplate\">\n            <div #scrollBody class=\"p-datatable-scrollable-body\" [ngStyle]=\"{'max-height': dt.scrollHeight !== 'flex' ? scrollHeight : undefined, 'overflow-y': !frozen && dt.scrollHeight ? 'scroll' : undefined}\">\n                <table #scrollTable [class]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tbody class=\"p-datatable-tbody\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate\" [frozen]=\"frozen\"></tbody>\n                </table>\n                <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n            </div>\n        </ng-container>\n        <ng-template #virtualScrollTemplate>\n            <cdk-virtual-scroll-viewport [itemSize]=\"dt.virtualRowHeight\" tabindex=\"0\" [style.height]=\"dt.scrollHeight !== 'flex' ? scrollHeight : undefined\"\n                    [minBufferPx]=\"dt.minBufferPx\" [maxBufferPx]=\"dt.maxBufferPx\" (scrolledIndexChange)=\"onScrollIndexChange($event)\" class=\"p-datatable-virtual-scrollable-body\">\n                <table #scrollTable [class]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tbody class=\"p-datatable-tbody\" [pTableBody]=\"columns\" [pTableBodyTemplate]=\"frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate\" [frozen]=\"frozen\"></tbody>\n                </table>\n                <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n            </cdk-virtual-scroll-viewport>\n        </ng-template>\n        <div #scrollFooter class=\"p-datatable-scrollable-footer\">\n            <div #scrollFooterBox class=\"p-datatable-scrollable-footer-box\">\n                <table class=\"p-datatable-scrollable-footer-table\" [ngClass]=\"dt.tableStyleClass\" [ngStyle]=\"dt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tfoot class=\"p-datatable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? dt.frozenFooterTemplate||dt.footerTemplate : dt.footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ScrollableView implements AfterViewInit,OnDestroy {\n\n    @Input(\"pScrollableView\") columns: any[];\n\n    @Input() frozen: boolean;\n\n    @ViewChild('scrollHeader') scrollHeaderViewChild: ElementRef;\n\n    @ViewChild('scrollHeaderBox') scrollHeaderBoxViewChild: ElementRef;\n\n    @ViewChild('scrollBody') scrollBodyViewChild: ElementRef;\n\n    @ViewChild('scrollTable') scrollTableViewChild: ElementRef;\n\n    @ViewChild('scrollFooter') scrollFooterViewChild: ElementRef;\n\n    @ViewChild('scrollFooterBox') scrollFooterBoxViewChild: ElementRef;\n\n    @ViewChild('scrollableAligner') scrollableAlignerViewChild: ElementRef;\n\n    @ViewChild(CdkVirtualScrollViewport) virtualScrollBody: CdkVirtualScrollViewport;\n\n    headerScrollListener: any;\n\n    bodyScrollListener: any;\n\n    footerScrollListener: any;\n\n    frozenSiblingBody: HTMLDivElement;\n\n    preventBodyScrollPropagation: boolean;\n\n    _scrollHeight: string;\n\n    virtualScrollTimeout: any;\n\n    virtualPage: number;\n\n    @Input() get scrollHeight(): string {\n        return this._scrollHeight;\n    }\n    set scrollHeight(val: string) {\n        this._scrollHeight = val;\n        if (val != null && (val.includes('%') || val.includes('calc'))) {\n            console.log('Percentage scroll height calculation is removed in favor of the more performant CSS based flex mode, use scrollHeight=\"flex\" instead.')\n        }\n\n        if (this.dt.virtualScroll && this.virtualScrollBody) {\n            this.virtualScrollBody.ngOnInit();\n        }\n    }\n\n    constructor(public dt: Table, public el: ElementRef, public zone: NgZone) {}\n\n    ngAfterViewInit() {\n        if (!this.frozen) {\n            if (this.dt.frozenColumns || this.dt.frozenBodyTemplate) {\n                DomHandler.addClass(this.el.nativeElement, 'p-datatable-unfrozen-view');\n            }\n\n            let frozenView = this.el.nativeElement.previousElementSibling;\n            if (frozenView) {\n                if (this.dt.virtualScroll)\n                    this.frozenSiblingBody = DomHandler.findSingle(frozenView, '.p-datatable-virtual-scrollable-body');\n                else\n                    this.frozenSiblingBody = DomHandler.findSingle(frozenView, '.p-datatable-scrollable-body');\n            }\n\n            let scrollBarWidth = DomHandler.calculateScrollbarWidth();\n            this.scrollHeaderBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\n\n            if (this.scrollFooterBoxViewChild && this.scrollFooterBoxViewChild.nativeElement) {\n                this.scrollFooterBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\n            }\n        }\n        else {\n            if (this.scrollableAlignerViewChild && this.scrollableAlignerViewChild.nativeElement) {\n                this.scrollableAlignerViewChild.nativeElement.style.height = DomHandler.calculateScrollbarHeight() + 'px';\n            }\n        }\n\n        this.bindEvents();\n    }\n\n    bindEvents() {\n        this.zone.runOutsideAngular(() => {\n            if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n                this.headerScrollListener = this.onHeaderScroll.bind(this);\n                this.scrollHeaderViewChild.nativeElement.addEventListener('scroll', this.headerScrollListener);\n            }\n\n            if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n                this.footerScrollListener = this.onFooterScroll.bind(this);\n                this.scrollFooterViewChild.nativeElement.addEventListener('scroll', this.footerScrollListener);\n            }\n\n            if (!this.frozen) {\n                this.bodyScrollListener = this.onBodyScroll.bind(this);\n\n                if (this.dt.virtualScroll)\n                    this.virtualScrollBody.getElementRef().nativeElement.addEventListener('scroll', this.bodyScrollListener);\n                else\n                    this.scrollBodyViewChild.nativeElement.addEventListener('scroll', this.bodyScrollListener);\n            }\n        });\n    }\n\n    unbindEvents() {\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n            this.scrollHeaderViewChild.nativeElement.removeEventListener('scroll', this.headerScrollListener);\n        }\n\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n            this.scrollFooterViewChild.nativeElement.removeEventListener('scroll', this.footerScrollListener);\n        }\n\n        if (this.scrollBodyViewChild && this.scrollBodyViewChild.nativeElement) {\n            this.scrollBodyViewChild.nativeElement.removeEventListener('scroll', this.bodyScrollListener);\n        }\n\n        if (this.virtualScrollBody && this.virtualScrollBody.getElementRef()) {\n            this.virtualScrollBody.getElementRef().nativeElement.removeEventListener('scroll', this.bodyScrollListener);\n        }\n    }\n\n    onHeaderScroll() {\n        const scrollLeft = this.scrollHeaderViewChild.nativeElement.scrollLeft;\n\n        this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n            this.scrollFooterViewChild.nativeElement.scrollLeft = scrollLeft;\n        }\n\n        this.preventBodyScrollPropagation = true;\n    }\n\n    onFooterScroll() {\n        const scrollLeft = this.scrollFooterViewChild.nativeElement.scrollLeft;\n        this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n            this.scrollHeaderViewChild.nativeElement.scrollLeft = scrollLeft;\n        }\n\n        this.preventBodyScrollPropagation = true;\n    }\n\n    onBodyScroll(event) {\n        if (this.preventBodyScrollPropagation) {\n            this.preventBodyScrollPropagation = false;\n            return;\n        }\n\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n            this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n        }\n\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n            this.scrollFooterBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n        }\n\n        if (this.frozenSiblingBody) {\n            this.frozenSiblingBody.scrollTop = event.target.scrollTop;\n        }\n    }\n\n    onScrollIndexChange(index: number) {\n        if (this.dt.lazy) {\n            if (this.virtualScrollTimeout) {\n                clearTimeout(this.virtualScrollTimeout);\n            }\n\n            this.virtualScrollTimeout = setTimeout(() => {\n                let page = Math.floor(index / this.dt.rows);\n                let virtualScrollOffset = page === 0 ? 0 : (page - 1) * this.dt.rows;\n                let virtualScrollChunkSize = page === 0 ? this.dt.rows * 2 : this.dt.rows * 3;\n  \n                if (page !== this.virtualPage) {\n                    this.virtualPage = page;\n                    this.dt.onLazyLoad.emit({\n                        first: virtualScrollOffset,\n                        rows: virtualScrollChunkSize,\n                        sortField: this.dt.sortField,\n                        sortOrder: this.dt.sortOrder,\n                        filters: this.dt.filters,\n                        globalFilter: this.dt.filters && this.dt.filters['global'] ? (<FilterMetadata> this.dt.filters['global']).value : null,\n                        multiSortMeta: this.dt.multiSortMeta\n                    });\n                }\n            }, this.dt.virtualScrollDelay);\n        }\n    }\n\n    getPageCount() {\n        let dataToRender = this.dt.filteredValue || this.dt.value;\n        let dataLength = dataToRender ? dataToRender.length: 0;\n        return Math.ceil(dataLength / this.dt.rows);\n    }\n\n    scrollToVirtualIndex(index: number): void {\n        if (this.virtualScrollBody) {\n            this.virtualScrollBody.scrollToIndex(index);\n        }\n    }\n\n    scrollTo(options): void {\n        if (this.virtualScrollBody) {\n            this.virtualScrollBody.scrollTo(options);\n        }\n        else {\n            if (this.scrollBodyViewChild.nativeElement.scrollTo) {\n                this.scrollBodyViewChild.nativeElement.scrollTo(options);\n            }\n            else {\n                this.scrollBodyViewChild.nativeElement.scrollLeft = options.left;\n                this.scrollBodyViewChild.nativeElement.scrollTop = options.top;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.unbindEvents();\n        this.frozenSiblingBody = null;\n    }\n}\n\n@Directive({\n    selector: '[pSortableColumn]',\n    host: {\n        '[class.p-sortable-column]': 'isEnabled()',\n        '[class.p-highlight]': 'sorted',\n        '[attr.tabindex]': 'isEnabled() ? \"0\" : null',\n        '[attr.role]': '\"columnheader\"',\n        '[attr.aria-sort]': 'sortOrder'\n    }\n})\nexport class SortableColumn implements OnInit, OnDestroy {\n\n    @Input(\"pSortableColumn\") field: string;\n\n    @Input() pSortableColumnDisabled: boolean;\n\n    sorted: boolean;\n\n    sortOrder: string;\n\n    subscription: Subscription;\n\n    constructor(public dt: Table) {\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.sortSource$.subscribe(sortMeta => {\n                this.updateSortState();\n            });\n        }\n    }\n\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.updateSortState();\n        }\n    }\n\n    updateSortState() {\n        this.sorted = this.dt.isSorted(this.field);\n        this.sortOrder = this.sorted ? (this.dt.sortOrder === 1 ? 'ascending' : 'descending') : 'none';\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: MouseEvent) {\n        if (this.isEnabled() && !this.isFilterElement(<HTMLElement> event.target)) {\n            this.updateSortState();\n            this.dt.sort({\n                originalEvent: event,\n                field: this.field\n            });\n\n            DomHandler.clearSelection();\n        }\n    }\n\n    @HostListener('keydown.enter', ['$event'])\n    onEnterKey(event: MouseEvent) {\n        this.onClick(event);\n    }\n\n    isEnabled() {\n        return this.pSortableColumnDisabled !== true;\n    }\n\n    isFilterElement(element: HTMLElement) {\n        return DomHandler.hasClass(element, 'pi-filter-icon') || DomHandler.hasClass(element, 'p-column-filter-menu-button');\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n\n\n@Component({\n    selector: 'p-sortIcon',\n    template: `\n        <i class=\"p-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-amount-up-alt': sortOrder === 1, 'pi-sort-amount-down': sortOrder === -1, 'pi-sort-alt': sortOrder === 0}\"></i>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class SortIcon implements OnInit, OnDestroy {\n\n    @Input() field: string;\n\n    subscription: Subscription;\n\n    sortOrder: number;\n\n    constructor(public dt: Table, public cd: ChangeDetectorRef) {\n        this.subscription = this.dt.tableService.sortSource$.subscribe(sortMeta => {\n            this.updateSortState();\n        });\n    }\n\n    ngOnInit() {\n        this.updateSortState();\n    }\n\n    onClick(event){\n        event.preventDefault();\n    }\n\n    updateSortState() {\n        if (this.dt.sortMode === 'single') {\n            this.sortOrder = this.dt.isSorted(this.field) ? this.dt.sortOrder : 0;\n        }\n        else if (this.dt.sortMode === 'multiple') {\n            let sortMeta = this.dt.getSortMeta(this.field);\n            this.sortOrder = sortMeta ? sortMeta.order: 0;\n        }\n\n        this.cd.markForCheck();\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n@Directive({\n    selector: '[pSelectableRow]',\n    host: {\n        '[class.p-selectable-row]': 'isEnabled()',\n        '[class.p-highlight]': 'selected',\n        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n    }\n})\nexport class SelectableRow implements OnInit, OnDestroy {\n\n    @Input(\"pSelectableRow\") data: any;\n\n    @Input(\"pSelectableRowIndex\") index: number;\n\n    @Input() pSelectableRowDisabled: boolean;\n\n    selected: boolean;\n\n    subscription: Subscription;\n\n    constructor(public dt: Table, public tableService: TableService) {\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n                this.selected = this.dt.isSelected(this.data);\n            });\n        }\n    }\n\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.selected = this.dt.isSelected(this.data);\n        }\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n        }\n    }\n\n    @HostListener('touchend', ['$event'])\n    onTouchEnd(event: Event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowTouchEnd(event);\n        }\n    }\n\n    @HostListener('keydown.arrowdown', ['$event'])\n    onArrowDownKeyDown(event: KeyboardEvent) {\n        if (!this.isEnabled()) {\n            return;\n        }\n\n        const row = <HTMLTableRowElement>event.currentTarget;\n        const nextRow = this.findNextSelectableRow(row);\n\n        if (nextRow) {\n            nextRow.focus();\n        }\n\n        event.preventDefault();\n    }\n\n    @HostListener('keydown.arrowup', ['$event'])\n    onArrowUpKeyDown(event: KeyboardEvent) {\n        if (!this.isEnabled()) {\n            return;\n        }\n\n        const row = <HTMLTableRowElement>event.currentTarget;\n        const prevRow = this.findPrevSelectableRow(row);\n\n        if (prevRow) {\n            prevRow.focus();\n        }\n\n        event.preventDefault();\n    }\n\n    @HostListener('keydown.enter', ['$event'])\n    @HostListener('keydown.shift.enter', ['$event'])\n    @HostListener('keydown.meta.enter', ['$event'])\n    onEnterKeyDown(event: KeyboardEvent) {\n        if (!this.isEnabled()) {\n            return;\n        }\n\n        this.dt.handleRowClick({\n            originalEvent: event,\n            rowData: this.data,\n            rowIndex: this.index\n        });\n    }\n\n    findNextSelectableRow(row: HTMLTableRowElement): HTMLTableRowElement {\n        let nextRow = <HTMLTableRowElement> row.nextElementSibling;\n        if (nextRow) {\n            if (DomHandler.hasClass(nextRow, 'p-selectable-row'))\n                return nextRow;\n            else\n                return this.findNextSelectableRow(nextRow);\n        }\n        else {\n            return null;\n        }\n    }\n\n    findPrevSelectableRow(row: HTMLTableRowElement): HTMLTableRowElement {\n        let prevRow = <HTMLTableRowElement> row.previousElementSibling;\n        if (prevRow) {\n            if (DomHandler.hasClass(prevRow, 'p-selectable-row'))\n                return prevRow;\n            else\n                return this.findPrevSelectableRow(prevRow);\n        }\n        else {\n            return null;\n        }\n    }\n\n    isEnabled() {\n        return this.pSelectableRowDisabled !== true;\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n\n@Directive({\n    selector: '[pSelectableRowDblClick]',\n    host: {\n        '[class.p-selectable-row]': 'isEnabled()',\n        '[class.p-highlight]': 'selected'\n    }\n})\nexport class SelectableRowDblClick implements OnInit, OnDestroy {\n\n    @Input(\"pSelectableRowDblClick\") data: any;\n\n    @Input(\"pSelectableRowIndex\") index: number;\n\n    @Input() pSelectableRowDisabled: boolean;\n\n    selected: boolean;\n\n    subscription: Subscription;\n\n    constructor(public dt: Table, public tableService: TableService) {\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n                this.selected = this.dt.isSelected(this.data);\n            });\n        }\n    }\n\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.selected = this.dt.isSelected(this.data);\n        }\n    }\n\n    @HostListener('dblclick', ['$event'])\n    onClick(event: Event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n        }\n    }\n\n    isEnabled() {\n        return this.pSelectableRowDisabled !== true;\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n\n@Directive({\n    selector: '[pContextMenuRow]',\n    host: {\n        '[class.p-highlight-contextmenu]': 'selected',\n        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n    }\n})\nexport class ContextMenuRow {\n\n    @Input(\"pContextMenuRow\") data: any;\n\n    @Input(\"pContextMenuRowIndex\") index: number;\n\n    @Input() pContextMenuRowDisabled: boolean;\n\n    selected: boolean;\n\n    subscription: Subscription;\n\n    constructor(public dt: Table, public tableService: TableService, private el: ElementRef) {\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.contextMenuSource$.subscribe((data) => {\n                this.selected = this.dt.equals(this.data, data);\n            });\n        }\n    }\n\n    @HostListener('contextmenu', ['$event'])\n    onContextMenu(event: Event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowRightClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n\n            this.el.nativeElement.focus();\n            event.preventDefault();\n        }\n    }\n\n    isEnabled() {\n        return this.pContextMenuRowDisabled !== true;\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n\n@Directive({\n    selector: '[pRowToggler]'\n})\nexport class RowToggler {\n\n    @Input('pRowToggler') data: any;\n\n    @Input() pRowTogglerDisabled: boolean;\n\n    constructor(public dt: Table) { }\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        if (this.isEnabled()) {\n            this.dt.toggleRow(this.data, event);\n            event.preventDefault();\n        }\n    }\n\n    isEnabled() {\n        return this.pRowTogglerDisabled !== true;\n    }\n}\n\n@Directive({\n    selector: '[pResizableColumn]'\n})\nexport class ResizableColumn implements AfterViewInit, OnDestroy {\n\n    @Input() pResizableColumnDisabled: boolean;\n\n    resizer: HTMLSpanElement;\n\n    resizerMouseDownListener: any;\n\n    documentMouseMoveListener: any;\n\n    documentMouseUpListener: any;\n\n    constructor(public dt: Table, public el: ElementRef, public zone: NgZone) { }\n\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            DomHandler.addClass(this.el.nativeElement, 'p-resizable-column');\n            this.resizer = document.createElement('span');\n            this.resizer.className = 'p-column-resizer';\n            this.el.nativeElement.appendChild(this.resizer);\n\n            this.zone.runOutsideAngular(() => {\n                this.resizerMouseDownListener = this.onMouseDown.bind(this);\n                this.resizer.addEventListener('mousedown', this.resizerMouseDownListener);\n            });\n        }\n    }\n\n    bindDocumentEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.documentMouseMoveListener = this.onDocumentMouseMove.bind(this);\n            document.addEventListener('mousemove', this.documentMouseMoveListener);\n\n            this.documentMouseUpListener = this.onDocumentMouseUp.bind(this);\n            document.addEventListener('mouseup', this.documentMouseUpListener);\n        });\n    }\n\n    unbindDocumentEvents() {\n        if (this.documentMouseMoveListener) {\n            document.removeEventListener('mousemove', this.documentMouseMoveListener);\n            this.documentMouseMoveListener = null;\n        }\n\n        if (this.documentMouseUpListener) {\n            document.removeEventListener('mouseup', this.documentMouseUpListener);\n            this.documentMouseUpListener = null;\n        }\n    }\n\n    onMouseDown(event: MouseEvent) {\n        if (event.which === 1) {\n            this.dt.onColumnResizeBegin(event);\n            this.bindDocumentEvents();\n        }\n    }\n\n    onDocumentMouseMove(event: MouseEvent) {\n        this.dt.onColumnResize(event);\n    }\n\n    onDocumentMouseUp(event: MouseEvent) {\n        this.dt.onColumnResizeEnd(event, this.el.nativeElement);\n        this.unbindDocumentEvents();\n    }\n\n    isEnabled() {\n        return this.pResizableColumnDisabled !== true;\n    }\n\n    ngOnDestroy() {\n        if (this.resizerMouseDownListener) {\n            this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\n        }\n\n        this.unbindDocumentEvents();\n    }\n}\n\n@Directive({\n    selector: '[pReorderableColumn]'\n})\nexport class ReorderableColumn implements AfterViewInit, OnDestroy {\n\n    @Input() pReorderableColumnDisabled: boolean;\n\n    dragStartListener: any;\n\n    dragOverListener: any;\n\n    dragEnterListener: any;\n\n    dragLeaveListener: any;\n\n    mouseDownListener: any;\n\n    constructor(public dt: Table, public el: ElementRef, public zone: NgZone) { }\n\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            this.bindEvents();\n        }\n    }\n\n    bindEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.mouseDownListener = this.onMouseDown.bind(this);\n            this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n\n            this.dragStartListener = this.onDragStart.bind(this);\n            this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\n\n            this.dragOverListener = this.onDragEnter.bind(this);\n            this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n\n            this.dragEnterListener = this.onDragEnter.bind(this);\n            this.el.nativeElement.addEventListener('dragenter', this.dragEnterListener);\n\n            this.dragLeaveListener = this.onDragLeave.bind(this);\n            this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\n        });\n    }\n\n    unbindEvents() {\n        if (this.mouseDownListener) {\n            document.removeEventListener('mousedown', this.mouseDownListener);\n            this.mouseDownListener = null;\n        }\n\n        if (this.dragOverListener) {\n            document.removeEventListener('dragover', this.dragOverListener);\n            this.dragOverListener = null;\n        }\n\n        if (this.dragEnterListener) {\n            document.removeEventListener('dragenter', this.dragEnterListener);\n            this.dragEnterListener = null;\n        }\n\n        if (this.dragEnterListener) {\n            document.removeEventListener('dragenter', this.dragEnterListener);\n            this.dragEnterListener = null;\n        }\n\n        if (this.dragLeaveListener) {\n            document.removeEventListener('dragleave', this.dragLeaveListener);\n            this.dragLeaveListener = null;\n        }\n    }\n\n    onMouseDown(event) {\n        if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || DomHandler.hasClass(event.target, 'p-column-resizer'))\n            this.el.nativeElement.draggable = false;\n        else\n            this.el.nativeElement.draggable = true;\n    }\n\n    onDragStart(event) {\n        this.dt.onColumnDragStart(event, this.el.nativeElement);\n    }\n\n    onDragOver(event) {\n        event.preventDefault();\n    }\n\n    onDragEnter(event) {\n        this.dt.onColumnDragEnter(event, this.el.nativeElement);\n    }\n\n    onDragLeave(event) {\n        this.dt.onColumnDragLeave(event);\n    }\n\n    @HostListener('drop', ['$event'])\n    onDrop(event) {\n        if (this.isEnabled()) {\n            this.dt.onColumnDrop(event, this.el.nativeElement);\n        }\n    }\n\n    isEnabled() {\n        return this.pReorderableColumnDisabled !== true;\n    }\n\n    ngOnDestroy() {\n        this.unbindEvents();\n    }\n\n}\n\n@Directive({\n    selector: '[pEditableColumn]'\n})\nexport class EditableColumn implements AfterViewInit {\n\n    @Input(\"pEditableColumn\") data: any;\n\n    @Input(\"pEditableColumnField\") field: any;\n\n    @Input(\"pEditableColumnRowIndex\") rowIndex: number;\n\n    @Input() pEditableColumnDisabled: boolean;\n\n    @Input() pFocusCellSelector: string;\n\n    constructor(public dt: Table, public el: ElementRef, public zone: NgZone) {}\n\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            DomHandler.addClass(this.el.nativeElement, 'p-editable-column');\n        }\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: MouseEvent) {\n        if (this.isEnabled()) {\n            this.dt.editingCellClick = true;\n\n            if (this.dt.editingCell) {\n                if (this.dt.editingCell !== this.el.nativeElement) {\n                    if (!this.dt.isEditingCellValid()) {\n                        return;\n                    }\n\n                    this.closeEditingCell(true, event);\n                    this.openCell();\n                }\n            }\n            else {\n                this.openCell();\n            }\n        }\n    }\n\n    openCell() {\n        this.dt.updateEditingCell(this.el.nativeElement, this.data, this.field, this.rowIndex);\n        DomHandler.addClass(this.el.nativeElement, 'p-cell-editing');\n        this.dt.onEditInit.emit({field: this.field, data: this.data, index: this.rowIndex});\n        this.zone.runOutsideAngular(() => {\n            setTimeout(() => {\n                let focusCellSelector = this.pFocusCellSelector || 'input, textarea, select';\n                let focusableElement = DomHandler.findSingle(this.el.nativeElement, focusCellSelector);\n\n                if (focusableElement) {\n                    focusableElement.focus();\n                }\n            }, 50);\n        });\n    }\n\n    closeEditingCell(completed, event) {\n        if (completed)\n            this.dt.onEditComplete.emit({field: this.dt.editingCellField, data: this.dt.editingCellData, originalEvent: event, index: this.dt.editingCellRowIndex});\n        else\n            this.dt.onEditCancel.emit({field: this.dt.editingCellField, data: this.dt.editingCellData, originalEvent: event, index: this.dt.editingCellRowIndex});\n\n        DomHandler.removeClass(this.dt.editingCell, 'p-cell-editing');\n        this.dt.editingCell = null;\n        this.dt.editingCellData = null;\n        this.dt.editingCellField = null;\n        this.dt.unbindDocumentEditListener();\n    }\n\n    @HostListener('keydown.enter', ['$event'])\n    onEnterKeyDown(event: KeyboardEvent) {\n        if (this.isEnabled()) {\n            if (this.dt.isEditingCellValid()) {\n                this.closeEditingCell(true, event);\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    @HostListener('keydown.escape', ['$event'])\n    onEscapeKeyDown(event: KeyboardEvent) {\n        if (this.isEnabled()) {\n            if (this.dt.isEditingCellValid()) {\n                this.closeEditingCell(false, event);\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    @HostListener('keydown.tab', ['$event'])\n    @HostListener('keydown.shift.tab', ['$event'])\n    @HostListener('keydown.meta.tab', ['$event'])\n    onShiftKeyDown(event: KeyboardEvent) {\n        if (this.isEnabled()) {\n            if (event.shiftKey)\n                this.moveToPreviousCell(event);\n            else{\n                this.moveToNextCell(event);\n            }\n        }\n    }\n\n    findCell(element) {\n        if (element) {\n            let cell = element;\n            while (cell && !DomHandler.hasClass(cell, 'p-cell-editing')) {\n                cell = cell.parentElement;\n            }\n\n            return cell;\n        }\n        else {\n            return null;\n        }\n    }\n\n    moveToPreviousCell(event: KeyboardEvent) {\n        let currentCell = this.findCell(event.target);\n        if (currentCell) {\n            let targetCell = this.findPreviousEditableColumn(currentCell);\n\n            if (targetCell) {\n                if (this.dt.isEditingCellValid()) {\n                    this.closeEditingCell(true, event);\n                }\n\n                DomHandler.invokeElementMethod(event.target, 'blur');\n                DomHandler.invokeElementMethod(targetCell, 'click');\n                event.preventDefault();\n            }\n        }\n    }\n\n    moveToNextCell(event: KeyboardEvent) {\n        let currentCell = this.findCell(event.target);\n        if (currentCell) {\n            let targetCell = this.findNextEditableColumn(currentCell);\n\n            if (targetCell) {\n                if (this.dt.isEditingCellValid()) {\n                    this.closeEditingCell(true, event);\n                }\n\n                DomHandler.invokeElementMethod(event.target, 'blur');\n                DomHandler.invokeElementMethod(targetCell, 'click');\n                event.preventDefault();\n            }\n        }\n    }\n\n    findPreviousEditableColumn(cell: Element) {\n        let prevCell = cell.previousElementSibling;\n\n        if (!prevCell) {\n            let previousRow = cell.parentElement.previousElementSibling;\n            if (previousRow) {\n                prevCell = previousRow.lastElementChild;\n            }\n        }\n\n        if (prevCell) {\n            if (DomHandler.hasClass(prevCell, 'p-editable-column'))\n                return prevCell;\n            else\n                return this.findPreviousEditableColumn(prevCell);\n        }\n        else {\n            return null;\n        }\n    }\n\n    findNextEditableColumn(cell: Element) {\n        let nextCell = cell.nextElementSibling;\n\n        if (!nextCell) {\n            let nextRow = cell.parentElement.nextElementSibling;\n            if (nextRow) {\n                nextCell = nextRow.firstElementChild;\n            }\n        }\n\n        if (nextCell) {\n            if (DomHandler.hasClass(nextCell, 'p-editable-column'))\n                return nextCell;\n            else\n                return this.findNextEditableColumn(nextCell);\n        }\n        else {\n            return null;\n        }\n    }\n\n    isEnabled() {\n        return this.pEditableColumnDisabled !== true;\n    }\n\n}\n\n@Directive({\n    selector: '[pEditableRow]'\n})\nexport class EditableRow {\n\n    @Input(\"pEditableRow\") data: any;\n\n    @Input() pEditableRowDisabled: boolean;\n\n    constructor(public el: ElementRef) {}\n\n    isEnabled() {\n        return this.pEditableRowDisabled !== true;\n    }\n\n}\n\n@Directive({\n    selector: '[pInitEditableRow]'\n})\nexport class InitEditableRow {\n\n    constructor(public dt: Table, public editableRow: EditableRow) {}\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        this.dt.initRowEdit(this.editableRow.data);\n        event.preventDefault();\n    }\n\n}\n\n@Directive({\n    selector: '[pSaveEditableRow]'\n})\nexport class SaveEditableRow {\n\n    constructor(public dt: Table, public editableRow: EditableRow) {}\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        this.dt.saveRowEdit(this.editableRow.data, this.editableRow.el.nativeElement);\n        event.preventDefault();\n    }\n}\n\n@Directive({\n    selector: '[pCancelEditableRow]'\n})\nexport class CancelEditableRow {\n\n    constructor(public dt: Table, public editableRow: EditableRow) {}\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        this.dt.cancelRowEdit(this.editableRow.data);\n        event.preventDefault();\n    }\n}\n\n@Component({\n    selector: 'p-cellEditor',\n    template: `\n        <ng-container *ngIf=\"editing\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!editing\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `,\n    encapsulation: ViewEncapsulation.None\n})\nexport class CellEditor implements AfterContentInit {\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<PrimeTemplate>;\n\n    inputTemplate: TemplateRef<any>;\n\n    outputTemplate: TemplateRef<any>;\n\n    constructor(public dt: Table, @Optional() public editableColumn: EditableColumn, @Optional() public editableRow: EditableRow) { }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'input':\n                    this.inputTemplate = item.template;\n                    break;\n\n                case 'output':\n                    this.outputTemplate = item.template;\n                    break;\n            }\n        });\n    }\n\n    get editing(): boolean {\n        return (this.dt.editingCell && this.editableColumn && this.dt.editingCell === this.editableColumn.el.nativeElement) ||\n                (this.editableRow && this.dt.editMode === 'row' && this.dt.isRowEditing(this.editableRow.data));\n    }\n\n}\n\n@Component({\n    selector: 'p-tableRadioButton',\n    template: `\n        <div class=\"p-radiobutton p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"radio\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-radiobutton-box p-component':true,\n                'p-highlight':checked, 'p-disabled':disabled}\" role=\"radio\" [attr.aria-checked]=\"checked\">\n                <div class=\"p-radiobutton-icon\"></div>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class TableRadioButton  {\n\n    @Input() disabled: boolean;\n\n    @Input() value: any;\n\n    @Input() index: number;\n\n    @Input() inputId: string;\n\n    @Input() name: string;\n\n    @Input() ariaLabel: string;\n\n    @ViewChild('box') boxViewChild: ElementRef;\n\n    checked: boolean;\n\n    subscription: Subscription;\n\n    constructor(public dt: Table, public tableService: TableService, public cd: ChangeDetectorRef) {\n        this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.dt.isSelected(this.value);\n            this.cd.markForCheck();\n        });\n    }\n\n    ngOnInit() {\n        this.checked = this.dt.isSelected(this.value);\n    }\n\n    onClick(event: Event) {\n        if (!this.disabled) {\n            this.dt.toggleRowWithRadio({\n                originalEvent: event,\n                rowIndex: this.index\n            }, this.value);\n        }\n        DomHandler.clearSelection();\n    }\n\n    onFocus() {\n        DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n\n    onBlur() {\n        DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n\n@Component({\n    selector: 'p-tableCheckbox',\n    template: `\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"disabled\"\n                [attr.required]=\"required\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box p-component':true,\n                'p-highlight':checked, 'p-disabled':disabled}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class TableCheckbox  {\n\n    @Input() disabled: boolean;\n\n    @Input() value: any;\n\n    @Input() index: number;\n\n    @Input() inputId: string;\n\n    @Input() name: string;\n\n    @Input() required: boolean;\n\n    @Input() ariaLabel: string;\n\n    @ViewChild('box') boxViewChild: ElementRef;\n\n    checked: boolean;\n\n    subscription: Subscription;\n\n    constructor(public dt: Table, public tableService: TableService, public cd: ChangeDetectorRef) {\n        this.subscription = this.dt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.dt.isSelected(this.value);\n            this.cd.markForCheck();\n        });\n    }\n\n    ngOnInit() {\n        this.checked = this.dt.isSelected(this.value);\n    }\n\n    onClick(event: Event) {\n        if (!this.disabled) {\n            this.dt.toggleRowWithCheckbox({\n                originalEvent: event,\n                rowIndex: this.index\n            }, this.value);\n        }\n        DomHandler.clearSelection();\n    }\n\n    onFocus() {\n        DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n\n    onBlur() {\n        DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n}\n\n@Component({\n    selector: 'p-tableHeaderCheckbox',\n    template: `\n        <div class=\"p-checkbox p-component\" (click)=\"onClick($event)\">\n            <div class=\"p-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"\n                [disabled]=\"isDisabled()\" [attr.aria-label]=\"ariaLabel\">\n            </div>\n            <div #box [ngClass]=\"{'p-checkbox-box':true,\n                'p-highlight':checked, 'p-disabled': isDisabled()}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"p-checkbox-icon\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class TableHeaderCheckbox  {\n\n    @ViewChild('box') boxViewChild: ElementRef;\n\n    @Input() disabled: boolean;\n\n    @Input() inputId: string;\n\n    @Input() name: string;\n\n    @Input() ariaLabel: string;\n\n    checked: boolean;\n\n    selectionChangeSubscription: Subscription;\n\n    valueChangeSubscription: Subscription;\n\n    constructor(public dt: Table, public tableService: TableService, public cd: ChangeDetectorRef) {\n        this.valueChangeSubscription = this.dt.tableService.valueSource$.subscribe(() => {\n            this.checked = this.updateCheckedState();\n        });\n\n        this.selectionChangeSubscription = this.dt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.updateCheckedState();\n        });\n    }\n\n    ngOnInit() {\n        this.checked = this.updateCheckedState();\n    }\n\n    onClick(event: Event) {\n        if (!this.disabled) {\n            if (this.dt.value && this.dt.value.length > 0) {\n                this.dt.toggleRowsWithCheckbox(event, !this.checked);\n            }\n        }\n\n        DomHandler.clearSelection();\n    }\n\n    onFocus() {\n        DomHandler.addClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n\n    onBlur() {\n        DomHandler.removeClass(this.boxViewChild.nativeElement, 'p-focus');\n    }\n\n    isDisabled() {\n        return this.disabled || !this.dt.value || !this.dt.value.length;\n    }\n\n    ngOnDestroy() {\n        if (this.selectionChangeSubscription) {\n            this.selectionChangeSubscription.unsubscribe();\n        }\n\n        if (this.valueChangeSubscription) {\n            this.valueChangeSubscription.unsubscribe();\n        }\n    }\n\n    updateCheckedState() {\n        this.cd.markForCheck();\n\n        if (this.dt.filteredValue) {\n            const val = this.dt.filteredValue;\n            return (val && val.length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.isAllFilteredValuesChecked());\n        }\n        else {\n            const val = this.dt.value;\n            return (val && val.length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.dt.selection.length === val.length);\n        }\n    }\n\n    isAllFilteredValuesChecked() {\n        if (!this.dt.filteredValue) {\n            return false;\n        }\n        else {\n            for (let rowData of this.dt.filteredValue) {\n                if (!this.dt.isSelected(rowData)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n}\n\n@Directive({\n    selector: '[pReorderableRowHandle]'\n})\nexport class ReorderableRowHandle implements AfterViewInit {\n\n    @Input(\"pReorderableRowHandle\") index: number;\n\n    constructor(public el: ElementRef) {}\n\n    ngAfterViewInit() {\n        DomHandler.addClass(this.el.nativeElement, 'p-datatable-reorderablerow-handle');\n    }\n}\n\n@Directive({\n    selector: '[pReorderableRow]'\n})\nexport class ReorderableRow implements AfterViewInit {\n\n    @Input(\"pReorderableRow\") index: number;\n\n    @Input() pReorderableRowDisabled: boolean;\n\n    mouseDownListener: any;\n\n    dragStartListener: any;\n\n    dragEndListener: any;\n\n    dragOverListener: any;\n\n    dragLeaveListener: any;\n\n    dropListener: any;\n\n    constructor(public dt: Table, public el: ElementRef, public zone: NgZone) {}\n\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            this.el.nativeElement.droppable = true;\n            this.bindEvents();\n        }\n    }\n\n    bindEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.mouseDownListener = this.onMouseDown.bind(this);\n            this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n\n            this.dragStartListener = this.onDragStart.bind(this);\n            this.el.nativeElement.addEventListener('dragstart', this.dragStartListener);\n\n            this.dragEndListener = this.onDragEnd.bind(this);\n            this.el.nativeElement.addEventListener('dragend', this.dragEndListener);\n\n            this.dragOverListener = this.onDragOver.bind(this);\n            this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n\n            this.dragLeaveListener = this.onDragLeave.bind(this);\n            this.el.nativeElement.addEventListener('dragleave', this.dragLeaveListener);\n        });\n    }\n\n    unbindEvents() {\n        if (this.mouseDownListener) {\n            document.removeEventListener('mousedown', this.mouseDownListener);\n            this.mouseDownListener = null;\n        }\n\n        if (this.dragStartListener) {\n            document.removeEventListener('dragstart', this.dragStartListener);\n            this.dragStartListener = null;\n        }\n\n        if (this.dragEndListener) {\n            document.removeEventListener('dragend', this.dragEndListener);\n            this.dragEndListener = null;\n        }\n\n        if (this.dragOverListener) {\n            document.removeEventListener('dragover', this.dragOverListener);\n            this.dragOverListener = null;\n        }\n\n        if (this.dragLeaveListener) {\n            document.removeEventListener('dragleave', this.dragLeaveListener);\n            this.dragLeaveListener = null;\n        }\n    }\n\n    onMouseDown(event) {\n        if (DomHandler.hasClass(event.target, 'p-datatable-reorderablerow-handle'))\n            this.el.nativeElement.draggable = true;\n        else\n            this.el.nativeElement.draggable = false;\n    }\n\n    onDragStart(event) {\n        this.dt.onRowDragStart(event, this.index);\n    }\n\n    onDragEnd(event) {\n        this.dt.onRowDragEnd(event);\n        this.el.nativeElement.draggable = false;\n    }\n\n    onDragOver(event) {\n        this.dt.onRowDragOver(event, this.index, this.el.nativeElement);\n        event.preventDefault();\n    }\n\n    onDragLeave(event) {\n        this.dt.onRowDragLeave(event, this.el.nativeElement);\n    }\n\n    isEnabled() {\n        return this.pReorderableRowDisabled !== true;\n    }\n\n    @HostListener('drop', ['$event'])\n    onDrop(event) {\n        if (this.isEnabled() && this.dt.rowDragging) {\n            this.dt.onRowDrop(event, this.el.nativeElement);\n        }\n\n        event.preventDefault()\n    }\n}\n\n@Component({\n    selector: 'p-columnFilterFormElement',\n    template: `\n        <ng-container *ngIf=\"filterTemplate; else builtInElement\">\n            <ng-container *ngTemplateOutlet=\"filterTemplate; context: {$implicit: filterConstraint.value, filterCallback: filterCallback}\"></ng-container>\n        </ng-container>\n        <ng-template #builtInElement>\n            <ng-container [ngSwitch]=\"type\">\n                <input *ngSwitchCase=\"'text'\" type=\"text\" pInputText [value]=\"filterConstraint?.value\" (input)=\"onModelChange($event.target.value)\"\n                    (keydown.enter)=\"onTextInputEnterKeyDown($event)\" [attr.placeholder]=\"placeholder\">\n                <p-inputNumber *ngSwitchCase=\"'numeric'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\" (onKeyDown)=\"onNumericInputKeyDown($event)\" [showButtons]=\"true\" [attr.placeholder]=\"placeholder\"\n                    [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                    [mode]=\"currency ? 'currency' : 'decimal'\" [locale]=\"locale\" [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-inputNumber>\n                <p-triStateCheckbox *ngSwitchCase=\"'boolean'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-triStateCheckbox>\n                <p-calendar *ngSwitchCase=\"'date'\" [ngModel]=\"filterConstraint?.value\" (ngModelChange)=\"onModelChange($event)\"></p-calendar>\n            </ng-container>\n        </ng-template>\n    `,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ColumnFilterFormElement implements OnInit {\n    \n    @Input() field: string;\n\n    @Input() type: string;\n\n    @Input() filterConstraint: FilterMetadata;\n\n    @Input() filterTemplate: TemplateRef<any>;\n\n    @Input() placeholder: string;\n\n    @Input() minFractionDigits: number\n    \n    @Input() maxFractionDigits: number;\n\n    @Input() prefix: string;\n\n    @Input() suffix: string;\n\n    @Input() locale: string;\n\n    @Input() localeMatcher: string;\n\n    @Input() currency: string;\n\n    @Input() currencyDisplay: string;\n\n    @Input() useGrouping: boolean = true;\n\n    filterCallback: Function;\n\n    constructor(public dt: Table) {}\n\n    ngOnInit() {\n        this.filterCallback = value => {\n            this.filterConstraint.value = value;\n            this.dt._filter();\n        };\n    }\n\n    onModelChange(value: any) {\n        this.filterConstraint.value = value;\n\n        if (this.type === 'boolean' || value === '') {\n            this.dt._filter();\n        }\n    }\n\n    onTextInputEnterKeyDown(event: KeyboardEvent) {\n        this.dt._filter();\n        event.preventDefault();\n    }\n\n    onNumericInputKeyDown(event: KeyboardEvent) {\n        if (event.key === 'Enter') {\n            this.dt._filter();\n            event.preventDefault();\n        }\n    }\n}\n\n@Component({\n    selector: 'p-columnFilter',\n    template: `\n        <div class=\"p-column-filter\" [ngClass]=\"{'p-column-filter-row': display === 'row', 'p-column-filter-menu': display === 'menu'}\">\n            <p-columnFilterFormElement *ngIf=\"display === 'row'\" class=\"p-fluid\" [type]=\"type\" [field]=\"field\" [filterConstraint]=\"dt.filters[field]\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\" [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                                    [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n            <button #icon *ngIf=\"showMenuButton\" type=\"button\" class=\"p-column-filter-menu-button p-link\" aria-haspopup=\"true\" [attr.aria-expanded]=\"overlayVisible\"\n                [ngClass]=\"{'p-column-filter-menu-button-open': overlayVisible, 'p-column-filter-menu-button-active': hasFilter()}\" \n                (click)=\"toggleMenu()\" (keydown)=\"onToggleButtonKeyDown($event)\"><span class=\"pi pi-filter-icon pi-filter\"></span></button>\n            <button #icon *ngIf=\"showMenuButton && display === 'row'\" [ngClass]=\"{'p-hidden-space': !hasRowFilter()}\" type=\"button\" class=\"p-column-filter-clear-button p-link\" (click)=\"clearFilter()\"><span class=\"pi pi-filter-slash\"></span></button>\n            <div *ngIf=\"showMenu && overlayVisible\" [ngClass]=\"{'p-column-filter-overlay p-component p-fluid': true, 'p-column-filter-overlay-menu': display === 'menu'}\" \n                [@overlayAnimation]=\"'visible'\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (keydown.escape)=\"onEscape()\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: field}\"></ng-container>\n                <ul *ngIf=\"display === 'row'; else menu\" class=\"p-column-filter-row-items\">\n                    <li class=\"p-column-filter-row-item\" *ngFor=\"let matchMode of matchModes; let i = index;\" (click)=\"onRowMatchModeChange(matchMode.value)\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"this.onRowMatchModeChange(matchMode.value)\"\n                        [ngClass]=\"{'p-highlight': isRowMatchModeSelected(matchMode.value)}\" [attr.tabindex]=\"i === 0 ? '0' : null\">{{matchMode.label}}</li>\n                    <li class=\"p-column-filter-separator\"></li>\n                    <li class=\"p-column-filter-row-item\" (click)=\"onRowClearItemClick()\" (keydown)=\"onRowMatchModeKeyDown($event)\" (keydown.enter)=\"onRowClearItemClick()\">{{noFilterLabel}}</li>\n                </ul>\n                <ng-template #menu>\n                    <div class=\"p-column-filter-operator\" *ngIf=\"isShowOperator\">\n                        <p-dropdown [options]=\"operatorOptions\" [ngModel]=\"operator\" (ngModelChange)=\"onOperatorChange($event)\" styleClass=\"p-column-filter-operator-dropdown\"></p-dropdown>\n                    </div>\n                    <div class=\"p-column-filter-constraints\">\n                        <div *ngFor=\"let fieldConstraint of fieldConstraints; let i = index\" class=\"p-column-filter-constraint\">\n                            <p-dropdown  *ngIf=\"showMatchModes && matchModes\" [options]=\"matchModes\" [ngModel]=\"fieldConstraint.matchMode\" (ngModelChange)=\"onMenuMatchModeChange($event, fieldConstraint)\" styleClass=\"p-column-filter-matchmode-dropdown\"></p-dropdown>\n                            <p-columnFilterFormElement [type]=\"type\" [field]=\"field\" [filterConstraint]=\"fieldConstraint\" [filterTemplate]=\"filterTemplate\" [placeholder]=\"placeholder\"\n                            [minFractionDigits]=\"minFractionDigits\" [maxFractionDigits]=\"maxFractionDigits\" [prefix]=\"prefix\" [suffix]=\"suffix\"\n                            [locale]=\"locale\"  [localeMatcher]=\"localeMatcher\" [currency]=\"currency\" [currencyDisplay]=\"currencyDisplay\" [useGrouping]=\"useGrouping\"></p-columnFilterFormElement>\n                            <button *ngIf=\"showRemoveIcon\" type=\"button\" pButton icon=\"pi pi-trash\" class=\"p-column-filter-remove-button p-button-text p-button-danger p-button-sm\" (click)=\"removeConstraint(fieldConstraint)\" pRipple [label]=\"removeRuleButtonLabel\"></button>\n                        </div>\n                    </div>\n                    <div class=\"p-column-filter-add-rule\" *ngIf=\"isShowAddConstraint\">\n                        <button type=\"button\" pButton [label]=\"addRuleButtonLabel\" icon=\"pi pi-plus\" class=\"p-column-filter-add-button p-button-text p-button-sm\" (click)=\"addConstraint()\" pRipple></button>\n                    </div>\n                    <div class=\"p-column-filter-buttonbar\">\n                        <button type=\"button\" pButton class=\"p-button-outlined\" (click)=\"clearFilter()\" [label]=\"clearButtonLabel\" pRipple></button>\n                        <button type=\"button\" pButton (click)=\"applyFilter()\" [label]=\"applyButtonLabel\" pRipple></button>\n                    </div>\n                </ng-template>\n                <ng-container *ngTemplateOutlet=\"footerTemplate; context: {$implicit: field}\"></ng-container>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('overlayAnimation', [\n            transition(':enter', [\n                style({opacity: 0, transform: 'scaleY(0.8)'}),\n                animate('.12s cubic-bezier(0, 0, 0.2, 1)')\n            ]),\n            transition(':leave', [\n                animate('.1s linear', style({ opacity: 0 }))\n            ])\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ColumnFilter implements AfterContentInit {\n\n    @Input() field: string;\n\n    @Input() type: string = 'text';\n\n    @Input() display: string = 'row';\n\n    @Input() showMenu: boolean = true;\n\n    @Input() matchMode: string;\n\n    @Input() operator: string = FilterOperator.AND;\n\n    @Input() showOperator: boolean = true;\n\n    @Input() showClearButton: boolean = true;\n\n    @Input() showApplyButton: boolean = true;\n\n    @Input() showMatchModes: boolean = true;\n\n    @Input() showAddButton: boolean = true;\n\n    @Input() placeholder: string;\n\n    @Input() matchModeOptions: SelectItem[];\n\n    @Input() maxConstraints: number = 2;\n\n    @Input() minFractionDigits: number;\n    \n    @Input() maxFractionDigits: number;\n\n    @Input() prefix: string;\n\n    @Input() suffix: string;\n\n    @Input() locale: string;\n\n    @Input() localeMatcher: string;\n\n    @Input() currency: string;\n\n    @Input() currencyDisplay: string;\n\n    @Input() useGrouping: boolean = true;\n\n    @ViewChild('icon') icon: ElementRef;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    constructor(public el: ElementRef, public dt: Table, public renderer: Renderer2, public config: PrimeNGConfig) {}\n\n    headerTemplate: TemplateRef<any>;\n\n    filterTemplate: TemplateRef<any>;\n\n    footerTemplate: TemplateRef<any>;\n\n    operatorOptions: any[];\n\n    overlayVisible: boolean;\n\n    overlay: HTMLElement;\n\n    scrollHandler: any;\n\n    documentClickListener: any;\n\n    documentResizeListener: any;\n\n    matchModes: SelectItem[];\n\n    translationSubscription: Subscription;\n\n    ngOnInit() {\n        if (!this.dt.filters[this.field]) {\n            this.initFieldFilterConstraint();\n        }\n\n        this.translationSubscription = this.config.translationObserver.subscribe(() => {\n            this.generateMatchModeOptions();\n            this.generateOperatorOptions();\n        });\n\n        this.generateMatchModeOptions();\n        this.generateOperatorOptions();\n    }\n\n    generateMatchModeOptions() {\n        this.matchModes = this.matchModeOptions || \n        this.config.filterMatchModeOptions[this.type]?.map(key => {\n            return {label: this.config.getTranslation(key), value: key}\n        });\n    }\n\n    generateOperatorOptions() {\n        this.operatorOptions = [\n            {label: this.config.getTranslation(TranslationKeys.MATCH_ALL), value: FilterOperator.AND},\n            {label: this.config.getTranslation(TranslationKeys.MATCH_ANY), value: FilterOperator.OR}\n        ];\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                break;\n\n                case 'filter':\n                    this.filterTemplate = item.template;\n                break;\n                \n                case 'footer':\n                    this.footerTemplate = item.template;\n                break;\n\n                default:\n                    this.filterTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    initFieldFilterConstraint() {\n        let defaultMatchMode = this.getDefaultMatchMode();\n        this.dt.filters[this.field] = this.display == 'row' ? {value: null, matchMode: defaultMatchMode} : [{value: null, matchMode: defaultMatchMode, operator: this.operator}];\n    }\n\n    onMenuMatchModeChange(value: any, filterMeta: FilterMetadata) {\n        filterMeta.matchMode = value;\n\n        if (!this.showApplyButton) {\n            this.dt._filter();\n        }\n    }\n\n    onRowMatchModeChange(matchMode: string) {\n        (<FilterMetadata> this.dt.filters[this.field]).matchMode = matchMode;\n        this.dt._filter();\n        this.hide();\n    }\n    \n    onRowMatchModeKeyDown(event: KeyboardEvent) {\n        let item = <HTMLLIElement> event.target;\n\n        switch(event.key) {            \n            case 'ArrowDown':\n                var nextItem = this.findNextItem(item);\n                if (nextItem) {\n                    item.removeAttribute('tabindex');\n                    nextItem.tabIndex = '0';\n                    nextItem.focus();\n                }\n\n                event.preventDefault();\n            break;\n\n            case 'ArrowUp':\n                var prevItem = this.findPrevItem(item);\n                if (prevItem) {\n                    item.removeAttribute('tabindex');\n                    prevItem.tabIndex = '0';\n                    prevItem.focus();\n                }\n\n                event.preventDefault();\n            break;\n        }\n    }\n\n    onRowClearItemClick() {\n        this.clearFilter();\n        this.hide();\n    }\n\n    isRowMatchModeSelected(matchMode: string) {\n        return (<FilterMetadata> this.dt.filters[this.field]).matchMode === matchMode;\n    }\n\n    addConstraint() {\n        (<FilterMetadata[]> this.dt.filters[this.field]).push({value: null, matchMode: this.getDefaultMatchMode(), operator: this.getDefaultOperator()});\n        this.dt._filter();\n    }\n\n    removeConstraint(filterMeta: FilterMetadata) {\n        this.dt.filters[this.field] = (<FilterMetadata[]> this.dt.filters[this.field]).filter(meta => meta !== filterMeta);\n        this.dt._filter();\n    }\n\n    onOperatorChange(value) {\n        (<FilterMetadata[]> this.dt.filters[this.field]).forEach(filterMeta => {\n            filterMeta.operator = value;\n        });\n\n        if (!this.showApplyButton) {\n            this.dt._filter();\n        }\n    }\n\n    toggleMenu() {\n        this.overlayVisible = !this.overlayVisible;\n    }\n\n    onToggleButtonKeyDown(event: KeyboardEvent) {\n        switch(event.key) {\n            case 'Escape':\n            case 'Tab':\n                this.overlayVisible = false;\n            break;\n            \n            case 'ArrowDown':\n                if (this.overlayVisible) {\n                    let focusable = DomHandler.getFocusableElements(this.overlay);\n                    if (focusable) {\n                        focusable[0].focus();\n                    }\n                    event.preventDefault();\n                }\n                else if (event.altKey) {\n                    this.overlayVisible = true;\n                    event.preventDefault();\n                }\n            break;\n        }\n    }\n\n    onEscape() {\n        this.overlayVisible = false;\n        this.icon.nativeElement.focus();\n    }\n\n    findNextItem(item: HTMLLIElement) {\n        let nextItem = <HTMLLIElement> item.nextElementSibling;\n\n        if (nextItem)\n            return DomHandler.hasClass(nextItem, 'p-column-filter-separator')  ? this.findNextItem(nextItem) : nextItem;\n        else\n            return item.parentElement.firstElementChild;\n    }\n\n    findPrevItem(item: HTMLLIElement) {\n        let prevItem = <HTMLLIElement> item.previousElementSibling;\n\n        if (prevItem)\n            return DomHandler.hasClass(prevItem, 'p-column-filter-separator')  ? this.findPrevItem(prevItem) : prevItem;\n        else\n        return item.parentElement.lastElementChild;\n    }\n\n    onOverlayAnimationStart(event: AnimationEvent) {\n        switch (event.toState) {\n            case 'visible':\n                this.overlay = event.element;\n                \n                document.body.appendChild(this.overlay);\n                this.overlay.style.zIndex = String(++DomHandler.zindex);\n                DomHandler.absolutePosition(this.overlay, this.icon.nativeElement)\n                this.bindDocumentClickListener();\n                this.bindDocumentResizeListener();\n                this.bindScrollListener();\n            break;\n\n            case 'void':\n                this.onOverlayHide();\n            break;\n        }\n    }\n\n    getDefaultMatchMode(): string {\n        if (this.matchMode) {\n            return this.matchMode;\n        }\n        else {\n            if (this.type === 'text')\n                return FilterMatchMode.STARTS_WITH;\n            else if (this.type === 'numeric')\n                return FilterMatchMode.EQUALS;\n            else if (this.type === 'date')\n                return FilterMatchMode.EQUALS;\n            else\n                return FilterMatchMode.CONTAINS;\n        }\n    }\n\n    getDefaultOperator(): string {\n        return this.dt.filters ? (<FilterMetadata[]> this.dt.filters[this.field])[0].operator: this.operator;\n    }\n\n    hasRowFilter() {\n        return this.dt.filters[this.field] && !this.dt.isFilterBlank((<FilterMetadata>this.dt.filters[this.field]).value);\n    }\n\n    get fieldConstraints(): FilterMetadata[] {\n        return this.dt.filters ? <FilterMetadata[]> this.dt.filters[this.field] : null;\n    }\n\n    get showRemoveIcon(): boolean {\n        return this.fieldConstraints ? this.fieldConstraints.length > 1 : false;\n    }\n\n    get showMenuButton(): boolean {\n        return this.showMenu && (this.display === 'row' ? this.type !== 'boolean': true);\n    }\n\n    get isShowOperator(): boolean {\n        return this.showOperator && this.type !== 'boolean';\n    }\n\n    get isShowAddConstraint(): boolean {\n        return this.showAddButton && this.type !== 'boolean' && (this.fieldConstraints && this.fieldConstraints.length < this.maxConstraints);\n    }\n\n    get applyButtonLabel(): string {\n        return this.config.getTranslation(TranslationKeys.APPLY);\n    }\n\n    get clearButtonLabel(): string {\n        return this.config.getTranslation(TranslationKeys.CLEAR);\n    }\n\n    get addRuleButtonLabel(): string {\n        return this.config.getTranslation(TranslationKeys.ADD_RULE);\n    }\n\n    get removeRuleButtonLabel(): string {\n        return this.config.getTranslation(TranslationKeys.REMOVE_RULE);\n    }\n\n    get noFilterLabel(): string {\n        return this.config.getTranslation(TranslationKeys.NO_FILTER);\n    }\n\n    hasFilter(): boolean {\n        let fieldFilter = this.dt.filters[this.field];\n        if (fieldFilter) {\n            if (Array.isArray(fieldFilter))\n                return !this.dt.isFilterBlank((<FilterMetadata[]> fieldFilter)[0].value); \n            else\n                return !this.dt.isFilterBlank(fieldFilter.value);\n        }\n\n        return false;\n    }\n\n    isOutsideClicked(event): boolean {\n        return !(this.overlay.isSameNode(event.target) || this.overlay.contains(event.target) \n            || this.icon.nativeElement.isSameNode(event.target) || this.icon.nativeElement.contains(event.target)\n            || DomHandler.hasClass(event.target, 'p-column-filter-add-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-add-button')\n            || DomHandler.hasClass(event.target, 'p-column-filter-remove-button') || DomHandler.hasClass(event.target.parentElement, 'p-column-filter-remove-button'));\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n            this.documentClickListener = this.renderer.listen(documentTarget, 'mousedown', event => {\n                if (this.isOutsideClicked(event)) {\n                    this.hide();\n                }\n            });\n        }\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n\n    bindDocumentResizeListener() {\n        this.documentResizeListener = () => this.hide();\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.icon.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n\n        this.scrollHandler.bindScrollListener();\n    }\n\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n\n    hide() {\n        this.overlayVisible = false;\n    }\n\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        this.overlay = null;\n    }\n\n    clearFilter() {\n        this.initFieldFilterConstraint();\n        this.dt._filter();\n    }\n\n    applyFilter() {\n        this.dt._filter();\n        this.hide();\n    }\n\n    ngOnDestroy() {\n        if (this.overlay) {\n            this.el.nativeElement.appendChild(this.overlay);\n            this.onOverlayHide();\n        }\n\n        if (this.translationSubscription) {\n            this.translationSubscription.unsubscribe();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,PaginatorModule,InputTextModule,DropdownModule,ScrollingModule,FormsModule,ButtonModule,SelectButtonModule,CalendarModule,InputNumberModule,TriStateCheckboxModule],\n    exports: [Table,SharedModule,SortableColumn,SelectableRow,RowToggler,ContextMenuRow,ResizableColumn,ReorderableColumn,EditableColumn,CellEditor,SortIcon,\n            TableRadioButton,TableCheckbox,TableHeaderCheckbox,ReorderableRowHandle,ReorderableRow,SelectableRowDblClick,EditableRow,InitEditableRow,SaveEditableRow,CancelEditableRow,ScrollingModule,ColumnFilter],\n    declarations: [Table,SortableColumn,SelectableRow,RowToggler,ContextMenuRow,ResizableColumn,ReorderableColumn,EditableColumn,CellEditor,TableBody,ScrollableView,SortIcon,\n            TableRadioButton,TableCheckbox,TableHeaderCheckbox,ReorderableRowHandle,ReorderableRow,SelectableRowDblClick,EditableRow,InitEditableRow,SaveEditableRow,CancelEditableRow,ColumnFilter,ColumnFilterFormElement]\n})\nexport class TableModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}