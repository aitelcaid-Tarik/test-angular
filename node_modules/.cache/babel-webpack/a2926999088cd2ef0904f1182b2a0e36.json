{"ast":null,"code":"import _toConsumableArray from \"/Users/admin/Desktop/primeng-tablecolresize-demo-axsbn1/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/admin/Desktop/primeng-tablecolresize-demo-axsbn1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/primeng-tablecolresize-demo-axsbn1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'primeng/inputtext';\nimport * as ɵngcc3 from 'primeng/button';\nvar _c0 = [\"input\"];\n\nvar _c1 = function _c1() {\n  return {\n    \"p-inputnumber-button p-inputnumber-button-up\": true\n  };\n};\n\nvar _c2 = function _c2() {\n  return {\n    \"p-inputnumber-button p-inputnumber-button-down\": true\n  };\n};\n\nfunction InputNumber_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 6);\n    ɵngcc0.ɵɵlistener(\"mousedown\", function InputNumber_span_3_Template_button_mousedown_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onUpButtonMouseDown($event);\n    })(\"mouseup\", function InputNumber_span_3_Template_button_mouseup_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.onUpButtonMouseUp();\n    })(\"mouseleave\", function InputNumber_span_3_Template_button_mouseleave_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.onUpButtonMouseLeave();\n    })(\"keydown\", function InputNumber_span_3_Template_button_keydown_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.onUpButtonKeyDown($event);\n    })(\"keyup\", function InputNumber_span_3_Template_button_keyup_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.onUpButtonKeyUp();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"button\", 6);\n    ɵngcc0.ɵɵlistener(\"mousedown\", function InputNumber_span_3_Template_button_mousedown_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.onDownButtonMouseDown($event);\n    })(\"mouseup\", function InputNumber_span_3_Template_button_mouseup_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.onDownButtonMouseUp();\n    })(\"mouseleave\", function InputNumber_span_3_Template_button_mouseleave_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.onDownButtonMouseLeave();\n    })(\"keydown\", function InputNumber_span_3_Template_button_keydown_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.onDownButtonKeyDown($event);\n    })(\"keyup\", function InputNumber_span_3_Template_button_keyup_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.onDownButtonKeyUp();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(ctx_r1.incrementButtonClass);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(10, _c1))(\"icon\", ctx_r1.incrementButtonIcon)(\"disabled\", ctx_r1.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(ctx_r1.decrementButtonClass);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(11, _c2))(\"icon\", ctx_r1.decrementButtonIcon)(\"disabled\", ctx_r1.disabled);\n  }\n}\n\nfunction InputNumber_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r16 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 6);\n    ɵngcc0.ɵɵlistener(\"mousedown\", function InputNumber_button_4_Template_button_mousedown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ctx_r15.onUpButtonMouseDown($event);\n    })(\"mouseup\", function InputNumber_button_4_Template_button_mouseup_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r17 = ɵngcc0.ɵɵnextContext();\n      return ctx_r17.onUpButtonMouseUp();\n    })(\"mouseleave\", function InputNumber_button_4_Template_button_mouseleave_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r18 = ɵngcc0.ɵɵnextContext();\n      return ctx_r18.onUpButtonMouseLeave();\n    })(\"keydown\", function InputNumber_button_4_Template_button_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r19 = ɵngcc0.ɵɵnextContext();\n      return ctx_r19.onUpButtonKeyDown($event);\n    })(\"keyup\", function InputNumber_button_4_Template_button_keyup_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r20 = ɵngcc0.ɵɵnextContext();\n      return ctx_r20.onUpButtonKeyUp();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r2.incrementButtonClass);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(5, _c1))(\"icon\", ctx_r2.incrementButtonIcon)(\"disabled\", ctx_r2.disabled);\n  }\n}\n\nfunction InputNumber_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r22 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 6);\n    ɵngcc0.ɵɵlistener(\"mousedown\", function InputNumber_button_5_Template_button_mousedown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r22);\n      var ctx_r21 = ɵngcc0.ɵɵnextContext();\n      return ctx_r21.onDownButtonMouseDown($event);\n    })(\"mouseup\", function InputNumber_button_5_Template_button_mouseup_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r22);\n      var ctx_r23 = ɵngcc0.ɵɵnextContext();\n      return ctx_r23.onDownButtonMouseUp();\n    })(\"mouseleave\", function InputNumber_button_5_Template_button_mouseleave_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r22);\n      var ctx_r24 = ɵngcc0.ɵɵnextContext();\n      return ctx_r24.onDownButtonMouseLeave();\n    })(\"keydown\", function InputNumber_button_5_Template_button_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r22);\n      var ctx_r25 = ɵngcc0.ɵɵnextContext();\n      return ctx_r25.onDownButtonKeyDown($event);\n    })(\"keyup\", function InputNumber_button_5_Template_button_keyup_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r22);\n      var ctx_r26 = ɵngcc0.ɵɵnextContext();\n      return ctx_r26.onDownButtonKeyUp();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r3.decrementButtonClass);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(5, _c2))(\"icon\", ctx_r3.decrementButtonIcon)(\"disabled\", ctx_r3.disabled);\n  }\n}\n\nvar _c3 = function _c3(a1, a2, a3) {\n  return {\n    \"p-inputnumber p-component\": true,\n    \"p-inputnumber-buttons-stacked\": a1,\n    \"p-inputnumber-buttons-horizontal\": a2,\n    \"p-inputnumber-buttons-vertical\": a3\n  };\n};\n\nvar INPUTNUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return InputNumber;\n  }),\n  multi: true\n};\n\nvar InputNumber = /*#__PURE__*/function () {\n  function InputNumber(el, cd) {\n    _classCallCheck(this, InputNumber);\n\n    this.el = el;\n    this.cd = cd;\n    this.showButtons = false;\n    this.format = true;\n    this.buttonLayout = \"stacked\";\n    this.incrementButtonIcon = 'pi pi-angle-up';\n    this.decrementButtonIcon = 'pi pi-angle-down';\n    this.step = 1;\n    this.onInput = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.onKeyDown = new EventEmitter();\n\n    this.onModelChange = function () {};\n\n    this.onModelTouched = function () {};\n\n    this.groupChar = '';\n    this.prefixChar = '';\n    this.suffixChar = '';\n    this._modeOption = \"decimal\";\n    this._useGroupingOption = true;\n  }\n\n  _createClass(InputNumber, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.constructParser();\n      this.initialized = true;\n    }\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      return {\n        localeMatcher: this.localeMatcher,\n        style: this.mode,\n        currency: this.currency,\n        currencyDisplay: this.currencyDisplay,\n        useGrouping: this.useGrouping,\n        minimumFractionDigits: this.minFractionDigits,\n        maximumFractionDigits: this.maxFractionDigits\n      };\n    }\n  }, {\n    key: \"constructParser\",\n    value: function constructParser() {\n      this.numberFormat = new Intl.NumberFormat(this.locale, this.getOptions());\n\n      var numerals = _toConsumableArray(new Intl.NumberFormat(this.locale, {\n        useGrouping: false\n      }).format(9876543210)).reverse();\n\n      var index = new Map(numerals.map(function (d, i) {\n        return [d, i];\n      }));\n      this._numeral = new RegExp(\"[\".concat(numerals.join(''), \"]\"), 'g');\n      this._decimal = this.getDecimalExpression();\n      this._group = this.getGroupingExpression();\n      this._minusSign = this.getMinusSignExpression();\n      this._currency = this.getCurrencyExpression();\n      this._suffix = this.getSuffixExpression();\n      this._prefix = this.getPrefixExpression();\n\n      this._index = function (d) {\n        return index.get(d);\n      };\n    }\n  }, {\n    key: \"updateConstructParser\",\n    value: function updateConstructParser() {\n      if (this.initialized) {\n        this.constructParser();\n      }\n    }\n  }, {\n    key: \"escapeRegExp\",\n    value: function escapeRegExp(text) {\n      return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    }\n  }, {\n    key: \"getDecimalExpression\",\n    value: function getDecimalExpression() {\n      var formatter = new Intl.NumberFormat(this.locale, {\n        useGrouping: false\n      });\n      return new RegExp(\"[\".concat(formatter.format(1.1).trim().replace(this._numeral, ''), \"]\"), 'g');\n    }\n  }, {\n    key: \"getGroupingExpression\",\n    value: function getGroupingExpression() {\n      var formatter = new Intl.NumberFormat(this.locale, {\n        useGrouping: true\n      });\n      this.groupChar = formatter.format(1000000).trim().replace(this._numeral, '').charAt(0);\n      return new RegExp(\"[\".concat(this.groupChar, \"]\"), 'g');\n    }\n  }, {\n    key: \"getMinusSignExpression\",\n    value: function getMinusSignExpression() {\n      var formatter = new Intl.NumberFormat(this.locale, {\n        useGrouping: false\n      });\n      return new RegExp(\"[\".concat(formatter.format(-1).trim().replace(this._numeral, ''), \"]\"), 'g');\n    }\n  }, {\n    key: \"getCurrencyExpression\",\n    value: function getCurrencyExpression() {\n      if (this.currency) {\n        var formatter = new Intl.NumberFormat(this.locale, {\n          style: 'currency',\n          currency: this.currency,\n          currencyDisplay: this.currencyDisplay\n        });\n        return new RegExp(\"[\".concat(formatter.format(1).replace(/\\s/g, '').replace(this._numeral, '').replace(this._decimal, '').replace(this._group, ''), \"]\"), 'g');\n      }\n\n      return new RegExp(\"[]\", 'g');\n    }\n  }, {\n    key: \"getPrefixExpression\",\n    value: function getPrefixExpression() {\n      if (this.prefix) {\n        this.prefixChar = this.prefix;\n      } else {\n        var formatter = new Intl.NumberFormat(this.locale, {\n          style: this.mode,\n          currency: this.currency,\n          currencyDisplay: this.currencyDisplay\n        });\n        this.prefixChar = formatter.format(1).split('1')[0];\n      }\n\n      return new RegExp(\"\".concat(this.escapeRegExp(this.prefixChar || '')), 'g');\n    }\n  }, {\n    key: \"getSuffixExpression\",\n    value: function getSuffixExpression() {\n      if (this.suffix) {\n        this.suffixChar = this.suffix;\n      } else {\n        var formatter = new Intl.NumberFormat(this.locale, {\n          style: this.mode,\n          currency: this.currency,\n          currencyDisplay: this.currencyDisplay,\n          minimumFractionDigits: 0,\n          maximumFractionDigits: 0\n        });\n        this.suffixChar = formatter.format(1).split('1')[1];\n      }\n\n      return new RegExp(\"\".concat(this.escapeRegExp(this.suffixChar || '')), 'g');\n    }\n  }, {\n    key: \"formatValue\",\n    value: function formatValue(value) {\n      if (value != null) {\n        if (value === '-') {\n          // Minus sign\n          return value;\n        }\n\n        if (this.format) {\n          var formatter = new Intl.NumberFormat(this.locale, this.getOptions());\n          var formattedValue = formatter.format(value);\n\n          if (this.prefix) {\n            formattedValue = this.prefix + formattedValue;\n          }\n\n          if (this.suffix) {\n            formattedValue = formattedValue + this.suffix;\n          }\n\n          return formattedValue;\n        }\n\n        return value.toString();\n      }\n\n      return '';\n    }\n  }, {\n    key: \"parseValue\",\n    value: function parseValue(text) {\n      var filteredText = text.replace(this._suffix, '').replace(this._prefix, '').trim().replace(/\\s/g, '').replace(this._currency, '').replace(this._group, '').replace(this._minusSign, '-').replace(this._decimal, '.').replace(this._numeral, this._index);\n\n      if (filteredText) {\n        if (filteredText === '-') // Minus sign\n          return filteredText;\n        var parsedValue = +filteredText;\n        return isNaN(parsedValue) ? null : parsedValue;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"repeat\",\n    value: function repeat(event, interval, dir) {\n      var _this = this;\n\n      var i = interval || 500;\n      this.clearTimer();\n      this.timer = setTimeout(function () {\n        _this.repeat(event, 40, dir);\n      }, i);\n      this.spin(event, dir);\n    }\n  }, {\n    key: \"spin\",\n    value: function spin(event, dir) {\n      var step = this.step * dir;\n      var currentValue = this.parseValue(this.input.nativeElement.value) || 0;\n      var newValue = this.validateValue(currentValue + step);\n\n      if (this.maxlength && this.maxlength < this.formatValue(newValue).length) {\n        return;\n      }\n\n      this.updateInput(newValue, null, 'spin');\n      this.updateModel(event, newValue);\n      this.handleOnInput(event, currentValue, newValue);\n    }\n  }, {\n    key: \"onUpButtonMouseDown\",\n    value: function onUpButtonMouseDown(event) {\n      this.input.nativeElement.focus();\n      this.repeat(event, null, 1);\n      event.preventDefault();\n    }\n  }, {\n    key: \"onUpButtonMouseUp\",\n    value: function onUpButtonMouseUp() {\n      this.clearTimer();\n    }\n  }, {\n    key: \"onUpButtonMouseLeave\",\n    value: function onUpButtonMouseLeave() {\n      this.clearTimer();\n    }\n  }, {\n    key: \"onUpButtonKeyDown\",\n    value: function onUpButtonKeyDown(event) {\n      if (event.keyCode === 32 || event.keyCode === 13) {\n        this.repeat(event, null, 1);\n      }\n    }\n  }, {\n    key: \"onUpButtonKeyUp\",\n    value: function onUpButtonKeyUp() {\n      this.clearTimer();\n    }\n  }, {\n    key: \"onDownButtonMouseDown\",\n    value: function onDownButtonMouseDown(event) {\n      this.input.nativeElement.focus();\n      this.repeat(event, null, -1);\n      event.preventDefault();\n    }\n  }, {\n    key: \"onDownButtonMouseUp\",\n    value: function onDownButtonMouseUp() {\n      this.clearTimer();\n    }\n  }, {\n    key: \"onDownButtonMouseLeave\",\n    value: function onDownButtonMouseLeave() {\n      this.clearTimer();\n    }\n  }, {\n    key: \"onDownButtonKeyUp\",\n    value: function onDownButtonKeyUp() {\n      this.clearTimer();\n    }\n  }, {\n    key: \"onDownButtonKeyDown\",\n    value: function onDownButtonKeyDown(event) {\n      if (event.keyCode === 32 || event.keyCode === 13) {\n        this.repeat(event, null, -1);\n      }\n    }\n  }, {\n    key: \"onUserInput\",\n    value: function onUserInput(event) {\n      if (this.isSpecialChar) {\n        event.target.value = this.lastValue;\n      }\n\n      this.isSpecialChar = false;\n    }\n  }, {\n    key: \"onInputKeyDown\",\n    value: function onInputKeyDown(event) {\n      this.lastValue = event.target.value;\n\n      if (event.shiftKey || event.altKey) {\n        this.isSpecialChar = true;\n        return;\n      }\n\n      var selectionStart = event.target.selectionStart;\n      var selectionEnd = event.target.selectionEnd;\n      var inputValue = event.target.value;\n      var newValueStr = null;\n\n      if (event.altKey) {\n        event.preventDefault();\n      }\n\n      switch (event.which) {\n        //up\n        case 38:\n          this.spin(event, 1);\n          event.preventDefault();\n          break;\n        //down\n\n        case 40:\n          this.spin(event, -1);\n          event.preventDefault();\n          break;\n        //left\n\n        case 37:\n          if (!this.isNumeralChar(inputValue.charAt(selectionStart - 1))) {\n            event.preventDefault();\n          }\n\n          break;\n        //right\n\n        case 39:\n          if (!this.isNumeralChar(inputValue.charAt(selectionStart))) {\n            event.preventDefault();\n          }\n\n          break;\n        //enter\n\n        case 13:\n          var newValue = this.validateValue(this.parseValue(this.input.nativeElement.value));\n          this.input.nativeElement.value = this.formatValue(newValue);\n          this.input.nativeElement.setAttribute('aria-valuenow', newValue);\n          this.updateModel(event, newValue);\n          break;\n        //backspace\n\n        case 8:\n          {\n            event.preventDefault();\n\n            if (selectionStart === selectionEnd) {\n              var deleteChar = inputValue.charAt(selectionStart - 1);\n              var decimalCharIndex = inputValue.search(this._decimal);\n              this._decimal.lastIndex = 0;\n\n              if (this.isNumeralChar(deleteChar)) {\n                if (this._group.test(deleteChar)) {\n                  this._group.lastIndex = 0;\n                  newValueStr = inputValue.slice(0, selectionStart - 2) + inputValue.slice(selectionStart - 1);\n                } else if (this._decimal.test(deleteChar)) {\n                  this._decimal.lastIndex = 0;\n                  this.input.nativeElement.setSelectionRange(selectionStart - 1, selectionStart - 1);\n                } else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n                  newValueStr = inputValue.slice(0, selectionStart - 1) + '0' + inputValue.slice(selectionStart);\n                } else if (decimalCharIndex > 0 && decimalCharIndex === 1) {\n                  newValueStr = inputValue.slice(0, selectionStart - 1) + '0' + inputValue.slice(selectionStart);\n                  newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n                } else {\n                  newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\n                }\n              }\n\n              this.updateValue(event, newValueStr, null, 'delete-single');\n            } else {\n              newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n              this.updateValue(event, newValueStr, null, 'delete-range');\n            }\n\n            break;\n          }\n        // del\n\n        case 46:\n          event.preventDefault();\n\n          if (selectionStart === selectionEnd) {\n            var _deleteChar = inputValue.charAt(selectionStart);\n\n            var _decimalCharIndex = inputValue.search(this._decimal);\n\n            this._decimal.lastIndex = 0;\n\n            if (this.isNumeralChar(_deleteChar)) {\n              if (this._group.test(_deleteChar)) {\n                this._group.lastIndex = 0;\n                newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 2);\n              } else if (this._decimal.test(_deleteChar)) {\n                this._decimal.lastIndex = 0;\n                this.input.nativeElement.setSelectionRange(selectionStart + 1, selectionStart + 1);\n              } else if (_decimalCharIndex > 0 && selectionStart > _decimalCharIndex) {\n                newValueStr = inputValue.slice(0, selectionStart) + '0' + inputValue.slice(selectionStart + 1);\n              } else if (_decimalCharIndex > 0 && _decimalCharIndex === 1) {\n                newValueStr = inputValue.slice(0, selectionStart) + '0' + inputValue.slice(selectionStart + 1);\n                newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n              } else {\n                newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\n              }\n            }\n\n            this.updateValue(event, newValueStr, null, 'delete-back-single');\n          } else {\n            newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n            this.updateValue(event, newValueStr, null, 'delete-range');\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      this.onKeyDown.emit(event);\n    }\n  }, {\n    key: \"onInputKeyPress\",\n    value: function onInputKeyPress(event) {\n      event.preventDefault();\n      var code = event.which || event.keyCode;\n      var char = String.fromCharCode(code);\n      var isDecimalSign = this.isDecimalSign(char);\n      var isMinusSign = this.isMinusSign(char);\n\n      if (48 <= code && code <= 57 || isMinusSign || isDecimalSign) {\n        this.insert(event, char, {\n          isDecimalSign: isDecimalSign,\n          isMinusSign: isMinusSign\n        });\n      }\n    }\n  }, {\n    key: \"onPaste\",\n    value: function onPaste(event) {\n      event.preventDefault();\n      var data = (event.clipboardData || window['clipboardData']).getData('Text');\n\n      if (data) {\n        var filteredData = this.parseValue(data);\n\n        if (filteredData != null) {\n          this.insert(event, filteredData.toString());\n        }\n      }\n    }\n  }, {\n    key: \"isMinusSign\",\n    value: function isMinusSign(char) {\n      if (this._minusSign.test(char)) {\n        this._minusSign.lastIndex = 0;\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isDecimalSign\",\n    value: function isDecimalSign(char) {\n      if (this._decimal.test(char)) {\n        this._decimal.lastIndex = 0;\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"insert\",\n    value: function insert(event, text) {\n      var sign = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        isDecimalSign: false,\n        isMinusSign: false\n      };\n      var selectionStart = this.input.nativeElement.selectionStart;\n      var selectionEnd = this.input.nativeElement.selectionEnd;\n      var inputValue = this.input.nativeElement.value.trim();\n      var decimalCharIndex = inputValue.search(this._decimal);\n      this._decimal.lastIndex = 0;\n      var minusCharIndex = inputValue.search(this._minusSign);\n      this._minusSign.lastIndex = 0;\n      var newValueStr;\n\n      if (sign.isMinusSign) {\n        if (selectionStart === 0) {\n          newValueStr = inputValue;\n\n          if (minusCharIndex === -1 || selectionEnd !== 0) {\n            newValueStr = this.insertText(inputValue, text, 0, selectionEnd);\n          }\n\n          this.updateValue(event, newValueStr, text, 'insert');\n        }\n      } else if (sign.isDecimalSign) {\n        if (decimalCharIndex > 0 && selectionStart === decimalCharIndex) {\n          this.updateValue(event, inputValue, text, 'insert');\n        } else if (decimalCharIndex > selectionStart && decimalCharIndex < selectionEnd) {\n          newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n          this.updateValue(event, newValueStr, text, 'insert');\n        }\n      } else {\n        var maxFractionDigits = this.numberFormat.resolvedOptions().maximumFractionDigits;\n        var operation = selectionStart !== selectionEnd ? 'range-insert' : 'insert';\n\n        if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n          if (selectionStart + text.length - (decimalCharIndex + 1) <= maxFractionDigits) {\n            newValueStr = inputValue.slice(0, selectionStart) + text + inputValue.slice(selectionStart + text.length);\n            this.updateValue(event, newValueStr, text, operation);\n          }\n        } else {\n          newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n          this.updateValue(event, newValueStr, text, operation);\n        }\n      }\n    }\n  }, {\n    key: \"insertText\",\n    value: function insertText(value, text, start, end) {\n      var textSplit = text.split('.');\n\n      if (textSplit.length == 2) {\n        var decimalCharIndex = value.slice(start, end).search(this._decimal);\n        this._decimal.lastIndex = 0;\n        return decimalCharIndex > 0 ? value.slice(0, start) + this.formatValue(text) + value.slice(end) : value || this.formatValue(text);\n      } else if (end - start === value.length) {\n        return this.formatValue(text);\n      } else if (start === 0) {\n        return text + value.slice(end);\n      } else if (end === value.length) {\n        return value.slice(0, start) + text;\n      } else {\n        return value.slice(0, start) + text + value.slice(end);\n      }\n    }\n  }, {\n    key: \"deleteRange\",\n    value: function deleteRange(value, start, end) {\n      var newValueStr;\n      if (end - start === value.length) newValueStr = '';else if (start === 0) newValueStr = value.slice(end);else if (end === value.length) newValueStr = value.slice(0, start);else newValueStr = value.slice(0, start) + value.slice(end);\n      return newValueStr;\n    }\n  }, {\n    key: \"initCursor\",\n    value: function initCursor() {\n      var selectionStart = this.input.nativeElement.selectionStart;\n      var inputValue = this.input.nativeElement.value;\n      var valueLength = inputValue.length;\n      var index = null;\n      var char = inputValue.charAt(selectionStart);\n\n      if (this.isNumeralChar(char)) {\n        return;\n      } //left\n\n\n      var i = selectionStart - 1;\n\n      while (i >= 0) {\n        char = inputValue.charAt(i);\n\n        if (this.isNumeralChar(char)) {\n          index = i;\n          break;\n        } else {\n          i--;\n        }\n      }\n\n      if (index !== null) {\n        this.input.nativeElement.setSelectionRange(index + 1, index + 1);\n      } else {\n        i = selectionStart + 1;\n\n        while (i < valueLength) {\n          char = inputValue.charAt(i);\n\n          if (this.isNumeralChar(char)) {\n            index = i;\n            break;\n          } else {\n            i++;\n          }\n        }\n\n        if (index !== null) {\n          this.input.nativeElement.setSelectionRange(index, index);\n        }\n      }\n    }\n  }, {\n    key: \"onInputClick\",\n    value: function onInputClick() {\n      this.initCursor();\n    }\n  }, {\n    key: \"isNumeralChar\",\n    value: function isNumeralChar(char) {\n      if (char.length === 1 && (this._numeral.test(char) || this._decimal.test(char) || this._group.test(char) || this._minusSign.test(char))) {\n        this.resetRegex();\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"resetRegex\",\n    value: function resetRegex() {\n      this._numeral.lastIndex = 0;\n      this._decimal.lastIndex = 0;\n      this._group.lastIndex = 0;\n      this._minusSign.lastIndex = 0;\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(event, valueStr, insertedValueStr, operation) {\n      var currentValue = this.input.nativeElement.value;\n      var newValue = null;\n\n      if (valueStr != null) {\n        newValue = this.parseValue(valueStr);\n        this.updateInput(newValue, insertedValueStr, operation);\n      }\n\n      this.handleOnInput(event, currentValue, newValue);\n    }\n  }, {\n    key: \"handleOnInput\",\n    value: function handleOnInput(event, currentValue, newValue) {\n      if (this.isValueChanged(currentValue, newValue)) {\n        this.onInput.emit({\n          originalEvent: event,\n          value: newValue\n        });\n      }\n    }\n  }, {\n    key: \"isValueChanged\",\n    value: function isValueChanged(currentValue, newValue) {\n      if (newValue === null && currentValue !== null) {\n        return true;\n      }\n\n      if (newValue != null) {\n        var parsedCurrentValue = typeof currentValue === 'string' ? this.parseValue(currentValue) : currentValue;\n        return newValue !== parsedCurrentValue;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"validateValue\",\n    value: function validateValue(value) {\n      if (this.min !== null && value < this.min) {\n        return this.min;\n      }\n\n      if (this.max !== null && value > this.max) {\n        return this.max;\n      }\n\n      if (value === '-') {\n        // Minus sign\n        return null;\n      }\n\n      return value;\n    }\n  }, {\n    key: \"updateInput\",\n    value: function updateInput(value, insertedValueStr, operation) {\n      insertedValueStr = insertedValueStr || '';\n      var inputValue = this.input.nativeElement.value;\n      var newValue = this.formatValue(value);\n      var currentLength = inputValue.length;\n\n      if (currentLength === 0) {\n        this.input.nativeElement.value = newValue;\n        this.input.nativeElement.setSelectionRange(0, 0);\n        this.initCursor();\n        var prefixLength = (this.prefixChar || '').length;\n        var selectionEnd = prefixLength + insertedValueStr.length;\n        this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n      } else {\n        var selectionStart = this.input.nativeElement.selectionStart;\n        var _selectionEnd = this.input.nativeElement.selectionEnd;\n\n        if (this.maxlength && this.maxlength < newValue.length) {\n          return;\n        }\n\n        this.input.nativeElement.value = newValue;\n        var newLength = newValue.length;\n\n        if (operation === 'range-insert') {\n          var startValue = this.parseValue((inputValue || '').slice(0, selectionStart));\n          var startValueStr = startValue !== null ? startValue.toString() : '';\n          var startExpr = startValueStr.split('').join(\"(\".concat(this.groupChar, \")?\"));\n          var sRegex = new RegExp(startExpr, 'g');\n          sRegex.test(newValue);\n          var tExpr = insertedValueStr.split('').join(\"(\".concat(this.groupChar, \")?\"));\n          var tRegex = new RegExp(tExpr, 'g');\n          tRegex.test(newValue.slice(sRegex.lastIndex));\n          _selectionEnd = sRegex.lastIndex + tRegex.lastIndex;\n          this.input.nativeElement.setSelectionRange(_selectionEnd, _selectionEnd);\n        } else if (newLength === currentLength) {\n          if (operation === 'insert' || operation === 'delete-back-single') this.input.nativeElement.setSelectionRange(_selectionEnd + 1, _selectionEnd + 1);else if (operation === 'delete-single') this.input.nativeElement.setSelectionRange(_selectionEnd - 1, _selectionEnd - 1);else if (operation === 'delete-range' || operation === 'spin') this.input.nativeElement.setSelectionRange(_selectionEnd, _selectionEnd);\n        } else if (operation === 'delete-back-single') {\n          var prevChar = inputValue.charAt(_selectionEnd - 1);\n          var nextChar = inputValue.charAt(_selectionEnd);\n          var diff = currentLength - newLength;\n\n          var isGroupChar = this._group.test(nextChar);\n\n          if (isGroupChar && diff === 1) {\n            _selectionEnd += 1;\n          } else if (!isGroupChar && this.isNumeralChar(prevChar)) {\n            _selectionEnd += -1 * diff + 1;\n          }\n\n          this._group.lastIndex = 0;\n          this.input.nativeElement.setSelectionRange(_selectionEnd, _selectionEnd);\n        } else {\n          _selectionEnd = _selectionEnd + (newLength - currentLength);\n          this.input.nativeElement.setSelectionRange(_selectionEnd, _selectionEnd);\n        }\n      }\n\n      this.input.nativeElement.setAttribute('aria-valuenow', value);\n    }\n  }, {\n    key: \"onInputFocus\",\n    value: function onInputFocus(event) {\n      this.focused = true;\n      this.onFocus.emit(event);\n    }\n  }, {\n    key: \"onInputBlur\",\n    value: function onInputBlur(event) {\n      this.focused = false;\n      var newValue = this.validateValue(this.parseValue(this.input.nativeElement.value));\n      this.input.nativeElement.value = this.formatValue(newValue);\n      this.input.nativeElement.setAttribute('aria-valuenow', newValue);\n      this.updateModel(event, newValue);\n      this.onBlur.emit(event);\n    }\n  }, {\n    key: \"formattedValue\",\n    value: function formattedValue() {\n      return this.formatValue(this.value);\n    }\n  }, {\n    key: \"updateModel\",\n    value: function updateModel(event, value) {\n      if (this.value !== value) {\n        this.value = value;\n        this.onModelChange(value);\n      }\n\n      this.onModelTouched();\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.value = value;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onModelChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onModelTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(val) {\n      this.disabled = val;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"clearTimer\",\n    value: function clearTimer() {\n      if (this.timer) {\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"locale\",\n    get: function get() {\n      return this._localeOption;\n    },\n    set: function set(localeOption) {\n      this._localeOption = localeOption;\n      this.updateConstructParser();\n    }\n  }, {\n    key: \"localeMatcher\",\n    get: function get() {\n      return this._localeMatcherOption;\n    },\n    set: function set(localeMatcherOption) {\n      this._localeMatcherOption = localeMatcherOption;\n      this.updateConstructParser();\n    }\n  }, {\n    key: \"mode\",\n    get: function get() {\n      return this._modeOption;\n    },\n    set: function set(modeOption) {\n      this._modeOption = modeOption;\n      this.updateConstructParser();\n    }\n  }, {\n    key: \"currency\",\n    get: function get() {\n      return this._currencyOption;\n    },\n    set: function set(currencyOption) {\n      this._currencyOption = currencyOption;\n      this.updateConstructParser();\n    }\n  }, {\n    key: \"currencyDisplay\",\n    get: function get() {\n      return this._currencyDisplayOption;\n    },\n    set: function set(currencyDisplayOption) {\n      this._currencyDisplayOption = currencyDisplayOption;\n      this.updateConstructParser();\n    }\n  }, {\n    key: \"useGrouping\",\n    get: function get() {\n      return this._useGroupingOption;\n    },\n    set: function set(useGroupingOption) {\n      this._useGroupingOption = useGroupingOption;\n      this.updateConstructParser();\n    }\n  }, {\n    key: \"minFractionDigits\",\n    get: function get() {\n      return this._minFractionDigitsOption;\n    },\n    set: function set(minFractionDigitsOption) {\n      this._minFractionDigitsOption = minFractionDigitsOption;\n      this.updateConstructParser();\n    }\n  }, {\n    key: \"maxFractionDigits\",\n    get: function get() {\n      return this._maxFractionDigitsOption;\n    },\n    set: function set(maxFractionDigitsOption) {\n      this._maxFractionDigitsOption = maxFractionDigitsOption;\n      this.updateConstructParser();\n    }\n  }, {\n    key: \"prefix\",\n    get: function get() {\n      return this._prefixOption;\n    },\n    set: function set(prefixOption) {\n      this._prefixOption = prefixOption;\n      this.updateConstructParser();\n    }\n  }, {\n    key: \"suffix\",\n    get: function get() {\n      return this._suffixOption;\n    },\n    set: function set(suffixOption) {\n      this._suffixOption = suffixOption;\n      this.updateConstructParser();\n    }\n  }, {\n    key: \"filled\",\n    get: function get() {\n      return this.value != null && this.value.toString().length > 0;\n    }\n  }]);\n\n  return InputNumber;\n}();\n\nInputNumber.ɵfac = function InputNumber_Factory(t) {\n  return new (t || InputNumber)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nInputNumber.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: InputNumber,\n  selectors: [[\"p-inputNumber\"]],\n  viewQuery: function InputNumber_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function InputNumber_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focused);\n    }\n  },\n  inputs: {\n    showButtons: \"showButtons\",\n    format: \"format\",\n    buttonLayout: \"buttonLayout\",\n    incrementButtonIcon: \"incrementButtonIcon\",\n    decrementButtonIcon: \"decrementButtonIcon\",\n    step: \"step\",\n    locale: \"locale\",\n    localeMatcher: \"localeMatcher\",\n    mode: \"mode\",\n    currency: \"currency\",\n    currencyDisplay: \"currencyDisplay\",\n    useGrouping: \"useGrouping\",\n    minFractionDigits: \"minFractionDigits\",\n    maxFractionDigits: \"maxFractionDigits\",\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n    disabled: \"disabled\",\n    inputId: \"inputId\",\n    styleClass: \"styleClass\",\n    style: \"style\",\n    placeholder: \"placeholder\",\n    size: \"size\",\n    maxlength: \"maxlength\",\n    tabindex: \"tabindex\",\n    title: \"title\",\n    ariaLabel: \"ariaLabel\",\n    ariaRequired: \"ariaRequired\",\n    name: \"name\",\n    required: \"required\",\n    autocomplete: \"autocomplete\",\n    min: \"min\",\n    max: \"max\",\n    incrementButtonClass: \"incrementButtonClass\",\n    decrementButtonClass: \"decrementButtonClass\",\n    inputStyle: \"inputStyle\",\n    inputStyleClass: \"inputStyleClass\"\n  },\n  outputs: {\n    onInput: \"onInput\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\",\n    onKeyDown: \"onKeyDown\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([INPUTNUMBER_VALUE_ACCESSOR])],\n  decls: 6,\n  vars: 30,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"pInputText\", \"\", 3, \"ngClass\", \"ngStyle\", \"value\", \"disabled\", \"input\", \"keydown\", \"keypress\", \"paste\", \"click\", \"focus\", \"blur\"], [\"input\", \"\"], [\"class\", \"p-inputnumber-button-group\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", 3, \"ngClass\", \"class\", \"icon\", \"disabled\", \"mousedown\", \"mouseup\", \"mouseleave\", \"keydown\", \"keyup\", 4, \"ngIf\"], [1, \"p-inputnumber-button-group\"], [\"type\", \"button\", \"pButton\", \"\", 3, \"ngClass\", \"icon\", \"disabled\", \"mousedown\", \"mouseup\", \"mouseleave\", \"keydown\", \"keyup\"]],\n  template: function InputNumber_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"input\", 1, 2);\n      ɵngcc0.ɵɵlistener(\"input\", function InputNumber_Template_input_input_1_listener($event) {\n        return ctx.onUserInput($event);\n      })(\"keydown\", function InputNumber_Template_input_keydown_1_listener($event) {\n        return ctx.onInputKeyDown($event);\n      })(\"keypress\", function InputNumber_Template_input_keypress_1_listener($event) {\n        return ctx.onInputKeyPress($event);\n      })(\"paste\", function InputNumber_Template_input_paste_1_listener($event) {\n        return ctx.onPaste($event);\n      })(\"click\", function InputNumber_Template_input_click_1_listener() {\n        return ctx.onInputClick();\n      })(\"focus\", function InputNumber_Template_input_focus_1_listener($event) {\n        return ctx.onInputFocus($event);\n      })(\"blur\", function InputNumber_Template_input_blur_1_listener($event) {\n        return ctx.onInputBlur($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, InputNumber_span_3_Template, 3, 12, \"span\", 3);\n      ɵngcc0.ɵɵtemplate(4, InputNumber_button_4_Template, 1, 6, \"button\", 4);\n      ɵngcc0.ɵɵtemplate(5, InputNumber_button_5_Template, 1, 6, \"button\", 4);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.styleClass);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction3(26, _c3, ctx.showButtons && ctx.buttonLayout === \"stacked\", ctx.showButtons && ctx.buttonLayout === \"horizontal\", ctx.showButtons && ctx.buttonLayout === \"vertical\"))(\"ngStyle\", ctx.style);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassMap(ctx.inputStyleClass);\n      ɵngcc0.ɵɵproperty(\"ngClass\", \"p-inputnumber-input\")(\"ngStyle\", ctx.inputStyle)(\"value\", ctx.formattedValue())(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵattribute(\"placeholder\", ctx.placeholder)(\"title\", ctx.title)(\"id\", ctx.inputId)(\"size\", ctx.size)(\"name\", ctx.name)(\"autocomplete\", ctx.autocomplete)(\"maxlength\", ctx.maxlength)(\"tabindex\", ctx.tabindex)(\"aria-label\", ctx.ariaLabel)(\"aria-required\", ctx.ariaRequired)(\"required\", ctx.required)(\"aria-valumin\", ctx.min)(\"aria-valuemax\", ctx.max);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showButtons && ctx.buttonLayout === \"stacked\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showButtons && ctx.buttonLayout !== \"stacked\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showButtons && ctx.buttonLayout !== \"stacked\");\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc2.InputText, ɵngcc1.NgIf, ɵngcc3.ButtonDirective],\n  styles: [\".p-inputnumber{display:inline-flex}.p-inputnumber-button{align-items:center;display:flex;flex:0 0 auto;justify-content:center}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-bottom-left-radius:0;border-bottom-right-radius:0;border-top-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-bottom-right-radius:0;border-top-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{border-bottom-left-radius:0;border-top-left-radius:0;order:3}.p-inputnumber-buttons-horizontal .p-inputnumber-input{border-radius:0;order:2}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{border-bottom-right-radius:0;border-top-right-radius:0;order:1}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{border-bottom-left-radius:0;border-bottom-right-radius:0;order:1;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{border-radius:0;order:2;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;order:3;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nInputNumber.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nInputNumber.propDecorators = {\n  showButtons: [{\n    type: Input\n  }],\n  format: [{\n    type: Input\n  }],\n  buttonLayout: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  inputId: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  placeholder: [{\n    type: Input\n  }],\n  size: [{\n    type: Input\n  }],\n  maxlength: [{\n    type: Input\n  }],\n  tabindex: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  ariaLabel: [{\n    type: Input\n  }],\n  ariaRequired: [{\n    type: Input\n  }],\n  name: [{\n    type: Input\n  }],\n  required: [{\n    type: Input\n  }],\n  autocomplete: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  incrementButtonClass: [{\n    type: Input\n  }],\n  decrementButtonClass: [{\n    type: Input\n  }],\n  incrementButtonIcon: [{\n    type: Input\n  }],\n  decrementButtonIcon: [{\n    type: Input\n  }],\n  step: [{\n    type: Input\n  }],\n  inputStyle: [{\n    type: Input\n  }],\n  inputStyleClass: [{\n    type: Input\n  }],\n  input: [{\n    type: ViewChild,\n    args: ['input']\n  }],\n  onInput: [{\n    type: Output\n  }],\n  onFocus: [{\n    type: Output\n  }],\n  onBlur: [{\n    type: Output\n  }],\n  onKeyDown: [{\n    type: Output\n  }],\n  locale: [{\n    type: Input\n  }],\n  localeMatcher: [{\n    type: Input\n  }],\n  mode: [{\n    type: Input\n  }],\n  currency: [{\n    type: Input\n  }],\n  currencyDisplay: [{\n    type: Input\n  }],\n  useGrouping: [{\n    type: Input\n  }],\n  minFractionDigits: [{\n    type: Input\n  }],\n  maxFractionDigits: [{\n    type: Input\n  }],\n  prefix: [{\n    type: Input\n  }],\n  suffix: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(InputNumber, [{\n    type: Component,\n    args: [{\n      selector: 'p-inputNumber',\n      template: \"\\n        <span [ngClass]=\\\"{'p-inputnumber p-component': true,'p-inputnumber-buttons-stacked': this.showButtons && this.buttonLayout === 'stacked',\\n                'p-inputnumber-buttons-horizontal': this.showButtons && this.buttonLayout === 'horizontal', 'p-inputnumber-buttons-vertical': this.showButtons && this.buttonLayout === 'vertical'}\\\"\\n                [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <input #input [ngClass]=\\\"'p-inputnumber-input'\\\" [ngStyle]=\\\"inputStyle\\\" [class]=\\\"inputStyleClass\\\" pInputText [value]=\\\"formattedValue()\\\" [attr.placeholder]=\\\"placeholder\\\" [attr.title]=\\\"title\\\" [attr.id]=\\\"inputId\\\"\\n                [attr.size]=\\\"size\\\" [attr.name]=\\\"name\\\" [attr.autocomplete]=\\\"autocomplete\\\" [attr.maxlength]=\\\"maxlength\\\" [attr.tabindex]=\\\"tabindex\\\" [attr.aria-label]=\\\"ariaLabel\\\"\\n                [attr.aria-required]=\\\"ariaRequired\\\" [disabled]=\\\"disabled\\\" [attr.required]=\\\"required\\\" [attr.aria-valumin]=\\\"min\\\" [attr.aria-valuemax]=\\\"max\\\"\\n                (input)=\\\"onUserInput($event)\\\" (keydown)=\\\"onInputKeyDown($event)\\\" (keypress)=\\\"onInputKeyPress($event)\\\" (paste)=\\\"onPaste($event)\\\" (click)=\\\"onInputClick()\\\"\\n                (focus)=\\\"onInputFocus($event)\\\" (blur)=\\\"onInputBlur($event)\\\">\\n            <span class=\\\"p-inputnumber-button-group\\\" *ngIf=\\\"showButtons && buttonLayout === 'stacked'\\\">\\n                <button type=\\\"button\\\" pButton [ngClass]=\\\"{'p-inputnumber-button p-inputnumber-button-up': true}\\\" [class]=\\\"incrementButtonClass\\\" [icon]=\\\"incrementButtonIcon\\\" [disabled]=\\\"disabled\\\"\\n                    (mousedown)=\\\"this.onUpButtonMouseDown($event)\\\" (mouseup)=\\\"onUpButtonMouseUp()\\\" (mouseleave)=\\\"onUpButtonMouseLeave()\\\" (keydown)=\\\"onUpButtonKeyDown($event)\\\" (keyup)=\\\"onUpButtonKeyUp()\\\"></button>\\n                <button type=\\\"button\\\" pButton [ngClass]=\\\"{'p-inputnumber-button p-inputnumber-button-down': true}\\\" [class]=\\\"decrementButtonClass\\\" [icon]=\\\"decrementButtonIcon\\\" [disabled]=\\\"disabled\\\"\\n                    (mousedown)=\\\"this.onDownButtonMouseDown($event)\\\" (mouseup)=\\\"onDownButtonMouseUp()\\\" (mouseleave)=\\\"onDownButtonMouseLeave()\\\" (keydown)=\\\"onDownButtonKeyDown($event)\\\" (keyup)=\\\"onDownButtonKeyUp()\\\"></button>\\n            </span>\\n            <button type=\\\"button\\\" pButton [ngClass]=\\\"{'p-inputnumber-button p-inputnumber-button-up': true}\\\" [class]=\\\"incrementButtonClass\\\" [icon]=\\\"incrementButtonIcon\\\" *ngIf=\\\"showButtons && buttonLayout !== 'stacked'\\\" [disabled]=\\\"disabled\\\"\\n                (mousedown)=\\\"this.onUpButtonMouseDown($event)\\\" (mouseup)=\\\"onUpButtonMouseUp()\\\" (mouseleave)=\\\"onUpButtonMouseLeave()\\\" (keydown)=\\\"onUpButtonKeyDown($event)\\\" (keyup)=\\\"onUpButtonKeyUp()\\\"></button>\\n            <button type=\\\"button\\\" pButton [ngClass]=\\\"{'p-inputnumber-button p-inputnumber-button-down': true}\\\" [class]=\\\"decrementButtonClass\\\" [icon]=\\\"decrementButtonIcon\\\" *ngIf=\\\"showButtons && buttonLayout !== 'stacked'\\\" [disabled]=\\\"disabled\\\"\\n                (mousedown)=\\\"this.onDownButtonMouseDown($event)\\\" (mouseup)=\\\"onDownButtonMouseUp()\\\" (mouseleave)=\\\"onDownButtonMouseLeave()\\\" (keydown)=\\\"onDownButtonKeyDown($event)\\\" (keyup)=\\\"onDownButtonKeyUp()\\\"></button>\\n        </span>\\n    \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [INPUTNUMBER_VALUE_ACCESSOR],\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': 'focused'\n      },\n      styles: [\".p-inputnumber{display:inline-flex}.p-inputnumber-button{align-items:center;display:flex;flex:0 0 auto;justify-content:center}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button .p-button-label,.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button .p-button-label{display:none}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-up{border-bottom-left-radius:0;border-bottom-right-radius:0;border-top-left-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-input{border-bottom-right-radius:0;border-top-right-radius:0}.p-inputnumber-buttons-stacked .p-button.p-inputnumber-button-down{border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:0;padding:0}.p-inputnumber-buttons-stacked .p-inputnumber-button-group{display:flex;flex-direction:column}.p-inputnumber-buttons-stacked .p-inputnumber-button-group .p-button.p-inputnumber-button{flex:1 1 auto}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-up{border-bottom-left-radius:0;border-top-left-radius:0;order:3}.p-inputnumber-buttons-horizontal .p-inputnumber-input{border-radius:0;order:2}.p-inputnumber-buttons-horizontal .p-button.p-inputnumber-button-down{border-bottom-right-radius:0;border-top-right-radius:0;order:1}.p-inputnumber-buttons-vertical{flex-direction:column}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-up{border-bottom-left-radius:0;border-bottom-right-radius:0;order:1;width:100%}.p-inputnumber-buttons-vertical .p-inputnumber-input{border-radius:0;order:2;text-align:center}.p-inputnumber-buttons-vertical .p-button.p-inputnumber-button-down{border-top-left-radius:0;border-top-right-radius:0;order:3;width:100%}.p-inputnumber-input{flex:1 1 auto}.p-fluid .p-inputnumber{width:100%}.p-fluid .p-inputnumber .p-inputnumber-input{width:1%}.p-fluid .p-inputnumber-buttons-vertical .p-inputnumber-input{width:100%}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    showButtons: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    buttonLayout: [{\n      type: Input\n    }],\n    incrementButtonIcon: [{\n      type: Input\n    }],\n    decrementButtonIcon: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    onInput: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onKeyDown: [{\n      type: Output\n    }],\n    locale: [{\n      type: Input\n    }],\n    localeMatcher: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    currency: [{\n      type: Input\n    }],\n    currencyDisplay: [{\n      type: Input\n    }],\n    useGrouping: [{\n      type: Input\n    }],\n    minFractionDigits: [{\n      type: Input\n    }],\n    maxFractionDigits: [{\n      type: Input\n    }],\n    prefix: [{\n      type: Input\n    }],\n    suffix: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaRequired: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    autocomplete: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    incrementButtonClass: [{\n      type: Input\n    }],\n    decrementButtonClass: [{\n      type: Input\n    }],\n    inputStyle: [{\n      type: Input\n    }],\n    inputStyleClass: [{\n      type: Input\n    }],\n    input: [{\n      type: ViewChild,\n      args: ['input']\n    }]\n  });\n})();\n\nvar InputNumberModule = function InputNumberModule() {\n  _classCallCheck(this, InputNumberModule);\n};\n\nInputNumberModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: InputNumberModule\n});\nInputNumberModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function InputNumberModule_Factory(t) {\n    return new (t || InputNumberModule)();\n  },\n  imports: [[CommonModule, InputTextModule, ButtonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InputNumberModule, {\n    declarations: function declarations() {\n      return [InputNumber];\n    },\n    imports: function imports() {\n      return [CommonModule, InputTextModule, ButtonModule];\n    },\n    exports: function exports() {\n      return [InputNumber];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(InputNumberModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, InputTextModule, ButtonModule],\n      exports: [InputNumber],\n      declarations: [InputNumber]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { INPUTNUMBER_VALUE_ACCESSOR, InputNumber, InputNumberModule };","map":{"version":3,"sources":["../../src/app/components/inputnumber/inputnumber.ts","../../src/app/components/inputnumber/primeng-inputnumber.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport {NgModule,Component,ChangeDetectionStrategy, Input, ElementRef, ViewChild, OnInit, EventEmitter, Output, forwardRef, ViewEncapsulation, ChangeDetectorRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {InputTextModule} from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const INPUTNUMBER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputNumber),\n    multi: true\n};\n@Component({\n    selector: 'p-inputNumber',\n    template: `\n        <span [ngClass]=\"{'p-inputnumber p-component': true,'p-inputnumber-buttons-stacked': this.showButtons && this.buttonLayout === 'stacked',\n                'p-inputnumber-buttons-horizontal': this.showButtons && this.buttonLayout === 'horizontal', 'p-inputnumber-buttons-vertical': this.showButtons && this.buttonLayout === 'vertical'}\"\n                [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input #input [ngClass]=\"'p-inputnumber-input'\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" pInputText [value]=\"formattedValue()\" [attr.placeholder]=\"placeholder\" [attr.title]=\"title\" [attr.id]=\"inputId\"\n                [attr.size]=\"size\" [attr.name]=\"name\" [attr.autocomplete]=\"autocomplete\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-required]=\"ariaRequired\" [disabled]=\"disabled\" [attr.required]=\"required\" [attr.aria-valumin]=\"min\" [attr.aria-valuemax]=\"max\"\n                (input)=\"onUserInput($event)\" (keydown)=\"onInputKeyDown($event)\" (keypress)=\"onInputKeyPress($event)\" (paste)=\"onPaste($event)\" (click)=\"onInputClick()\"\n                (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\">\n            <span class=\"p-inputnumber-button-group\" *ngIf=\"showButtons && buttonLayout === 'stacked'\">\n                <button type=\"button\" pButton [ngClass]=\"{'p-inputnumber-button p-inputnumber-button-up': true}\" [class]=\"incrementButtonClass\" [icon]=\"incrementButtonIcon\" [disabled]=\"disabled\"\n                    (mousedown)=\"this.onUpButtonMouseDown($event)\" (mouseup)=\"onUpButtonMouseUp()\" (mouseleave)=\"onUpButtonMouseLeave()\" (keydown)=\"onUpButtonKeyDown($event)\" (keyup)=\"onUpButtonKeyUp()\"></button>\n                <button type=\"button\" pButton [ngClass]=\"{'p-inputnumber-button p-inputnumber-button-down': true}\" [class]=\"decrementButtonClass\" [icon]=\"decrementButtonIcon\" [disabled]=\"disabled\"\n                    (mousedown)=\"this.onDownButtonMouseDown($event)\" (mouseup)=\"onDownButtonMouseUp()\" (mouseleave)=\"onDownButtonMouseLeave()\" (keydown)=\"onDownButtonKeyDown($event)\" (keyup)=\"onDownButtonKeyUp()\"></button>\n            </span>\n            <button type=\"button\" pButton [ngClass]=\"{'p-inputnumber-button p-inputnumber-button-up': true}\" [class]=\"incrementButtonClass\" [icon]=\"incrementButtonIcon\" *ngIf=\"showButtons && buttonLayout !== 'stacked'\" [disabled]=\"disabled\"\n                (mousedown)=\"this.onUpButtonMouseDown($event)\" (mouseup)=\"onUpButtonMouseUp()\" (mouseleave)=\"onUpButtonMouseLeave()\" (keydown)=\"onUpButtonKeyDown($event)\" (keyup)=\"onUpButtonKeyUp()\"></button>\n            <button type=\"button\" pButton [ngClass]=\"{'p-inputnumber-button p-inputnumber-button-down': true}\" [class]=\"decrementButtonClass\" [icon]=\"decrementButtonIcon\" *ngIf=\"showButtons && buttonLayout !== 'stacked'\" [disabled]=\"disabled\"\n                (mousedown)=\"this.onDownButtonMouseDown($event)\" (mouseup)=\"onDownButtonMouseUp()\" (mouseleave)=\"onDownButtonMouseLeave()\" (keydown)=\"onDownButtonKeyDown($event)\" (keyup)=\"onDownButtonKeyUp()\"></button>\n        </span>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [INPUTNUMBER_VALUE_ACCESSOR],\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./inputnumber.css'],\n    host: {\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': 'focused'\n    }\n})\nexport class InputNumber implements OnInit,ControlValueAccessor {\n\n    @Input() showButtons: boolean = false;\n\n    @Input() format: boolean = true;\n\n    @Input() buttonLayout: string = \"stacked\";\n\n    @Input() disabled: boolean;\n\n    @Input() inputId: string;\n\n    @Input() styleClass: string;\n\n    @Input() style: any;\n\n    @Input() placeholder: string;\n\n    @Input() size: number;\n\n    @Input() maxlength: number;\n\n    @Input() tabindex: string;\n\n    @Input() title: string;\n\n    @Input() ariaLabel: string;\n\n    @Input() ariaRequired: boolean;\n\n    @Input() name: string;\n\n    @Input() required: boolean;\n\n    @Input() autocomplete: string;\n\n    @Input() min: number;\n\n    @Input() max: number;\n\n    @Input() incrementButtonClass: string;\n\n    @Input() decrementButtonClass: string;\n\n    @Input() incrementButtonIcon: string = 'pi pi-angle-up';\n\n    @Input() decrementButtonIcon: string = 'pi pi-angle-down';\n\n    @Input() step: number = 1;\n\n    @Input() inputStyle: any;\n\n    @Input() inputStyleClass: string;\n\n    @ViewChild('input') input: ElementRef;\n\n    @Output() onInput: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n\n    @Output() onKeyDown: EventEmitter<any> = new EventEmitter();\n\n    value: number;\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n    focused: boolean;\n\n    initialized: boolean;\n\n    groupChar: string = '';\n\n    prefixChar: string = '';\n\n    suffixChar: string = '';\n\n    isSpecialChar: boolean;\n\n    timer: any;\n\n    lastValue: string;\n\n    _numeral: any;\n\n    numberFormat: any;\n\n    _decimal: any;\n\n    _group: any;\n\n    _minusSign: any;\n\n    _currency: any;\n\n    _prefix: any;\n\n    _suffix: any;\n\n    _index: any;\n\n    _localeOption: string;\n\n    _localeMatcherOption: string;\n\n    _modeOption: string = \"decimal\";\n\n    _currencyOption: string;\n\n    _currencyDisplayOption: string;\n\n    _useGroupingOption: boolean = true;\n\n    _minFractionDigitsOption: number;\n\n    _maxFractionDigitsOption: number;\n\n    _prefixOption: string;\n\n    _suffixOption: string;\n\n    @Input() get locale(): string {\n        return this._localeOption;\n    }\n\n    set locale(localeOption: string) {\n        this._localeOption = localeOption;\n        this.updateConstructParser();\n    }\n\n    @Input() get localeMatcher(): string {\n        return this._localeMatcherOption;\n    }\n\n    set localeMatcher(localeMatcherOption: string) {\n        this._localeMatcherOption = localeMatcherOption;\n        this.updateConstructParser();\n    }\n\n    @Input() get mode(): string {\n        return this._modeOption;\n    }\n\n    set mode(modeOption: string) {\n        this._modeOption = modeOption;\n        this.updateConstructParser();\n    }\n\n    @Input() get currency(): string {\n        return this._currencyOption;\n    }\n\n    set currency(currencyOption: string) {\n        this._currencyOption = currencyOption;\n        this.updateConstructParser();\n    }\n\n    @Input() get currencyDisplay(): string {\n        return this._currencyDisplayOption;\n    }\n\n    set currencyDisplay(currencyDisplayOption: string) {\n        this._currencyDisplayOption = currencyDisplayOption;\n        this.updateConstructParser();\n    }\n\n    @Input() get useGrouping(): boolean {\n        return this._useGroupingOption;\n    }\n\n    set useGrouping(useGroupingOption: boolean) {\n        this._useGroupingOption = useGroupingOption;\n        this.updateConstructParser();\n    }\n\n    @Input() get minFractionDigits(): number {\n        return this._minFractionDigitsOption;\n    }\n\n    set minFractionDigits(minFractionDigitsOption: number) {\n        this._minFractionDigitsOption = minFractionDigitsOption;\n        this.updateConstructParser();\n    }\n\n    @Input() get maxFractionDigits(): number {\n        return this._maxFractionDigitsOption;\n    }\n\n    set maxFractionDigits(maxFractionDigitsOption: number) {\n        this._maxFractionDigitsOption = maxFractionDigitsOption;\n        this.updateConstructParser();\n    }\n\n    @Input() get prefix(): string {\n        return this._prefixOption;\n    }\n\n    set prefix(prefixOption: string) {\n        this._prefixOption = prefixOption;\n        this.updateConstructParser();\n    }\n\n    @Input() get suffix(): string {\n        return this._suffixOption;\n    }\n\n    set suffix(suffixOption: string) {\n        this._suffixOption = suffixOption;\n        this.updateConstructParser();\n    }\n\n    constructor(public el: ElementRef, private cd: ChangeDetectorRef) { }\n\n    ngOnInit() {\n        this.constructParser();\n\n        this.initialized = true;\n    }\n\n    getOptions() {\n        return {\n            localeMatcher: this.localeMatcher,\n            style: this.mode,\n            currency: this.currency,\n            currencyDisplay: this.currencyDisplay,\n            useGrouping: this.useGrouping,\n            minimumFractionDigits: this.minFractionDigits,\n            maximumFractionDigits: this.maxFractionDigits\n        };\n    }\n\n    constructParser() {\n        this.numberFormat = new Intl.NumberFormat(this.locale, this.getOptions());\n        const numerals = [...new Intl.NumberFormat(this.locale, {useGrouping: false}).format(9876543210)].reverse();\n        const index = new Map(numerals.map((d, i) => [d, i]));\n        this._numeral = new RegExp(`[${numerals.join('')}]`, 'g');\n        this._decimal = this.getDecimalExpression();\n        this._group = this.getGroupingExpression();\n        this._minusSign = this.getMinusSignExpression();\n        this._currency = this.getCurrencyExpression();\n        this._suffix = this.getSuffixExpression();\n        this._prefix = this.getPrefixExpression();\n        this._index = d => index.get(d);\n    }\n\n    updateConstructParser() {\n        if (this.initialized) {\n            this.constructParser();\n        }\n    }\n\n    escapeRegExp(text) {\n        return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    }\n\n    getDecimalExpression() {\n        const formatter = new Intl.NumberFormat(this.locale, {useGrouping: false});\n        return new RegExp(`[${formatter.format(1.1).trim().replace(this._numeral, '')}]`, 'g');\n    }\n\n    getGroupingExpression() {\n        const formatter = new Intl.NumberFormat(this.locale, {useGrouping: true});\n        this.groupChar = formatter.format(1000000).trim().replace(this._numeral, '').charAt(0);\n        return new RegExp(`[${this.groupChar}]`, 'g');\n    }\n\n    getMinusSignExpression() {\n        const formatter = new Intl.NumberFormat(this.locale, {useGrouping: false});\n        return new RegExp(`[${formatter.format(-1).trim().replace(this._numeral, '')}]`, 'g');\n    }\n\n    getCurrencyExpression() {\n        if (this.currency) {\n            const formatter = new Intl.NumberFormat(this.locale, {style: 'currency', currency: this.currency, currencyDisplay: this.currencyDisplay});\n            return new RegExp(`[${formatter.format(1).replace(/\\s/g, '').replace(this._numeral, '').replace(this._decimal, '').replace(this._group, '')}]`, 'g');\n        }\n\n        return new RegExp(`[]`,'g');\n    }\n\n    getPrefixExpression() {\n        if (this.prefix) {\n            this.prefixChar = this.prefix;\n        }\n        else {\n            const formatter = new Intl.NumberFormat(this.locale, {style: this.mode, currency: this.currency, currencyDisplay: this.currencyDisplay});\n            this.prefixChar = formatter.format(1).split('1')[0];\n        }\n\n        return new RegExp(`${this.escapeRegExp(this.prefixChar||'')}`, 'g');\n    }\n\n    getSuffixExpression() {\n        if (this.suffix) {\n            this.suffixChar = this.suffix;\n        }\n        else {\n            const formatter = new Intl.NumberFormat(this.locale, {style: this.mode, currency: this.currency, currencyDisplay: this.currencyDisplay,\n                minimumFractionDigits: 0, maximumFractionDigits: 0});\n            this.suffixChar = formatter.format(1).split('1')[1];\n        }\n\n        return new RegExp(`${this.escapeRegExp(this.suffixChar||'')}`, 'g');\n    }\n\n    formatValue(value) {\n        if (value != null) {\n            if (value === '-') { // Minus sign\n                return value;\n            }\n\n            if (this.format) {\n                let formatter = new Intl.NumberFormat(this.locale, this.getOptions());\n                let formattedValue = formatter.format(value);\n                if (this.prefix) {\n                    formattedValue = this.prefix + formattedValue;\n                }\n\n                if (this.suffix) {\n                    formattedValue = formattedValue + this.suffix;\n                }\n\n                return formattedValue;\n            }\n\n            return value.toString();\n        }\n\n        return '';\n    }\n\n    parseValue(text) {\n        let filteredText = text\n                            .replace(this._suffix, '')\n                            .replace(this._prefix, '')\n                            .trim()\n                            .replace(/\\s/g, '')\n                            .replace(this._currency, '')\n                            .replace(this._group, '')\n                            .replace(this._minusSign, '-')\n                            .replace(this._decimal, '.')\n                            .replace(this._numeral, this._index);\n\n        if (filteredText) {\n            if (filteredText === '-') // Minus sign\n                return filteredText;\n\n            let parsedValue = +filteredText;\n            return isNaN(parsedValue) ? null : parsedValue;\n        }\n\n        return null;\n    }\n\n    repeat(event, interval, dir) {\n        let i = interval || 500;\n\n        this.clearTimer();\n        this.timer = setTimeout(() => {\n            this.repeat(event, 40, dir);\n        }, i);\n\n        this.spin(event, dir);\n    }\n\n    spin(event, dir) {\n        let step = this.step * dir;\n        let currentValue = this.parseValue(this.input.nativeElement.value) || 0;\n        let newValue = this.validateValue(currentValue + step);\n        if (this.maxlength && this.maxlength < this.formatValue(newValue).length) {\n            return;\n        }\n\n        this.updateInput(newValue, null, 'spin');\n        this.updateModel(event, newValue);\n\n        this.handleOnInput(event, currentValue, newValue);\n    }\n\n    onUpButtonMouseDown(event) {\n        this.input.nativeElement.focus();\n        this.repeat(event, null, 1);\n        event.preventDefault();\n    }\n\n    onUpButtonMouseUp() {\n        this.clearTimer();\n    }\n\n    onUpButtonMouseLeave() {\n        this.clearTimer();\n    }\n\n    onUpButtonKeyDown(event) {\n        if (event.keyCode === 32 || event.keyCode === 13) {\n            this.repeat(event, null, 1);\n        }\n    }\n\n    onUpButtonKeyUp() {\n        this.clearTimer();\n    }\n\n    onDownButtonMouseDown(event) {\n        this.input.nativeElement.focus();\n        this.repeat(event, null, -1);\n        event.preventDefault();\n    }\n\n    onDownButtonMouseUp() {\n        this.clearTimer();\n    }\n\n    onDownButtonMouseLeave() {\n        this.clearTimer();\n    }\n\n    onDownButtonKeyUp() {\n        this.clearTimer();\n    }\n\n    onDownButtonKeyDown(event) {\n        if (event.keyCode === 32 || event.keyCode === 13) {\n            this.repeat(event, null, -1);\n        }\n    }\n\n    onUserInput(event) {\n        if (this.isSpecialChar) {\n            event.target.value = this.lastValue;\n        }\n        this.isSpecialChar = false;\n    }\n\n    onInputKeyDown(event) {\n        this.lastValue = event.target.value;\n        if (event.shiftKey || event.altKey) {\n            this.isSpecialChar = true;\n            return;\n        }\n\n        let selectionStart = event.target.selectionStart;\n        let selectionEnd = event.target.selectionEnd;\n        let inputValue = event.target.value;\n        let newValueStr = null;\n\n        if (event.altKey) {\n            event.preventDefault();\n        }\n\n        switch (event.which) {\n            //up\n            case 38:\n                this.spin(event, 1);\n                event.preventDefault();\n            break;\n\n            //down\n            case 40:\n                this.spin(event, -1);\n                event.preventDefault();\n            break;\n\n            //left\n            case 37:\n                if (!this.isNumeralChar(inputValue.charAt(selectionStart - 1))) {\n                    event.preventDefault();\n                }\n            break;\n\n            //right\n            case 39:\n                if (!this.isNumeralChar(inputValue.charAt(selectionStart))) {\n                    event.preventDefault();\n                }\n            break;\n\n            //enter\n            case 13:\n                let newValue = this.validateValue(this.parseValue(this.input.nativeElement.value));\n                this.input.nativeElement.value = this.formatValue(newValue);\n                this.input.nativeElement.setAttribute('aria-valuenow', newValue);\n                this.updateModel(event, newValue);\n            break;\n\n            //backspace\n            case 8: {\n                event.preventDefault();\n\n                if (selectionStart === selectionEnd) {\n                    let deleteChar = inputValue.charAt(selectionStart - 1);\n                    let decimalCharIndex = inputValue.search(this._decimal);\n                    this._decimal.lastIndex = 0;\n\n                    if (this.isNumeralChar(deleteChar)) {\n                        if (this._group.test(deleteChar)) {\n                            this._group.lastIndex = 0;\n                            newValueStr = inputValue.slice(0, selectionStart - 2) + inputValue.slice(selectionStart - 1);\n                        }\n                        else if (this._decimal.test(deleteChar)) {\n                            this._decimal.lastIndex = 0;\n                            this.input.nativeElement.setSelectionRange(selectionStart - 1, selectionStart - 1);\n                        }\n                        else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + '0' + inputValue.slice(selectionStart);\n                        }\n                        else if (decimalCharIndex > 0 && decimalCharIndex === 1) {\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + '0' + inputValue.slice(selectionStart);\n                            newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n                        }\n                        else {\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\n                        }\n                    }\n\n                    this.updateValue(event, newValueStr, null, 'delete-single');\n                }\n                else {\n                    newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n                    this.updateValue(event, newValueStr, null, 'delete-range');\n                }\n\n                break;\n            }\n\n            // del\n            case 46:\n                event.preventDefault();\n\n                if (selectionStart === selectionEnd) {\n                    let deleteChar = inputValue.charAt(selectionStart);\n                    let decimalCharIndex = inputValue.search(this._decimal);\n                    this._decimal.lastIndex = 0;\n\n                    if (this.isNumeralChar(deleteChar)) {\n                        if (this._group.test(deleteChar)) {\n                            this._group.lastIndex = 0;\n                            newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 2);\n                        }\n                        else if (this._decimal.test(deleteChar)) {\n                            this._decimal.lastIndex = 0;\n                            this.input.nativeElement.setSelectionRange(selectionStart + 1, selectionStart + 1);\n                        }\n                        else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n                            newValueStr = inputValue.slice(0, selectionStart) + '0' + inputValue.slice(selectionStart + 1);\n                        }\n                        else if (decimalCharIndex > 0 && decimalCharIndex === 1) {\n                            newValueStr = inputValue.slice(0, selectionStart) + '0' + inputValue.slice(selectionStart + 1);\n                            newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\n                        }\n                        else {\n                            newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\n                        }\n                    }\n\n                    this.updateValue(event, newValueStr, null, 'delete-back-single');\n                }\n                else {\n                    newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\n                    this.updateValue(event, newValueStr, null, 'delete-range');\n                }\n            break;\n\n            default:\n            break;\n        }\n\n        this.onKeyDown.emit(event);\n    }\n\n    onInputKeyPress(event) {\n        event.preventDefault();\n        let code = event.which || event.keyCode;\n        let char = String.fromCharCode(code);\n        const isDecimalSign = this.isDecimalSign(char);\n        const isMinusSign = this.isMinusSign(char);\n\n        if ((48 <= code && code <= 57) || isMinusSign || isDecimalSign) {\n            this.insert(event, char, { isDecimalSign, isMinusSign });\n        }\n    }\n\n    onPaste(event) {\n        event.preventDefault();\n        let data = (event.clipboardData || window['clipboardData']).getData('Text');\n        if (data) {\n            let filteredData = this.parseValue(data);\n            if (filteredData != null) {\n                this.insert(event, filteredData.toString());\n            }\n        }\n    }\n\n    isMinusSign(char) {\n        if (this._minusSign.test(char)) {\n            this._minusSign.lastIndex = 0;\n            return true;\n        }\n\n        return false;\n    }\n\n    isDecimalSign(char) {\n        if (this._decimal.test(char)) {\n            this._decimal.lastIndex = 0;\n            return true;\n        }\n\n        return false;\n    }\n\n    insert(event, text, sign = { isDecimalSign: false, isMinusSign: false }) {\n        let selectionStart = this.input.nativeElement.selectionStart;\n        let selectionEnd = this.input.nativeElement.selectionEnd;\n        let inputValue = this.input.nativeElement.value.trim();\n        const decimalCharIndex = inputValue.search(this._decimal);\n        this._decimal.lastIndex = 0;\n        const minusCharIndex = inputValue.search(this._minusSign);\n        this._minusSign.lastIndex = 0;\n        let newValueStr;\n\n        if (sign.isMinusSign) {\n            if (selectionStart === 0) {\n                newValueStr = inputValue;\n                if (minusCharIndex === -1 || selectionEnd !== 0) {\n                    newValueStr = this.insertText(inputValue, text, 0, selectionEnd);\n                }\n\n                this.updateValue(event, newValueStr, text, 'insert');\n            }\n        }\n        else if (sign.isDecimalSign) {\n            if (decimalCharIndex > 0 && selectionStart === decimalCharIndex) {\n                this.updateValue(event, inputValue, text, 'insert');\n            }\n            else if (decimalCharIndex > selectionStart && decimalCharIndex < selectionEnd) {\n                newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n                this.updateValue(event, newValueStr, text, 'insert');\n            }\n        }\n        else {\n            const maxFractionDigits = this.numberFormat.resolvedOptions().maximumFractionDigits;\n            const operation = selectionStart !== selectionEnd ? 'range-insert' : 'insert';\n\n            if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\n                if ((selectionStart + text.length - (decimalCharIndex + 1)) <= maxFractionDigits) {\n                    newValueStr = inputValue.slice(0, selectionStart) + text + inputValue.slice(selectionStart + text.length);\n                    this.updateValue(event, newValueStr, text, operation);\n                }\n            }\n            else {\n                newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\n                this.updateValue(event, newValueStr, text, operation);\n            }\n        }\n    }\n\n    insertText(value, text, start, end) {\n        let textSplit = text.split('.');\n\n        if (textSplit.length == 2) {\n            const decimalCharIndex = value.slice(start, end).search(this._decimal);\n            this._decimal.lastIndex = 0;\n            return (decimalCharIndex > 0) ? value.slice(0, start) + this.formatValue(text) + value.slice(end) : (value || this.formatValue(text));\n        }\n        else if ((end - start) === value.length) {\n            return this.formatValue(text);\n        }\n        else if (start === 0) {\n            return text + value.slice(end);\n        }\n        else if (end === value.length) {\n            return value.slice(0, start) + text;\n        }\n        else {\n            return value.slice(0, start) + text + value.slice(end);\n        }\n    }\n\n    deleteRange(value, start, end) {\n        let newValueStr;\n\n        if ((end - start) === value.length)\n            newValueStr = '';\n        else if (start === 0)\n            newValueStr = value.slice(end);\n        else if (end === value.length)\n            newValueStr = value.slice(0, start);\n        else\n            newValueStr = value.slice(0, start) + value.slice(end);\n\n        return newValueStr;\n    }\n\n    initCursor() {\n        let selectionStart = this.input.nativeElement.selectionStart;\n        let inputValue = this.input.nativeElement.value;\n        let valueLength = inputValue.length;\n        let index = null;\n\n        let char = inputValue.charAt(selectionStart);\n        if (this.isNumeralChar(char)) {\n            return;\n        }\n\n        //left\n        let i = selectionStart - 1;\n        while (i >= 0) {\n            char = inputValue.charAt(i);\n            if (this.isNumeralChar(char)) {\n                index = i;\n                break;\n            }\n            else {\n                i--;\n            }\n        }\n\n        if (index !== null) {\n            this.input.nativeElement.setSelectionRange(index + 1, index + 1);\n        }\n        else {\n            i = selectionStart + 1;\n            while (i < valueLength) {\n                char = inputValue.charAt(i);\n                if (this.isNumeralChar(char)) {\n                    index = i;\n                    break;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            if (index !== null) {\n                this.input.nativeElement.setSelectionRange(index, index);\n            }\n        }\n    }\n\n    onInputClick() {\n        this.initCursor();\n    }\n\n    isNumeralChar(char) {\n        if (char.length === 1 && (this._numeral.test(char) || this._decimal.test(char) || this._group.test(char) || this._minusSign.test(char))) {\n            this.resetRegex();\n            return true;\n        }\n\n        return false;\n    }\n\n    resetRegex() {\n        this._numeral.lastIndex =  0;\n        this._decimal.lastIndex =  0;\n        this._group.lastIndex =  0;\n        this._minusSign.lastIndex =  0;\n    }\n\n    updateValue(event, valueStr, insertedValueStr, operation) {\n        let currentValue = this.input.nativeElement.value;\n        let newValue = null;\n\n        if (valueStr != null) {\n            newValue = this.parseValue(valueStr);\n            this.updateInput(newValue, insertedValueStr, operation);\n        }\n\n        this.handleOnInput(event, currentValue, newValue);\n    }\n\n    handleOnInput(event, currentValue, newValue) {\n        if (this.isValueChanged(currentValue, newValue)) {\n            this.onInput.emit({ originalEvent: event, value: newValue });\n        }\n    }\n\n    isValueChanged(currentValue, newValue) {\n        if (newValue === null && currentValue !== null) {\n            return true;\n        }\n\n        if (newValue != null) {\n            let parsedCurrentValue = (typeof currentValue === 'string') ? this.parseValue(currentValue) : currentValue;\n            return newValue !== parsedCurrentValue;\n        }\n\n        return false;\n    }\n\n    validateValue(value) {\n        if (this.min !== null && value < this.min) {\n            return this.min;\n        }\n\n        if (this.max !== null && value > this.max) {\n            return this.max;\n        }\n\n        if (value === '-') { // Minus sign\n            return null;\n        }\n\n        return value;\n    }\n\n    updateInput(value, insertedValueStr, operation) {\n        insertedValueStr = insertedValueStr || '';\n\n        let inputValue = this.input.nativeElement.value;\n        let newValue = this.formatValue(value);\n        let currentLength = inputValue.length;\n\n        if (currentLength === 0) {\n            this.input.nativeElement.value = newValue;\n            this.input.nativeElement.setSelectionRange(0, 0);\n            this.initCursor();\n            const prefixLength = (this.prefixChar || '').length;\n            const selectionEnd = prefixLength + insertedValueStr.length;\n            this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n        }\n        else {\n            let selectionStart = this.input.nativeElement.selectionStart;\n            let selectionEnd = this.input.nativeElement.selectionEnd;\n            if (this.maxlength && this.maxlength < newValue.length) {\n                return;\n            }\n\n            this.input.nativeElement.value = newValue;\n            let newLength = newValue.length;\n\n            if (operation === 'range-insert') {\n                const startValue = this.parseValue((inputValue || '').slice(0, selectionStart));\n                const startValueStr = startValue !== null ? startValue.toString() : '';\n                const startExpr = startValueStr.split('').join(`(${this.groupChar})?`);\n                const sRegex = new RegExp(startExpr, 'g');\n                sRegex.test(newValue);\n\n                const tExpr = insertedValueStr.split('').join(`(${this.groupChar})?`);\n                const tRegex = new RegExp(tExpr, 'g');\n                tRegex.test(newValue.slice(sRegex.lastIndex));\n\n                selectionEnd = sRegex.lastIndex + tRegex.lastIndex;\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n            else if (newLength === currentLength) {\n                if (operation === 'insert' || operation === 'delete-back-single')\n                    this.input.nativeElement.setSelectionRange(selectionEnd + 1, selectionEnd + 1);\n                else if (operation === 'delete-single')\n                    this.input.nativeElement.setSelectionRange(selectionEnd - 1, selectionEnd - 1);\n                else if (operation === 'delete-range' || operation === 'spin')\n                    this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n            else if (operation === 'delete-back-single') {\n                let prevChar = inputValue.charAt(selectionEnd - 1);\n                let nextChar = inputValue.charAt(selectionEnd);\n                let diff = currentLength - newLength;\n                let isGroupChar = this._group.test(nextChar);\n\n                if (isGroupChar && diff === 1) {\n                    selectionEnd += 1;\n                }\n                else if (!isGroupChar && this.isNumeralChar(prevChar)) {\n                    selectionEnd += (-1 * diff) + 1;\n                }\n\n                this._group.lastIndex = 0;\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n            else {\n                selectionEnd = selectionEnd + (newLength - currentLength);\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\n            }\n        }\n\n        this.input.nativeElement.setAttribute('aria-valuenow', value);\n    }\n\n    onInputFocus(event) {\n        this.focused = true;\n        this.onFocus.emit(event);\n    }\n\n    onInputBlur(event) {\n        this.focused = false;\n\n        let newValue = this.validateValue(this.parseValue(this.input.nativeElement.value));\n        this.input.nativeElement.value = this.formatValue(newValue);\n        this.input.nativeElement.setAttribute('aria-valuenow', newValue);\n        this.updateModel(event, newValue);\n\n        this.onBlur.emit(event);\n    }\n\n    formattedValue() {\n        return this.formatValue(this.value);\n    }\n\n    updateModel(event, value) {\n        if (this.value !== value) {\n            this.value = value;\n            this.onModelChange(value);\n        }\n\n        this.onModelTouched();\n    }\n\n    writeValue(value: any) : void {\n        this.value = value;\n        this.cd.markForCheck();\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n\n    get filled() {\n        return (this.value != null && this.value.toString().length > 0)\n    }\n\n    clearTimer() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,InputTextModule, ButtonModule],\n    exports: [InputNumber],\n    declarations: [InputNumber]\n})\nexport class InputNumberModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}